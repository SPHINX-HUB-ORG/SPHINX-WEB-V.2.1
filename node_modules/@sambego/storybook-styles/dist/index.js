'use strict';

exports.__esModule = true;
exports.StyleDecorator = undefined;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var StyleDecorator = exports.StyleDecorator = function (_Component) {
    _inherits(StyleDecorator, _Component);

    function StyleDecorator(props) {
        _classCallCheck(this, StyleDecorator);

        var _this = _possibleConstructorReturn(this, _Component.call(this, props));

        _this.story = _this.props.story();
        return _this;
    }

    StyleDecorator.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
        if (nextProps.story !== this.props.story) {
            this.story = nextProps.story();
        }
    };

    StyleDecorator.prototype.render = function render() {
        return _react2.default.createElement(
            'div',
            { style: this.props.styles },
            this.story
        );
    };

    return StyleDecorator;
}(_react.Component);

exports.default = function (styles) {
    return function (story) {
        return _react2.default.createElement(StyleDecorator, { story: story, styles: styles });
    };
};