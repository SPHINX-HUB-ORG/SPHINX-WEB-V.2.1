import { isText, createPluginFactory } from '@udecode/plate-common';

const decorateFindReplace = (editor, {
  key,
  type
}) => ([node, path]) => {
  const ranges = [];
  const {
    search
  } = editor.pluginsByKey[key].options;

  if (!search || !isText(node)) {
    return ranges;
  }

  const {
    text
  } = node;
  const parts = text.toLowerCase().split(search.toLowerCase());
  let offset = 0;
  parts.forEach((part, i) => {
    if (i !== 0) {
      ranges.push({
        anchor: {
          path,
          offset: offset - search.length
        },
        focus: {
          path,
          offset
        },
        search,
        [type]: true
      });
    }

    offset = offset + part.length + search.length;
  });
  return ranges;
};

const MARK_SEARCH_HIGHLIGHT = 'search_highlight';
const createFindReplacePlugin = createPluginFactory({
  key: MARK_SEARCH_HIGHLIGHT,
  isLeaf: true,
  decorate: decorateFindReplace
});

export { MARK_SEARCH_HIGHLIGHT, createFindReplacePlugin, decorateFindReplace };
//# sourceMappingURL=index.es.js.map
