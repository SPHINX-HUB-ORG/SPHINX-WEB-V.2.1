{"version":3,"file":"index.js","sources":["../../../../node_modules/is-hotkey/lib/index.js","../src/queries/findMentionInput.ts","../src/queries/isNodeMentionInput.ts","../src/queries/isSelectionInMentionInput.ts","../src/transforms/removeMentionInput.ts","../src/handlers/moveSelectionByOffset.ts","../src/handlers/mentionOnKeyDownHandler.ts","../src/withMention.ts","../src/createMentionPlugin.ts","../src/getMentionOnSelectItem.ts"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/**\n * Constants.\n */\n\n// We make this a function so it can be tested in describe block mocks with Jest.\nvar IS_MAC = () => typeof window != 'undefined' && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);\n\nvar MODIFIERS = {\n  alt: 'altKey',\n  control: 'ctrlKey',\n  meta: 'metaKey',\n  shift: 'shiftKey'\n};\n\n// We make this a function so it can be tested in describe block mocks with Jest.\nvar ALIASES = () => ({\n  add: '+',\n  break: 'pause',\n  cmd: 'meta',\n  command: 'meta',\n  ctl: 'control',\n  ctrl: 'control',\n  del: 'delete',\n  down: 'arrowdown',\n  esc: 'escape',\n  ins: 'insert',\n  left: 'arrowleft',\n  mod: IS_MAC() ? 'meta' : 'control',\n  opt: 'alt',\n  option: 'alt',\n  return: 'enter',\n  right: 'arrowright',\n  space: ' ',\n  spacebar: ' ',\n  up: 'arrowup',\n  win: 'meta',\n  windows: 'meta'\n});\n\nvar CODES = {\n  backspace: 8,\n  tab: 9,\n  enter: 13,\n  shift: 16,\n  control: 17,\n  alt: 18,\n  pause: 19,\n  capslock: 20,\n  escape: 27,\n  ' ': 32,\n  pageup: 33,\n  pagedown: 34,\n  end: 35,\n  home: 36,\n  arrowleft: 37,\n  arrowup: 38,\n  arrowright: 39,\n  arrowdown: 40,\n  insert: 45,\n  delete: 46,\n  meta: 91,\n  numlock: 144,\n  scrolllock: 145,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  '\\'': 222\n};\n\nfor (var f = 1; f < 20; f++) {\n  CODES['f' + f] = 111 + f;\n}\n\n/**\n * Is hotkey?\n */\n\nfunction isHotkey(hotkey, options, event) {\n  if (options && !('byKey' in options)) {\n    event = options;\n    options = null;\n  }\n\n  if (!Array.isArray(hotkey)) {\n    hotkey = [hotkey];\n  }\n\n  var array = hotkey.map(function (string) {\n    return parseHotkey(string, options);\n  });\n  var check = function check(e) {\n    return array.some(function (object) {\n      return compareHotkey(object, e);\n    });\n  };\n  var ret = event == null ? check : check(event);\n  return ret;\n}\n\nfunction isCodeHotkey(hotkey, event) {\n  return isHotkey(hotkey, event);\n}\n\nfunction isKeyHotkey(hotkey, event) {\n  return isHotkey(hotkey, { byKey: true }, event);\n}\n\n/**\n * Parse.\n */\n\nfunction parseHotkey(hotkey, options) {\n  var byKey = options && options.byKey;\n  var ret = {};\n\n  // Special case to handle the `+` key since we use it as a separator.\n  hotkey = hotkey.replace('++', '+add');\n  var values = hotkey.split('+');\n  var length = values.length;\n\n  // Ensure that all the modifiers are set to false unless the hotkey has them.\n\n  for (var k in MODIFIERS) {\n    ret[MODIFIERS[k]] = false;\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = values[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var value = _step.value;\n\n      var optional = value.endsWith('?') && value.length > 1;\n\n      if (optional) {\n        value = value.slice(0, -1);\n      }\n\n      var name = toKeyName(value);\n      var modifier = MODIFIERS[name];\n\n      if (length === 1 || !modifier) {\n        if (byKey) {\n          ret.key = name;\n        } else {\n          ret.which = toKeyCode(value);\n        }\n      }\n\n      if (modifier) {\n        ret[modifier] = optional ? null : true;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return ret;\n}\n\n/**\n * Compare.\n */\n\nfunction compareHotkey(object, event) {\n  for (var key in object) {\n    var expected = object[key];\n    var actual = void 0;\n\n    if (expected == null) {\n      continue;\n    }\n\n    if (key === 'key' && event.key != null) {\n      actual = event.key.toLowerCase();\n    } else if (key === 'which') {\n      actual = expected === 91 && event.which === 93 ? 91 : event.which;\n    } else {\n      actual = event[key];\n    }\n\n    if (actual == null && expected === false) {\n      continue;\n    }\n\n    if (actual !== expected) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Utils.\n */\n\nfunction toKeyCode(name) {\n  name = toKeyName(name);\n  var code = CODES[name] || name.toUpperCase().charCodeAt(0);\n  return code;\n}\n\nfunction toKeyName(name) {\n  name = name.toLowerCase();\n  name = ALIASES()[name] || name;\n  return name;\n}\n\n/**\n * Export.\n */\n\nexports.default = isHotkey;\nexports.isHotkey = isHotkey;\nexports.isCodeHotkey = isCodeHotkey;\nexports.isKeyHotkey = isKeyHotkey;\nexports.parseHotkey = parseHotkey;\nexports.compareHotkey = compareHotkey;\nexports.toKeyCode = toKeyCode;\nexports.toKeyName = toKeyName;","import {\n  findNode,\n  FindNodeOptions,\n  getPluginType,\n  PlateEditor,\n  Value,\n} from '@udecode/plate-common';\nimport { ELEMENT_MENTION_INPUT } from '../createMentionPlugin';\nimport { TMentionInputElement } from '../types';\n\nexport const findMentionInput = <V extends Value>(\n  editor: PlateEditor<V>,\n  options?: Omit<FindNodeOptions<V>, 'match'>\n) =>\n  findNode<TMentionInputElement>(editor, {\n    ...options,\n    match: { type: getPluginType(editor, ELEMENT_MENTION_INPUT) },\n  });\n","import {\n  getPluginType,\n  PlateEditor,\n  TNode,\n  Value,\n} from '@udecode/plate-common';\nimport { ELEMENT_MENTION_INPUT } from '../createMentionPlugin';\nimport { TMentionInputElement } from '../types';\n\nexport const isNodeMentionInput = <V extends Value>(\n  editor: PlateEditor<V>,\n  node: TNode\n): node is TMentionInputElement => {\n  return node.type === getPluginType(editor, ELEMENT_MENTION_INPUT);\n};\n","import { PlateEditor, Value } from '@udecode/plate-common';\nimport { findMentionInput } from './findMentionInput';\n\nexport const isSelectionInMentionInput = <V extends Value>(\n  editor: PlateEditor<V>\n) => findMentionInput(editor) !== undefined;\n","import {\n  getNode,\n  insertText,\n  PlateEditor,\n  unwrapNodes,\n  Value,\n  withoutNormalizing,\n} from '@udecode/plate-common';\nimport { Path } from 'slate';\nimport { TMentionInputElement } from '../types';\n\nexport const removeMentionInput = <V extends Value>(\n  editor: PlateEditor<V>,\n  path: Path\n) =>\n  withoutNormalizing(editor, () => {\n    const node = getNode<TMentionInputElement>(editor, path);\n    if (!node) return;\n\n    const { trigger } = node;\n\n    insertText(editor, trigger, {\n      at: { path: [...path, 0], offset: 0 },\n    });\n    unwrapNodes(editor, {\n      at: path,\n    });\n  });\n","import { moveSelection, PlateEditor, Value } from '@udecode/plate-common';\nimport isHotkey from 'is-hotkey';\nimport { Range } from 'slate';\nimport { KeyboardEventHandler } from './KeyboardEventHandler';\n\nexport interface MoveSelectionByOffsetOptions<V extends Value = Value> {\n  query?: (editor: PlateEditor<V>) => boolean;\n}\n\n// TODO: move to core\nexport const moveSelectionByOffset: <V extends Value>(\n  editor: PlateEditor<V>,\n  options?: MoveSelectionByOffsetOptions<V>\n) => KeyboardEventHandler = (editor, { query = () => true } = {}) => (\n  event\n) => {\n  const { selection } = editor;\n\n  if (!selection || Range.isExpanded(selection) || !query(editor)) {\n    return false;\n  }\n\n  if (isHotkey('left', event)) {\n    event.preventDefault();\n    moveSelection(editor, { unit: 'offset', reverse: true });\n    return true;\n  }\n\n  if (isHotkey('right', event)) {\n    event.preventDefault();\n    moveSelection(editor, { unit: 'offset' });\n    return true;\n  }\n};\n","import { PlateEditor, Value } from '@udecode/plate-common';\nimport isHotkey from 'is-hotkey';\nimport { findMentionInput } from '../queries';\nimport { removeMentionInput } from '../transforms';\nimport { KeyboardEventHandler } from './KeyboardEventHandler';\nimport {\n  moveSelectionByOffset,\n  MoveSelectionByOffsetOptions,\n} from './moveSelectionByOffset';\n\nexport const mentionOnKeyDownHandler: <V extends Value>(\n  options?: MoveSelectionByOffsetOptions<V>\n) => (editor: PlateEditor<V>) => KeyboardEventHandler = (options) => (\n  editor\n) => (event) => {\n  if (isHotkey('escape', event)) {\n    const currentMentionInput = findMentionInput(editor)!;\n    if (currentMentionInput) {\n      event.preventDefault();\n      removeMentionInput(editor, currentMentionInput[1]);\n      return true;\n    }\n    return false;\n  }\n\n  return moveSelectionByOffset(editor, options)(event);\n};\n","import { comboboxActions } from '@udecode/plate-combobox';\nimport {\n  getEditorString,\n  getNodeString,\n  getPlugin,\n  getPointBefore,\n  getRange,\n  PlateEditor,\n  setSelection,\n  TNode,\n  TText,\n  Value,\n  WithPlatePlugin,\n} from '@udecode/plate-common';\nimport { Range } from 'slate';\nimport { removeMentionInput } from './transforms/removeMentionInput';\nimport { ELEMENT_MENTION_INPUT } from './createMentionPlugin';\nimport {\n  findMentionInput,\n  isNodeMentionInput,\n  isSelectionInMentionInput,\n} from './queries';\nimport { MentionPlugin, TMentionInputElement } from './types';\n\nexport const withMention = <\n  V extends Value = Value,\n  E extends PlateEditor<V> = PlateEditor<V>\n>(\n  editor: E,\n  {\n    options: { id, trigger, query, inputCreation },\n  }: WithPlatePlugin<MentionPlugin, V, E>\n) => {\n  const { type } = getPlugin<{}, V>(editor, ELEMENT_MENTION_INPUT);\n\n  const {\n    apply,\n    insertBreak,\n    insertText,\n    deleteBackward,\n    insertFragment,\n    insertTextData,\n    insertNode,\n  } = editor;\n\n  const stripNewLineAndTrim: (text: string) => string = (text) => {\n    return text\n      .split(/\\r\\n|\\r|\\n/)\n      .map((line) => line.trim())\n      .join('');\n  };\n\n  editor.insertFragment = (fragment) => {\n    const inMentionInput = findMentionInput(editor) !== undefined;\n    if (!inMentionInput) {\n      return insertFragment(fragment);\n    }\n\n    return insertText(\n      fragment.map((node) => stripNewLineAndTrim(getNodeString(node))).join('')\n    );\n  };\n\n  editor.insertTextData = (data) => {\n    const inMentionInput = findMentionInput(editor) !== undefined;\n    if (!inMentionInput) {\n      return insertTextData(data);\n    }\n\n    const text = data.getData('text/plain');\n    if (!text) {\n      return false;\n    }\n\n    editor.insertText(stripNewLineAndTrim(text));\n\n    return true;\n  };\n\n  editor.deleteBackward = (unit) => {\n    const currentMentionInput = findMentionInput(editor);\n    if (currentMentionInput && getNodeString(currentMentionInput[0]) === '') {\n      return removeMentionInput(editor, currentMentionInput[1]);\n    }\n\n    deleteBackward(unit);\n  };\n\n  editor.insertBreak = () => {\n    if (isSelectionInMentionInput(editor)) {\n      return;\n    }\n\n    insertBreak();\n  };\n\n  editor.insertText = (text) => {\n    if (\n      !editor.selection ||\n      text !== trigger ||\n      (query && !query<V, E>(editor)) ||\n      isSelectionInMentionInput(editor)\n    ) {\n      return insertText(text);\n    }\n\n    // Make sure a mention input is created at the beginning of line or after a whitespace\n    const previousChar = getEditorString(\n      editor,\n      getRange(\n        editor,\n        editor.selection,\n        getPointBefore(editor, editor.selection)\n      )\n    );\n\n    const beginningOfLine = previousChar === '';\n    const precededByWhitespace = previousChar === ' ';\n\n    if ((beginningOfLine || precededByWhitespace) && text === trigger) {\n      const data: TMentionInputElement = {\n        type,\n        children: [{ text: '' }],\n        trigger,\n      };\n      if (inputCreation) {\n        data[inputCreation.key] = inputCreation.value;\n      }\n      return insertNode(data);\n    }\n\n    return insertText(text);\n  };\n\n  editor.apply = (operation) => {\n    apply(operation);\n\n    if (operation.type === 'insert_text' || operation.type === 'remove_text') {\n      const currentMentionInput = findMentionInput(editor);\n      if (currentMentionInput) {\n        comboboxActions.text(getNodeString(currentMentionInput[0]));\n      }\n    } else if (operation.type === 'set_selection') {\n      const previousMentionInputPath = Range.isRange(operation.properties)\n        ? findMentionInput(editor, { at: operation.properties })?.[1]\n        : undefined;\n\n      const currentMentionInputPath = Range.isRange(operation.newProperties)\n        ? findMentionInput(editor, { at: operation.newProperties })?.[1]\n        : undefined;\n\n      if (previousMentionInputPath && !currentMentionInputPath) {\n        removeMentionInput(editor, previousMentionInputPath);\n      }\n\n      if (currentMentionInputPath) {\n        comboboxActions.targetRange(editor.selection);\n      }\n    } else if (\n      operation.type === 'insert_node' &&\n      isNodeMentionInput(editor, operation.node as TNode)\n    ) {\n      if ((operation.node as TMentionInputElement).trigger !== trigger) {\n        return;\n      }\n\n      const text =\n        ((operation.node as TMentionInputElement).children as TText[])[0]\n          ?.text ?? '';\n\n      if (\n        inputCreation === undefined ||\n        operation.node[inputCreation.key] === inputCreation.value\n      ) {\n        // Needed for undo - after an undo a mention insert we only receive\n        // an insert_node with the mention input, i.e. nothing indicating that it\n        // was an undo.\n        setSelection(editor, {\n          anchor: { path: operation.path.concat([0]), offset: text.length },\n          focus: { path: operation.path.concat([0]), offset: text.length },\n        });\n\n        comboboxActions.open({\n          activeId: id!,\n          text,\n          targetRange: editor.selection,\n        });\n      }\n    } else if (\n      operation.type === 'remove_node' &&\n      isNodeMentionInput(editor, operation.node as TNode)\n    ) {\n      if ((operation.node as TMentionInputElement).trigger !== trigger) {\n        return;\n      }\n\n      comboboxActions.reset();\n    }\n  };\n\n  return editor;\n};\n","import { createPluginFactory } from '@udecode/plate-common';\nimport { mentionOnKeyDownHandler } from './handlers/mentionOnKeyDownHandler';\nimport { isSelectionInMentionInput } from './queries';\nimport { MentionPlugin } from './types';\nimport { withMention } from './withMention';\n\nexport const ELEMENT_MENTION = 'mention';\nexport const ELEMENT_MENTION_INPUT = 'mention_input';\n\n/**\n * Enables support for autocompleting @mentions.\n */\nexport const createMentionPlugin = createPluginFactory<MentionPlugin>({\n  key: ELEMENT_MENTION,\n  isElement: true,\n  isInline: true,\n  isVoid: true,\n  handlers: {\n    onKeyDown: mentionOnKeyDownHandler({ query: isSelectionInMentionInput }),\n  },\n  withOverrides: withMention,\n  options: {\n    trigger: '@',\n    createMentionNode: (item) => ({ value: item.text }),\n  },\n  plugins: [\n    {\n      key: ELEMENT_MENTION_INPUT,\n      isElement: true,\n      isInline: true,\n    },\n  ],\n  then: (editor, { key }) => ({\n    options: {\n      id: key,\n    },\n  }),\n});\n","import {\n  comboboxActions,\n  ComboboxOnSelectItem,\n  comboboxSelectors,\n  Data,\n  NoData,\n  TComboboxItem,\n} from '@udecode/plate-combobox';\nimport {\n  getBlockAbove,\n  getPlugin,\n  insertNodes,\n  insertText,\n  isEndPoint,\n  moveSelection,\n  PlatePluginKey,\n  removeNodes,\n  select,\n  TNodeProps,\n  withoutMergingHistory,\n  withoutNormalizing,\n} from '@udecode/plate-common';\nimport { isNodeMentionInput } from './queries/isNodeMentionInput';\nimport { ELEMENT_MENTION } from './createMentionPlugin';\nimport { MentionPlugin, TMentionElement } from './types';\n\nexport interface CreateMentionNode<TData extends Data> {\n  (\n    item: TComboboxItem<TData>,\n    meta: CreateMentionNodeMeta\n  ): TNodeProps<TMentionElement>;\n}\n\nexport interface CreateMentionNodeMeta {\n  search: string;\n}\n\nexport const getMentionOnSelectItem = <TData extends Data = NoData>({\n  key = ELEMENT_MENTION,\n}: PlatePluginKey = {}): ComboboxOnSelectItem<TData> => (editor, item) => {\n  const targetRange = comboboxSelectors.targetRange();\n  if (!targetRange) return;\n\n  const {\n    type,\n    options: { insertSpaceAfterMention, createMentionNode },\n  } = getPlugin<MentionPlugin>(editor as any, key);\n\n  const pathAbove = getBlockAbove(editor)?.[1];\n  const isBlockEnd = () =>\n    editor.selection &&\n    pathAbove &&\n    isEndPoint(editor, editor.selection.anchor, pathAbove);\n\n  withoutNormalizing(editor, () => {\n    // Selectors are sensitive to operations, it's better to create everything\n    // before the editor state is changed. For example, asking for text after\n    // removeNodes below will return null.\n    const props = createMentionNode!(item, {\n      search: comboboxSelectors.text() ?? '',\n    });\n\n    select(editor, targetRange);\n\n    withoutMergingHistory(editor, () =>\n      removeNodes(editor, {\n        match: (node) => isNodeMentionInput(editor, node),\n      })\n    );\n\n    insertNodes<TMentionElement>(editor, {\n      type,\n      children: [{ text: '' }],\n      ...props,\n    } as TMentionElement);\n\n    // move the selection after the element\n    moveSelection(editor, { unit: 'offset' });\n\n    if (isBlockEnd() && insertSpaceAfterMention) {\n      insertText(editor, ' ');\n    }\n  });\n\n  return comboboxActions.reset();\n};\n"],"names":["findMentionInput","editor","options","findNode","match","type","getPluginType","ELEMENT_MENTION_INPUT","isNodeMentionInput","node","isSelectionInMentionInput","undefined","removeMentionInput","path","withoutNormalizing","getNode","trigger","insertText","at","offset","unwrapNodes","moveSelectionByOffset","query","event","selection","Range","isExpanded","isHotkey","preventDefault","moveSelection","unit","reverse","mentionOnKeyDownHandler","currentMentionInput","withMention","id","inputCreation","getPlugin","apply","insertBreak","deleteBackward","insertFragment","insertTextData","insertNode","stripNewLineAndTrim","text","split","map","line","trim","join","fragment","inMentionInput","getNodeString","data","getData","previousChar","getEditorString","getRange","getPointBefore","beginningOfLine","precededByWhitespace","children","key","value","operation","comboboxActions","previousMentionInputPath","isRange","properties","currentMentionInputPath","newProperties","targetRange","setSelection","anchor","concat","length","focus","open","activeId","reset","ELEMENT_MENTION","createMentionPlugin","createPluginFactory","isElement","isInline","isVoid","handlers","onKeyDown","withOverrides","createMentionNode","item","plugins","then","getMentionOnSelectItem","comboboxSelectors","insertSpaceAfterMention","pathAbove","getBlockAbove","isBlockEnd","isEndPoint","props","search","select","withoutMergingHistory","removeNodes","insertNodes"],"mappings":"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"}