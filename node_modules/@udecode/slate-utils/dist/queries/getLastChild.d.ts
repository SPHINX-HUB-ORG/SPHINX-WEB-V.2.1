import { ChildOf, TNode, TNodeEntry } from '@udecode/slate';
import { Path } from 'slate';
/**
 * Get the last child of a node or null if no children.
 */
export declare const getLastChild: <N extends ChildOf<R, number>, R extends TNode>(nodeEntry: TNodeEntry<R>) => TNodeEntry<N> | null;
/**
 * Get last child path. If there is no child, last index is 0.
 */
export declare const getLastChildPath: <N extends TNode>(nodeEntry: TNodeEntry<N>) => Path;
/**
 * Is the child path the last one of the parent.
 */
export declare const isLastChild: <N extends TNode>(parentEntry: TNodeEntry<N>, childPath: Path) => boolean;
//# sourceMappingURL=getLastChild.d.ts.map