import { Value } from '../../../slate/editor/TEditor';
import { EDescendant } from '../../../slate/node/TDescendant';
import { PlateEditor } from '../../../types/plate/PlateEditor';
import { DeserializeHtmlNodeReturnType } from '../types';
/**
 * Deserialize HTML element or child node.
 */
export declare const deserializeHtmlNode: <V extends Value>(editor: PlateEditor<V>) => (node: HTMLElement | ChildNode) => DeserializeHtmlNodeReturnType<import("../../../slate/node/TDescendant").DescendantOf<import("../../../slate/editor/TEditor").TEditor<V>>>;
//# sourceMappingURL=deserializeHtmlNode.d.ts.map