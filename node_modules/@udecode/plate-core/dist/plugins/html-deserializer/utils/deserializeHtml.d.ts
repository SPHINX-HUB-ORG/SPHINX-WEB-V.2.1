import { Value } from '../../../slate/editor/TEditor';
import { EDescendant } from '../../../slate/node/TDescendant';
import { PlateEditor } from '../../../types/plate/PlateEditor';
/**
 * Deserialize HTML element to a valid document fragment.
 */
export declare const deserializeHtml: <V extends Value>(editor: PlateEditor<V>, { element, stripWhitespace, }: {
    element: HTMLElement | string;
    stripWhitespace?: boolean | undefined;
}) => import("../../../slate/node/TDescendant").DescendantOf<import("../../../slate/editor/TEditor").TEditor<V>>[];
//# sourceMappingURL=deserializeHtml.d.ts.map