import { Value } from '../../../slate/editor/TEditor';
import { EDescendant } from '../../../slate/node/TDescendant';
import { PlateEditor } from '../../../types/plate/PlateEditor';
import { DeserializeHtmlNodeReturnType } from '../types';
/**
 * Deserialize HTML element to fragment.
 */
export declare const deserializeHtmlElement: <V extends Value>(editor: PlateEditor<V>, element: HTMLElement) => DeserializeHtmlNodeReturnType<import("../../../slate/node/TDescendant").DescendantOf<import("../../../slate/editor/TEditor").TEditor<V>>>;
//# sourceMappingURL=deserializeHtmlElement.d.ts.map