import { TEditor, Value } from './TEditor';
/**
 * Remove a custom property from all of the leaf text nodes in the current
 * selection.
 *
 * If the selection is currently collapsed, the removal will be stored on
 * `editor.marks` and applied to the text inserted next.
 */
export declare const removeEditorMark: <V extends Value, M extends import("../..").Simplify<import("../..").UnionToIntersection<import("..").TNodeProps<import("../text/TText").TextOf<TEditor<V>>>>>>(editor: TEditor<V>, key: {} extends M ? string : keyof M & string) => void;
//# sourceMappingURL=removeEditorMark.d.ts.map