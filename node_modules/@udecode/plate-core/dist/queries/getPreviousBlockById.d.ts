import { TEditor, Value } from '../slate/editor/TEditor';
import { TNodeEntry } from '../slate/node/TNodeEntry';
import { QueryNodeOptions } from '../types/slate/QueryNodeOptions';
/**
 * Find the block before a block by id.
 * If not found, find the first block by id and return [null, its previous path]
 */
export declare const getPreviousBlockById: <N extends import("../slate/element/TElement").ElementOf<TEditor<V>>, V extends Value = Value>(editor: TEditor<V>, id: string, query?: QueryNodeOptions | undefined) => TNodeEntry<N> | undefined;
//# sourceMappingURL=getPreviousBlockById.d.ts.map