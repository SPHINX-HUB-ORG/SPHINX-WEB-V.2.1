import { Value } from '../../slate/editor/TEditor';
import { EElementOrText } from '../../slate/element/TElement';
import { PlateEditor } from '../../types/plate/PlateEditor';
import { PlatePluginInsertDataOptions } from '../../types/plugin/PlatePluginInsertData';
import { InjectedPlugin } from './getInjectedPlugins';
/**
 * Pipe preInsert then insertFragment.
 */
export declare const pipeInsertFragment: <V extends Value>(editor: PlateEditor<V>, injectedPlugins: Partial<import("../..").PlatePlugin<{}, V, PlateEditor<V>>>[], { fragment, ...options }: PlatePluginInsertDataOptions & {
    fragment: EElementOrText<V>[];
}) => void;
//# sourceMappingURL=pipeInsertFragment.d.ts.map