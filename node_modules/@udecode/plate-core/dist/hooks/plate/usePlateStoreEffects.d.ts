import { PlateProps } from '../../components/plate/Plate';
import { Value } from '../../slate/editor/TEditor';
import { PlateEditor } from '../../types/plate/PlateEditor';
export declare type UsePlateStoreEffects<V extends Value = Value, E extends PlateEditor<V> = PlateEditor<V>> = Pick<PlateProps<V, E>, 'id' | 'value' | 'enabled' | 'onChange' | 'editableProps' | 'plugins' | 'decorate' | 'renderElement' | 'renderLeaf'>;
export declare const usePlateStoreEffects: <V extends Value = Value, E extends PlateEditor<V> = PlateEditor<V>>({ id, value: valueProp, enabled: enabledProp, onChange, editableProps, plugins, decorate, renderElement, renderLeaf, }: UsePlateStoreEffects<V, E>) => void;
//# sourceMappingURL=usePlateStoreEffects.d.ts.map