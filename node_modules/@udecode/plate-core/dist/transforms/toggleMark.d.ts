import { TEditor, Value } from '../slate/editor/TEditor';
import { EMarks } from '../slate/text/TText';
import { ToggleMarkPlugin } from '../types/plugin/ToggleMarkPlugin';
export interface ToggleMarkOptions<V extends Value = Value, K extends keyof EMarks<V> = keyof EMarks<V>> extends Pick<ToggleMarkPlugin<V, K>, 'clear'> {
    key: K;
}
/**
 * Add/remove marks in the selection.
 * @param editor
 * @param key mark to toggle
 * @param clear marks to clear when adding mark
 */
export declare const toggleMark: <V extends Value = Value, K extends keyof import("..").Simplify<import("..").UnionToIntersection<import("..").TNodeProps<import("../slate/text/TText").TextOf<TEditor<V>>>>> = keyof import("..").Simplify<import("..").UnionToIntersection<import("..").TNodeProps<import("../slate/text/TText").TextOf<TEditor<V>>>>>>(editor: TEditor<V>, { key, clear }: ToggleMarkOptions<V, K>) => void;
//# sourceMappingURL=toggleMark.d.ts.map