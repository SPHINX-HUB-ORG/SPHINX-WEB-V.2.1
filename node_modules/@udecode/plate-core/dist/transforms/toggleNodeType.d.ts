import { GetNodeEntriesOptions, Value } from '@udecode/slate';
import { PlateEditor } from '../types/PlateEditor';
export interface ToggleNodeTypeOptions {
    /**
     * If there is no node type above the selection, set the selected node type to activeType.
     */
    activeType?: string;
    /**
     * If there is a node type above the selection, set the selected node type to inactiveType.
     */
    inactiveType?: string;
}
/**
 * Toggle the type of the selected node.
 * Don't do anything if activeType === inactiveType.
 */
export declare const toggleNodeType: <V extends Value>(editor: PlateEditor<V>, options: ToggleNodeTypeOptions, editorNodesOptions?: Omit<GetNodeEntriesOptions<V>, "match"> | undefined) => void;
//# sourceMappingURL=toggleNodeType.d.ts.map