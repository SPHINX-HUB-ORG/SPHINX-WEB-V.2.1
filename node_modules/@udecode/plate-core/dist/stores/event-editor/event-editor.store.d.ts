import { PlateId } from '../plate/index';
export declare type EventEditorState = {
    /**
     * Last editor id that has been blurred.
     */
    blur: PlateId | null;
    /**
     * Editor id that is currently being focused.
     */
    focus: PlateId | null;
    /**
     * Last editor id.
     */
    last: PlateId | null;
};
/**
 * Store where the keys are event names and the values are editor ids.
 */
export declare const eventEditorStore: import("@udecode/zustood/dist/types").StoreApi<"event-editor", EventEditorState, import("@udecode/zustood/dist/types").StateActions<EventEditorState>, {}>;
export declare const eventEditorActions: import("@udecode/zustood/dist/types").StateActions<EventEditorState>;
export declare const eventEditorSelectors: import("@udecode/zustood").StoreApiGet<EventEditorState, {}>;
export declare const useEventEditorSelectors: import("@udecode/zustood").GetRecord<EventEditorState>;
//# sourceMappingURL=event-editor.store.d.ts.map