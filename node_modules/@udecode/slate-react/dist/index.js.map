{"version":3,"file":"index.js","sources":["../src/react-editor/blurEditor.ts","../src/react-editor/deselectEditor.ts","../src/react-editor/findEditorDocumentOrShadowRoot.ts","../src/react-editor/findEventRange.ts","../src/react-editor/findNodeKey.ts","../src/react-editor/findNodePath.ts","../src/react-editor/focusEditor.ts","../src/react-editor/getEditorWindow.ts","../src/react-editor/hasEditorDOMNode.ts","../src/react-editor/hasEditorEditableTarget.ts","../src/react-editor/hasEditorSelectableTarget.ts","../src/react-editor/hasEditorTarget.ts","../src/react-editor/insertData.ts","../src/react-editor/isComposing.ts","../src/react-editor/isEditorFocused.ts","../src/react-editor/isEditorReadOnly.ts","../src/react-editor/isTargetInsideNonReadonlyVoidEditor.ts","../src/react-editor/setFragmentData.ts","../src/react-editor/toDOMNode.ts","../src/react-editor/toDOMPoint.ts","../src/react-editor/toDOMRange.ts","../src/react-editor/toSlateNode.ts","../src/react-editor/toSlatePoint.ts","../src/react-editor/toSlateRange.ts"],"sourcesContent":["import { Value } from '@udecode/slate';\nimport { ReactEditor } from 'slate-react';\nimport { TReactEditor } from '../types/TReactEditor';\n\n/**\n * Blur the editor.\n */\nexport const blurEditor = <V extends Value>(editor: TReactEditor<V>) =>\n  ReactEditor.blur(editor as any);\n","import { Value } from '@udecode/slate';\nimport { ReactEditor } from 'slate-react';\nimport { TReactEditor } from '../types/TReactEditor';\n\n/**\n * Deselect the editor.\n */\nexport const deselectEditor = <V extends Value>(editor: TReactEditor<V>) =>\n  ReactEditor.deselect(editor as any);\n","import { Value } from '@udecode/slate';\nimport { ReactEditor } from 'slate-react';\nimport { TReactEditor } from '../types/TReactEditor';\n\n/**\n * Find the DOM node that implements DocumentOrShadowRoot for the editor.\n */\nexport const findEditorDocumentOrShadowRoot = <V extends Value>(\n  editor: TReactEditor<V>\n) => {\n  try {\n    return ReactEditor.findDocumentOrShadowRoot(editor as any);\n  } catch (e) {}\n};\n","import { Value } from '@udecode/slate';\nimport { ReactEditor } from 'slate-react';\nimport { TReactEditor } from '../types/TReactEditor';\n\n/**\n * {@link ReactEditor.findEventRange}\n */\nexport const findEventRange = <V extends Value>(\n  editor: TReactEditor<V>,\n  event: any\n) => {\n  try {\n    return ReactEditor.findEventRange(editor as any, event);\n  } catch (e) {}\n};\n","import { TNode, Value } from '@udecode/slate';\nimport { ReactEditor } from 'slate-react';\nimport { TReactEditor } from '../types/TReactEditor';\n\n/**\n * Find a key for a Slate node.\n */\nexport const findNodeKey = <V extends Value>(\n  editor: TReactEditor<V>,\n  node: TNode\n) => {\n  try {\n    return ReactEditor.findKey(editor as any, node);\n  } catch (e) {}\n};\n","import { TNode, Value } from '@udecode/slate';\nimport { Path } from 'slate';\nimport { ReactEditor } from 'slate-react';\nimport { TReactEditor } from '../types/TReactEditor';\n\n/**\n * Find the path of Slate node.\n */\nexport const findNodePath = <V extends Value>(\n  editor: TReactEditor<V>,\n  node: TNode\n): Path | undefined => {\n  try {\n    return ReactEditor.findPath(editor as any, node);\n  } catch (e) {}\n};\n","import { deselect, select, Value, withoutNormalizing } from '@udecode/slate';\nimport { Location } from 'slate';\nimport { ReactEditor } from 'slate-react';\nimport { TReactEditor } from '../types/TReactEditor';\n\n/**\n * Focus the editor. Extension:\n *\n * If `target` is defined:\n * - deselect the editor (otherwise it will focus the start of the editor)\n * - select the editor\n * - focus the editor\n */\nexport const focusEditor = <V extends Value>(\n  editor: TReactEditor<V>,\n  target?: Location\n) => {\n  if (target) {\n    withoutNormalizing(editor, () => {\n      deselect(editor);\n      select(editor, target);\n    });\n  }\n  ReactEditor.focus(editor as any);\n};\n","import { Value } from '@udecode/slate';\nimport { ReactEditor } from 'slate-react';\nimport { TReactEditor } from '../types/TReactEditor';\n\n/**\n * Return the host window of the current editor.\n */\nexport const getEditorWindow = <V extends Value>(editor: TReactEditor<V>) => {\n  try {\n    return ReactEditor.getWindow(editor as any);\n  } catch (e) {}\n};\n","import { Value } from '@udecode/slate';\nimport { ReactEditor } from 'slate-react';\nimport { DOMNode } from 'slate-react/dist/utils/dom';\nimport { TReactEditor } from '../types/TReactEditor';\n\n/**\n * Check if a DOM node is within the editor.\n */\nexport const hasEditorDOMNode = <V extends Value>(\n  editor: TReactEditor<V>,\n  target: DOMNode,\n  options?: Parameters<typeof ReactEditor.hasDOMNode>[2]\n) => {\n  try {\n    return ReactEditor.hasDOMNode(editor as any, target, options);\n  } catch (e) {}\n\n  return false;\n};\n","import { Value } from '@udecode/slate';\nimport { ReactEditor } from 'slate-react';\nimport { TReactEditor } from '../types/TReactEditor';\n\n/**\n * Check if the target is editable and in the editor.\n */\nexport const hasEditorEditableTarget = <V extends Value>(\n  editor: TReactEditor<V>,\n  target: EventTarget | null\n): target is Node => {\n  try {\n    return ReactEditor.hasEditableTarget(editor as any, target);\n  } catch (e) {}\n\n  return false;\n};\n","import { Value } from '@udecode/slate';\nimport { ReactEditor } from 'slate-react';\nimport { TReactEditor } from '../types/TReactEditor';\n\n/**\n * Check if the target can be selectable.\n */\nexport const hasEditorSelectableTarget = <V extends Value>(\n  editor: TReactEditor<V>,\n  target: EventTarget | null\n) => {\n  try {\n    return ReactEditor.hasSelectableTarget(editor as any, target);\n  } catch (e) {}\n\n  return false;\n};\n","import { Value } from '@udecode/slate';\nimport { ReactEditor } from 'slate-react';\nimport { TReactEditor } from '../types/TReactEditor';\n\n/**\n * Check if the target is in the editor.\n */\nexport const hasEditorTarget = <V extends Value>(\n  editor: TReactEditor<V>,\n  target: EventTarget | null\n): target is Node => {\n  try {\n    return ReactEditor.hasTarget(editor as any, target);\n  } catch (e) {}\n\n  return false;\n};\n","import { Value } from '@udecode/slate';\nimport { ReactEditor } from 'slate-react';\nimport { TReactEditor } from '../types/TReactEditor';\n\n/**\n * Insert data from a `DataTransfer` into the editor.\n */\nexport const insertData = <V extends Value>(\n  editor: TReactEditor<V>,\n  data: DataTransfer\n) => ReactEditor.insertData(editor as any, data);\n","import { Value } from '@udecode/slate';\nimport { ReactEditor } from 'slate-react';\nimport { TReactEditor } from '../types/TReactEditor';\n\n/**\n * Check if the user is currently composing inside the editor.\n */\nexport const isComposing = <V extends Value>(editor: TReactEditor<V>) =>\n  ReactEditor.isComposing(editor as any);\n","import { Value } from '@udecode/slate';\nimport { ReactEditor } from 'slate-react';\nimport { TReactEditor } from '../types/TReactEditor';\n\n/**\n * Check if the editor is focused.\n */\nexport const isEditorFocused = <V extends Value>(editor: TReactEditor<V>) =>\n  ReactEditor.isFocused(editor as any);\n","import { Value } from '@udecode/slate';\nimport { ReactEditor } from 'slate-react';\nimport { TReactEditor } from '../types/TReactEditor';\n\n/**\n * Check if the editor is in read-only mode.\n */\nexport const isEditorReadOnly = <V extends Value>(editor: TReactEditor<V>) =>\n  ReactEditor.isReadOnly(editor as any);\n","import { Value } from '@udecode/slate';\nimport { ReactEditor } from 'slate-react';\nimport { TReactEditor } from '../types/TReactEditor';\n\n/**\n * Check if the target is inside void and in an non-readonly editor.\n */\nexport const isTargetInsideNonReadonlyVoid = <V extends Value>(\n  editor: TReactEditor<V>,\n  target: EventTarget | null\n) => {\n  try {\n    return ReactEditor.isTargetInsideNonReadonlyVoid(editor as any, target);\n  } catch (e) {}\n\n  return false;\n};\n","import { Value } from '@udecode/slate';\nimport { ReactEditor } from 'slate-react';\nimport { TReactEditor } from '../types/TReactEditor';\n\n/**\n * Sets data from the currently selected fragment on a `DataTransfer`.\n */\nexport const setFragmentData = <V extends Value>(\n  editor: TReactEditor<V>,\n  data: DataTransfer\n) => ReactEditor.setFragmentData(editor as any, data);\n","import { TNode, Value } from '@udecode/slate';\nimport { ReactEditor } from 'slate-react';\nimport { TReactEditor } from '../types/TReactEditor';\n\n/**\n * Find the native DOM element from a Slate node.\n */\nexport const toDOMNode = <V extends Value>(\n  editor: TReactEditor<V>,\n  node: TNode\n) => {\n  try {\n    return ReactEditor.toDOMNode(editor as any, node);\n  } catch (e) {}\n};\n","import { Value } from '@udecode/slate';\nimport { Point } from 'slate';\nimport { ReactEditor } from 'slate-react';\nimport { TReactEditor } from '../types/TReactEditor';\n\n/**\n * Find a native DOM selection point from a Slate point.\n */\nexport const toDOMPoint = <V extends Value>(\n  editor: TReactEditor<V>,\n  point: Point\n) => {\n  try {\n    return ReactEditor.toDOMPoint(editor as any, point);\n  } catch (e) {}\n};\n","import { Range } from 'slate';\nimport { ReactEditor } from 'slate-react';\nimport { Value } from '../../../slate';\nimport { TReactEditor } from '../types/TReactEditor';\n\n/**\n * {@link ReactEditor.toDOMRange}\n */\nexport const toDOMRange = <V extends Value>(\n  editor: TReactEditor<V>,\n  range: Range\n) => {\n  try {\n    return ReactEditor.toDOMRange(editor as any, range);\n  } catch (e) {}\n};\n","import { TNode, Value } from '@udecode/slate';\nimport { ReactEditor } from 'slate-react';\nimport { DOMNode } from 'slate-react/dist/utils/dom';\nimport { TReactEditor } from '../types/TReactEditor';\n\n/**\n * {@link ReactEditor.toSlateNode}\n */\nexport const toSlateNode = <V extends Value>(\n  editor: TReactEditor<V>,\n  domNode: DOMNode\n) => {\n  try {\n    return ReactEditor.toSlateNode(editor as any, domNode) as TNode;\n  } catch (e) {}\n};\n","import { Value } from '@udecode/slate';\nimport { ReactEditor } from 'slate-react';\nimport { DOMPoint } from 'slate-react/dist/utils/dom';\nimport { TReactEditor } from '../types/TReactEditor';\n\n/**\n * {@link ReactEditor.toSlatePoint}\n */\nexport const toSlatePoint = <V extends Value>(\n  editor: TReactEditor<V>,\n  domPoint: DOMPoint,\n  options: Parameters<typeof ReactEditor.toSlatePoint>[2]\n) => {\n  try {\n    return ReactEditor.toSlatePoint(editor as any, domPoint, options);\n  } catch (e) {}\n};\n","import { Value } from '@udecode/slate';\nimport { ReactEditor } from 'slate-react';\nimport { TReactEditor } from '../types/TReactEditor';\n\n/**\n * {@link ReactEditor.toSlateRange}\n */\nexport const toSlateRange = <V extends Value>(\n  editor: TReactEditor<V>,\n  domRange: Parameters<typeof ReactEditor.toSlateRange>[1],\n  options: Parameters<typeof ReactEditor.toSlateRange>[2]\n) => {\n  try {\n    return ReactEditor.toSlateRange(editor as any, domRange, options);\n  } catch (e) {}\n};\n"],"names":["blurEditor","editor","ReactEditor","blur","deselectEditor","deselect","findEditorDocumentOrShadowRoot","findDocumentOrShadowRoot","e","findEventRange","event","findNodeKey","node","findKey","findNodePath","findPath","focusEditor","target","withoutNormalizing","select","focus","getEditorWindow","getWindow","hasEditorDOMNode","options","hasDOMNode","hasEditorEditableTarget","hasEditableTarget","hasEditorSelectableTarget","hasSelectableTarget","hasEditorTarget","hasTarget","insertData","data","isComposing","isEditorFocused","isFocused","isEditorReadOnly","isReadOnly","isTargetInsideNonReadonlyVoid","setFragmentData","toDOMNode","toDOMPoint","point","toDOMRange","range","toSlateNode","domNode","toSlatePoint","domPoint","toSlateRange","domRange"],"mappings":"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"}