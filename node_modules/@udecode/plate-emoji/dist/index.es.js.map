{"version":3,"file":"index.es.js","sources":["../src/types.ts","../src/constants.ts","../src/utils/EmojiObserver.ts","../src/utils/EmojiTriggeringController.ts","../src/utils/Grid/Grid.ts","../src/utils/Grid/GridSection.ts","../src/utils/EmojiLibrary/EmojiFloatingGrid.ts","../src/utils/EmojiLibrary/EmojiFloatingGridBuilder.ts","../src/utils/EmojiLibrary/EmojiInlineLibrary.ts","../src/utils/EmojiLibrary/EmojiFloatingLibrary.ts","../src/utils/EmojiPicker/EmojiPickerState.ts","../src/handlers/getEmojiOnInsert.ts","../src/utils/EmojiPicker/useEmojiPicker.ts","../src/utils/IndexSearch/IndexSearch.ts","../src/utils/IndexSearch/EmojiFloatingIndexSearch.ts","../src/utils/IndexSearch/EmojiInlineIndexSearch.ts","../src/handlers/getEmojiOnSelectItem.ts","../src/handlers/getFindTriggeringInput.ts","../src/withEmoji.ts","../src/createEmojiPlugin.ts","../src/storage/LocalStorage.ts","../src/storage/FrequentEmojiStorage.ts"],"sourcesContent":["import { TComboboxItem } from '@udecode/plate-combobox';\nimport { TEditableProps, Value } from '@udecode/plate-common';\nimport { IEmojiTriggeringController } from './utils';\n\ntype ReverseMap<T> = T[keyof T];\n\nexport type EmojiSettingsType = {\n  buttonSize: {\n    value: number;\n  };\n  categories: {\n    value?: EmojiCategoryList[];\n  };\n  perLine: {\n    value: number;\n  };\n  showFrequent: {\n    value: boolean;\n    limit?: number;\n    key?: string;\n    prefix?: string;\n  };\n};\n\nexport type EmojiComboboxProps = (\n  editableProps: TEditableProps<Value>\n) => JSX.Element | null;\n\nexport type EmojiItemData = {\n  id: string;\n  emoji: string;\n  name: string;\n  text: string;\n};\n\nexport interface CreateEmoji<TData extends EmojiItemData = EmojiItemData> {\n  (data: TComboboxItem<TData>): string;\n}\n\nexport interface EmojiPlugin<TData extends EmojiItemData = EmojiItemData> {\n  trigger?: string;\n  createEmoji?: CreateEmoji<TData>;\n  emojiTriggeringController?: IEmojiTriggeringController;\n  id?: string;\n}\n\nexport const EmojiCategory = {\n  Activity: 'activity',\n  Custom: 'custom',\n  Flags: 'flags',\n  Foods: 'foods',\n  Frequent: 'frequent',\n  Nature: 'nature',\n  Objects: 'objects',\n  People: 'people',\n  Places: 'places',\n  Symbols: 'symbols',\n} as const;\n\nexport type EmojiCategoryList = ReverseMap<typeof EmojiCategory>;\n\nexport type i18nProps = {\n  search: string;\n  searchResult: string;\n  clear: string;\n  searchNoResultsTitle: string;\n  searchNoResultsSubtitle: string;\n  pick: string;\n  categories: Record<EmojiCategoryList, string>;\n  skins: Record<'choose' | '1' | '2' | '3' | '4' | '5' | '6', string>;\n};\n\nexport type EmojiIconList<T = string> = {\n  categories: Record<EmojiCategoryList, { outline: T; solid: T }>;\n  search: {\n    loupe: T;\n    delete: T;\n  };\n};\n\nexport type FindTriggeringInputProps = {\n  char?: string;\n  action?: 'insert' | 'delete';\n};\n","import {\n  EmojiCategory,\n  EmojiCategoryList,\n  EmojiSettingsType,\n  i18nProps,\n} from './types';\nimport { EmojiTriggeringControllerOptions, FrequentEmojis } from './utils';\n\nexport const KEY_EMOJI = 'emoji';\nexport const EMOJI_TRIGGER = ':';\nexport const EMOJI_MAX_SEARCH_RESULT = 60;\n\nexport const emojiTriggeringControllerOptions: EmojiTriggeringControllerOptions = {\n  trigger: EMOJI_TRIGGER,\n  limitTriggeringChars: 2,\n};\n\nexport const defaultCategories: EmojiCategoryList[] = [\n  EmojiCategory.People,\n  EmojiCategory.Nature,\n  EmojiCategory.Foods,\n  EmojiCategory.Activity,\n  EmojiCategory.Places,\n  EmojiCategory.Objects,\n  EmojiCategory.Symbols,\n  EmojiCategory.Flags,\n];\n\nexport const EmojiSettings: EmojiSettingsType = {\n  buttonSize: {\n    value: 36,\n  },\n  perLine: {\n    value: 8,\n  },\n  showFrequent: {\n    value: true,\n    limit: 16,\n  },\n  categories: {\n    value: undefined,\n  },\n};\n\nexport const DEFAULT_FREQUENTLY_USED_EMOJI: FrequentEmojis = {\n  '+1': 1,\n  grinning: 1,\n  kissing_heart: 1,\n  heart_eyes: 1,\n  pray: 1,\n  laughing: 1,\n  clap: 1,\n  joy: 1,\n  scream: 1,\n  rocket: 1,\n  see_no_evil: 1,\n  hugging_face: 1,\n  heart: 1,\n};\n\nexport const NUM_OF_CATEGORIES = Object.values(EmojiCategory).length;\n\nexport const i18n: i18nProps = {\n  search: 'Search all emoji',\n  clear: 'Clear',\n  searchNoResultsTitle: 'Oh no!',\n  searchNoResultsSubtitle: 'That emoji couldnâ€™t be found',\n  pick: 'Pick an emoji...',\n  searchResult: 'Search Results',\n  categories: {\n    activity: 'Activity',\n    custom: 'Custom',\n    flags: 'Flags',\n    foods: 'Food & Drink',\n    frequent: 'Frequently used',\n    nature: 'Animals & Nature',\n    objects: 'Objects',\n    people: 'Smileys & People',\n    places: 'Travel & Places',\n    symbols: 'Symbols',\n  },\n  skins: {\n    choose: 'Choose default skin tone',\n    '1': 'Default',\n    '2': 'Light',\n    '3': 'Medium-Light',\n    '4': 'Medium',\n    '5': 'Medium-Dark',\n    '6': 'Dark',\n  },\n};\n","import { MutableRefObject } from 'react';\nimport { EmojiCategoryList } from '../types';\nimport { IEmojiFloatingLibrary } from './EmojiLibrary';\nimport { MapEmojiCategoryList } from './EmojiPicker';\n\nconst setVisibleSections = (\n  entries: IntersectionObserverEntry[],\n  visibleSections: MapEmojiCategoryList\n) => {\n  for (const entry of entries) {\n    const id = (entry.target as HTMLDivElement).dataset.id as EmojiCategoryList;\n    visibleSections.set(id, entry.isIntersecting);\n  }\n};\n\nconst getSectionInFocus = (\n  visibleSections: MapEmojiCategoryList\n): EmojiCategoryList | undefined => {\n  for (const [id, ratio] of visibleSections) {\n    if (ratio) {\n      return id;\n    }\n  }\n};\n\nexport type SetFocusedAndVisibleSectionsType = (\n  visibleSections: MapEmojiCategoryList,\n  categoryId?: EmojiCategoryList\n) => void;\n\nexport type ObserverCategoriesType = {\n  ancestorRef: MutableRefObject<HTMLDivElement | null>;\n  emojiLibrary: IEmojiFloatingLibrary;\n  setFocusedAndVisibleSections: SetFocusedAndVisibleSectionsType;\n};\n\nexport const observeCategories = ({\n  ancestorRef,\n  emojiLibrary,\n  setFocusedAndVisibleSections,\n}: ObserverCategoriesType) => {\n  const observerOptions = {\n    root: ancestorRef.current,\n    threshold: 0,\n  };\n\n  const visibleSections: MapEmojiCategoryList = new Map();\n\n  const observer = new IntersectionObserver((entries) => {\n    setVisibleSections(entries, visibleSections);\n    const focusedSectionId = getSectionInFocus(visibleSections);\n\n    focusedSectionId &&\n      setFocusedAndVisibleSections(visibleSections, focusedSectionId);\n  }, observerOptions);\n\n  for (const section of emojiLibrary.getGrid().sections()) {\n    if (section.root.current) observer.observe(section.root.current);\n  }\n\n  return observer;\n};\n","import { emojiTriggeringControllerOptions } from '../constants';\nimport {\n  EmojiTriggeringControllerOptions,\n  IEmojiTriggeringController,\n} from './EmojiTriggeringController.types';\n\nexport class EmojiTriggeringController implements IEmojiTriggeringController {\n  private _isTriggering = false;\n  private _hasTriggeringMark = false;\n  protected text = '';\n  protected pos: any;\n\n  constructor(\n    protected options: EmojiTriggeringControllerOptions = emojiTriggeringControllerOptions\n  ) {}\n\n  get isTriggering(): boolean {\n    return this._isTriggering;\n  }\n\n  setIsTriggering(isTriggering: boolean) {\n    this._isTriggering = isTriggering;\n    return this;\n  }\n\n  get hasTriggeringMark(): boolean {\n    return this._hasTriggeringMark;\n  }\n\n  hasEnclosingTriggeringMark(): boolean {\n    return this.endsWithEnclosingMark(this.text);\n  }\n\n  setText(text: string) {\n    this._hasTriggeringMark = this.startsWithTriggeringMark(text);\n\n    this.setIsTriggering(\n      this._hasTriggeringMark && text.length > this.options.limitTriggeringChars\n    );\n\n    this.text = this.isTriggering ? text : '';\n\n    return this;\n  }\n\n  private startsWithTriggeringMark(text: string) {\n    return new RegExp(`^${this.options.trigger}`).test(text);\n  }\n\n  private endsWithEnclosingMark(text: string) {\n    return new RegExp(`${this.options.trigger}$`).test(text);\n  }\n\n  getText() {\n    return this.text.replace(/(^:)|(:$)/g, '');\n  }\n\n  getTextSize() {\n    return this.text.length;\n  }\n\n  reset() {\n    this.text = '';\n    this.setIsTriggering(false);\n    this._hasTriggeringMark = false;\n    return this;\n  }\n}\n","import {\n  GridElements,\n  IGrid,\n  IGridSection,\n  SectionElements,\n  SectionId,\n} from './Grid.types';\n\nexport class Grid<R, T extends SectionId = SectionId> implements IGrid<R, T> {\n  protected rowsCount = 1;\n  protected sectionsIds: T[] = [];\n  protected grid = new Map<T, IGridSection<R, T>>();\n\n  public addSection(\n    sectionId: T,\n    section: IGridSection<R, T>,\n    elements: GridElements\n  ) {\n    section.setIndexRowStart(this.rowsCount).addElements(elements[sectionId]);\n    this.rowsCount += section.rowsNum;\n    this.grid.set(sectionId, section);\n    this.sectionsIds.push(sectionId);\n    return this;\n  }\n\n  public get size() {\n    return this.grid.size;\n  }\n\n  public indexOf(sectionId: T) {\n    return this.sectionsIds.indexOf(sectionId);\n  }\n\n  public sections() {\n    return Array.from(this.grid.values());\n  }\n\n  public section(sectionId: T) {\n    return this.grid.get(sectionId)!;\n  }\n\n  public updateSection(sectionId: T, elements: SectionElements) {\n    if (this.grid.has(sectionId)) {\n      const section = this.grid.get(sectionId);\n      section!.updateElements(elements);\n    }\n\n    return this;\n  }\n}\n","import {\n  GridRows,\n  IGridSection,\n  SectionElements,\n  SectionId,\n  Unknown,\n} from './Grid.types';\n\nexport abstract class AGridSection<R extends Unknown, T = SectionId>\n  implements IGridSection<R, T> {\n  protected rows: GridRows = [];\n  protected _root!: R;\n  protected _rowsNum = 0;\n  protected _indexRowStart = 0;\n\n  constructor(protected _id: T, protected perLine = 8) {\n    this.createRootRef();\n  }\n\n  protected abstract createRootRef(): void;\n\n  public setIndexRowStart(start: number) {\n    this._indexRowStart = start;\n    return this;\n  }\n\n  public addElements(elements: SectionElements) {\n    this._rowsNum = Math.ceil(elements.length / this.perLine);\n    this.initRows(elements);\n\n    return this;\n  }\n\n  public updateElements(elements: SectionElements) {\n    this.rows = [];\n    this.addElements(elements);\n    return this;\n  }\n\n  private initRows(elements: SectionElements) {\n    let i = 0;\n    while (i < this.rowsNum) {\n      this.addRow(elements, i++);\n    }\n  }\n\n  private addRow(elements: SectionElements, lastPosition: number) {\n    const start = lastPosition * this.perLine;\n    const end = start + this.perLine;\n    this.rows.push({\n      elements: elements.slice(start, end),\n      id: this._indexRowStart + lastPosition,\n    });\n  }\n\n  get rowsNum() {\n    return this._rowsNum;\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  get root(): R {\n    return this._root;\n  }\n\n  getRows() {\n    return this.rows;\n  }\n}\n","import { createRef, RefObject } from 'react';\nimport { EmojiCategoryList } from '../../types';\nimport { AGridSection, Grid } from '../Grid';\n\nexport class EmojiFloatingGrid extends Grid<\n  RefObject<HTMLDivElement>,\n  EmojiCategoryList\n> {\n  public createRootRef() {\n    return createRef<HTMLDivElement>();\n  }\n}\n\nexport class EmojiGridSectionWithRoot extends AGridSection<\n  RefObject<HTMLDivElement>,\n  EmojiCategoryList\n> {\n  protected createRootRef() {\n    this._root = createRef<HTMLDivElement>();\n  }\n}\n","import { EmojiCategoryList, EmojiSettingsType } from '../../types';\nimport { GridElements } from '../Grid';\nimport {\n  EmojiFloatingGrid,\n  EmojiGridSectionWithRoot,\n} from './EmojiFloatingGrid';\nimport { IFrequentEmojiStorage } from './EmojiFloatingLibrary.types';\n\nexport class EmojiFloatingGridBuilder {\n  protected grid = new EmojiFloatingGrid();\n\n  constructor(\n    protected localStorage: IFrequentEmojiStorage,\n    protected sections: EmojiCategoryList[],\n    protected elements: GridElements,\n    protected settings: EmojiSettingsType\n  ) {}\n\n  private addFrequent() {\n    if (this.settings.showFrequent.value) {\n      const id = 'frequent';\n      this.grid.addSection(\n        id,\n        new EmojiGridSectionWithRoot(id, this.settings.perLine.value),\n        {\n          [id]: this.localStorage.getList(),\n        }\n      );\n    }\n  }\n\n  public build() {\n    this.addFrequent();\n\n    this.sections.forEach((id) => {\n      this.grid.addSection(\n        id,\n        new EmojiGridSectionWithRoot(id, this.settings.perLine.value),\n        this.elements\n      );\n    });\n\n    return this.grid;\n  }\n}\n","import emojiMartData from '@emoji-mart/data';\nimport { THash } from './EmojiInlineLibrary.types';\nimport {\n  Emoji,\n  EmojiLibrary,\n  Emojis,\n  IEmojiLibrary,\n} from './EmojiLibrary.types';\n\nexport class EmojiInlineLibrary implements IEmojiLibrary {\n  protected _hash: THash = {};\n  protected _keys: string[] = [];\n  protected _emojis: Emojis;\n\n  constructor(library: EmojiLibrary = emojiMartData) {\n    this._emojis = library.emojis;\n    this.init();\n  }\n\n  private init() {\n    Object.values(this._emojis).forEach((emoji) => {\n      const searchableString = this.createSearchableString(emoji);\n      this._keys.push(searchableString);\n      this._hash[searchableString] = emoji.id;\n    });\n  }\n\n  private createSearchableString(emoji: Emoji) {\n    const { id, name, keywords } = emoji;\n    return `${id},${this.getName(name)},${keywords.join(',')}`;\n  }\n\n  private getName(name: string) {\n    return name.toLowerCase().split(' ').join(',');\n  }\n\n  get keys(): string[] {\n    return this._keys;\n  }\n\n  getEmoji(id: string) {\n    return this._emojis[id];\n  }\n\n  getEmojiId(key: string) {\n    return this._hash[key];\n  }\n}\n","import emojiMartData from '@emoji-mart/data';\nimport { defaultCategories } from '../../constants';\nimport {\n  EmojiCategory,\n  EmojiCategoryList,\n  EmojiSettingsType,\n} from '../../types';\nimport { EmojiFloatingGridType } from './EmojiFloatingGrid.types';\nimport { EmojiFloatingGridBuilder } from './EmojiFloatingGridBuilder';\nimport {\n  IEmojiFloatingLibrary,\n  IFrequentEmojiStorage,\n} from './EmojiFloatingLibrary.types';\nimport { EmojiInlineLibrary } from './EmojiInlineLibrary';\nimport { EmojiLibrary } from './EmojiLibrary.types';\n\nexport class EmojiFloatingLibrary\n  extends EmojiInlineLibrary\n  implements IEmojiFloatingLibrary {\n  private static instance?: EmojiFloatingLibrary;\n\n  private categories: EmojiCategoryList[] = defaultCategories;\n  private emojis: Partial<Record<EmojiCategoryList, string[]>> = {};\n  private grid: EmojiFloatingGridType;\n\n  private constructor(\n    protected settings: EmojiSettingsType,\n    protected localStorage: IFrequentEmojiStorage,\n    protected library: EmojiLibrary = emojiMartData\n  ) {\n    super(library);\n\n    this.categories = settings.categories.value ?? this.categories;\n\n    this.initEmojis(library.categories);\n\n    this.grid = new EmojiFloatingGridBuilder(\n      this.localStorage,\n      this.categories,\n      this.emojis,\n      settings\n    ).build();\n  }\n\n  public static getInstance(\n    settings: EmojiSettingsType,\n    localStorage: IFrequentEmojiStorage,\n    library: EmojiLibrary = emojiMartData\n  ) {\n    if (!EmojiFloatingLibrary.instance) {\n      EmojiFloatingLibrary.instance = new EmojiFloatingLibrary(\n        settings,\n        localStorage,\n        library\n      );\n    }\n\n    return EmojiFloatingLibrary.instance;\n  }\n\n  private initEmojis(categoriesLibrary: any) {\n    for (const category of categoriesLibrary) {\n      this.emojis[category.id] = category.emojis;\n    }\n  }\n\n  public updateFrequentCategory(emojiId: string) {\n    this.localStorage.update(emojiId);\n    this.grid.updateSection(\n      EmojiCategory.Frequent,\n      this.localStorage.getList()\n    );\n  }\n\n  public getGrid() {\n    return this.grid;\n  }\n\n  public indexOf(focusedCategory: EmojiCategoryList) {\n    const index = this.grid.indexOf(focusedCategory);\n    return index < 1 ? 0 : index;\n  }\n}\n","import { Dispatch, Reducer, useReducer } from 'react';\nimport { EmojiCategory } from '../../types';\nimport {\n  EmojiPickerStateDispatch,\n  EmojiPickerStateProps,\n} from './EmojiPickerState.types';\n\nconst initialState: EmojiPickerStateProps = {\n  isOpen: false,\n  searchValue: '',\n  emoji: undefined,\n  hasFound: false,\n  isSearching: false,\n  searchResult: [],\n  focusedCategory: undefined,\n  visibleCategories: new Map(),\n  frequentEmoji: undefined,\n};\n\nexport const EmojiPickerState = (): [\n  EmojiPickerStateProps,\n  Dispatch<EmojiPickerStateDispatch>\n] => {\n  const [cache, dispatch] = useReducer<\n    Reducer<EmojiPickerStateProps, EmojiPickerStateDispatch>\n  >((state, action) => {\n    const { type, payload } = action;\n\n    switch (type) {\n      case 'CLEAR_SEARCH':\n        return {\n          ...state,\n          searchValue: '',\n          isSearching: false,\n          hasFound: false,\n          focusedCategory: EmojiCategory.Frequent,\n        };\n      case 'UPDATE_SEARCH_RESULT':\n        return {\n          ...state,\n          ...payload,\n          isSearching: true,\n          focusedCategory: undefined,\n        };\n      case 'SET_FOCUSED_CATEGORY':\n        return {\n          ...state,\n          ...payload,\n          searchValue: '',\n          isSearching: false,\n          hasFound: false,\n        };\n      case 'SET_OPEN':\n        return {\n          ...state,\n          isOpen: true,\n        };\n      case 'SET_CLOSE':\n        return {\n          ...state,\n          emoji: undefined,\n          isOpen: false,\n        };\n      case 'UPDATE_FREQUENT_EMOJIS':\n        return {\n          ...state,\n          ...payload,\n          emoji: undefined,\n        };\n      case 'SET_SEARCH':\n      case 'SET_EMOJI':\n      case 'SET_FOCUSED_AND_VISIBLE_CATEGORIES':\n        return { ...state, ...payload };\n      default: {\n        throw new Error(`Unhandled action type: ${type}`);\n      }\n    }\n  }, initialState);\n\n  return [cache, dispatch];\n};\n","import { ComboboxOnSelectItem } from '@udecode/plate-combobox';\nimport {\n  focusEditor,\n  getPlugin,\n  insertText,\n  PlatePluginKey,\n  withoutNormalizing,\n} from '@udecode/plate-common';\nimport { KEY_EMOJI } from '../constants';\nimport { EmojiItemData, EmojiPlugin } from '../types';\n\nexport const getEmojiOnInsert = <TData extends EmojiItemData = EmojiItemData>({\n  key = KEY_EMOJI,\n}: PlatePluginKey = {}): ComboboxOnSelectItem<TData> => (editor, item) => {\n  const {\n    options: { createEmoji },\n  } = getPlugin<EmojiPlugin>(editor as any, key);\n\n  withoutNormalizing(editor, () => {\n    focusEditor(editor);\n\n    const value = createEmoji!(item);\n    insertText(editor, value);\n  });\n};\n","import { createRef, useCallback, useEffect, useRef } from 'react';\nimport { i18n } from '../../constants';\nimport { getEmojiOnInsert } from '../../handlers/getEmojiOnInsert';\nimport { EmojiCategoryList } from '../../types';\nimport { Emoji } from '../EmojiLibrary';\nimport {\n  observeCategories,\n  SetFocusedAndVisibleSectionsType,\n} from '../EmojiObserver';\nimport { EmojiPickerState } from './EmojiPickerState';\nimport {\n  UseEmojiPickerProps,\n  UseEmojiPickerType,\n} from './useEmojiPicker.types';\n\nexport const useEmojiPicker = ({\n  editor,\n  emojiLibrary,\n  indexSearch,\n  closeOnSelect,\n}: UseEmojiPickerProps): Omit<UseEmojiPickerType, 'icons' | 'settings'> => {\n  const [state, dispatch] = EmojiPickerState();\n  const refs = useRef({\n    contentRoot: createRef<HTMLDivElement>(),\n    content: createRef<HTMLDivElement>(),\n  });\n\n  const onToggle = useCallback(() => {\n    dispatch({\n      type: state.isOpen ? 'SET_CLOSE' : 'SET_OPEN',\n    });\n  }, [dispatch, state.isOpen]);\n\n  const setFocusedAndVisibleSections = useCallback<SetFocusedAndVisibleSectionsType>(\n    (visibleSections, categoryId) => {\n      dispatch({\n        type: 'SET_FOCUSED_AND_VISIBLE_CATEGORIES',\n        payload: {\n          focusedCategory: categoryId,\n          visibleCategories: visibleSections,\n        },\n      });\n    },\n    [dispatch]\n  );\n\n  const handleSearchInput = useCallback(\n    (input: string) => {\n      const value = String(input).replace(/\\s/g, '');\n      if (!value && !input) {\n        dispatch({ type: 'CLEAR_SEARCH' });\n        return;\n      }\n\n      const hasFound = indexSearch.search(value).hasFound();\n\n      dispatch({\n        type: 'UPDATE_SEARCH_RESULT',\n        payload: {\n          searchValue: value,\n          hasFound,\n          searchResult: indexSearch.get(),\n        },\n      });\n    },\n    [dispatch, indexSearch]\n  );\n\n  const setSearch = useCallback(\n    (value: string) => {\n      value ? handleSearchInput(value) : dispatch({ type: 'CLEAR_SEARCH' });\n    },\n    [dispatch, handleSearchInput]\n  );\n\n  const clearSearch = useCallback(() => {\n    dispatch({ type: 'CLEAR_SEARCH' });\n  }, [dispatch]);\n\n  const onMouseOver = useCallback(\n    (emoji?: Emoji) => {\n      dispatch({ type: 'SET_EMOJI', payload: { emoji } });\n    },\n    [dispatch]\n  );\n\n  const updateFrequentEmojis = useCallback(\n    (emojiId: string) => {\n      emojiLibrary.updateFrequentCategory(emojiId);\n\n      dispatch({\n        type: 'UPDATE_FREQUENT_EMOJIS',\n        payload: {\n          frequentEmoji: emojiId,\n          isOpen: closeOnSelect ? false : state.isOpen,\n        },\n      });\n    },\n    [closeOnSelect, dispatch, emojiLibrary, state.isOpen]\n  );\n\n  const onSelectEmoji = useCallback(\n    (emoji: Emoji) => {\n      const selectItem = getEmojiOnInsert();\n      selectItem(editor, {\n        key: emoji.id,\n        text: emoji.name,\n        data: {\n          id: emoji.id,\n          emoji: emoji.skins[0].native,\n          name: emoji.name,\n          text: emoji.name,\n        },\n      });\n\n      updateFrequentEmojis(emoji.id);\n    },\n    [editor, updateFrequentEmojis]\n  );\n\n  const handleCategoryClick = useCallback(\n    (categoryId: EmojiCategoryList) => {\n      dispatch({\n        type: 'SET_FOCUSED_CATEGORY',\n        payload: { focusedCategory: categoryId },\n      });\n\n      const getSectionPositionToScrollIntoView = () => {\n        const trashHold = 1;\n        const section = emojiLibrary.getGrid().section(categoryId);\n\n        const contentRootScrollTop =\n          refs.current.contentRoot.current?.scrollTop ?? 0;\n        const contentRootTopPosition =\n          refs.current.contentRoot.current?.getBoundingClientRect().top ?? 0;\n        const sectionTopPosition =\n          section?.root.current?.getBoundingClientRect().top ?? 0;\n\n        return (\n          trashHold +\n          contentRootScrollTop +\n          sectionTopPosition -\n          contentRootTopPosition\n        );\n      };\n\n      if (refs.current.contentRoot.current) {\n        refs.current.contentRoot.current.scrollTop = getSectionPositionToScrollIntoView();\n      }\n    },\n    [dispatch, emojiLibrary]\n  );\n\n  useEffect(() => {\n    if (state.isOpen && !state.isSearching) {\n      observeCategories({\n        ancestorRef: refs.current.contentRoot,\n        emojiLibrary,\n        setFocusedAndVisibleSections,\n      });\n    }\n  }, [\n    emojiLibrary,\n    state.isOpen,\n    state.isSearching,\n    setFocusedAndVisibleSections,\n  ]);\n\n  return {\n    onToggle,\n    i18n,\n    setSearch,\n    clearSearch,\n    emoji: state.emoji,\n    onMouseOver,\n    onSelectEmoji,\n    emojiLibrary,\n    handleCategoryClick,\n    refs,\n    ...state,\n  };\n};\n","import { TComboboxItem } from '@udecode/plate-combobox';\nimport { EMOJI_MAX_SEARCH_RESULT } from '../../constants';\nimport { EmojiItemData } from '../../types';\nimport { Emoji, IEmojiLibrary } from '../EmojiLibrary';\n\ntype IndexSearchReturnData = TComboboxItem<EmojiItemData>;\n\ninterface IIndexSearch<R> {\n  search: (input: string) => void;\n  hasFound: () => boolean;\n  get: () => R[];\n}\n\nexport abstract class AIndexSearch<RData = IndexSearchReturnData>\n  implements IIndexSearch<RData> {\n  protected result: string[] = [];\n  protected scores = {};\n  protected maxResult = EMOJI_MAX_SEARCH_RESULT;\n  protected input: string | undefined;\n\n  protected constructor(protected library: IEmojiLibrary) {}\n\n  search(input: string): this {\n    this.input = input.toLowerCase();\n    const value = this.input;\n\n    if (value) {\n      this.createSearchResult(value);\n      this.sortResultByScores(this.result, this.scores);\n    } else {\n      this.scores = {};\n      this.result = [];\n    }\n\n    return this;\n  }\n\n  private createSearchResult(value: string) {\n    this.scores = {};\n    this.result = [];\n\n    for (const key of this.library!.keys) {\n      const score = key.indexOf(`${value}`);\n      if (score === -1) continue;\n\n      const emojiId = this.library!.getEmojiId(key);\n      this.result.push(emojiId);\n\n      this.scores[emojiId] || (this.scores[emojiId] = 0);\n      this.scores[emojiId] += emojiId === value ? 0 : score + 1;\n    }\n  }\n\n  private sortResultByScores(result: string[], scores: {}) {\n    result.sort((a, b) => {\n      const aScore = scores[a];\n      const bScore = scores[b];\n\n      if (aScore === bScore) {\n        return a.localeCompare(b);\n      }\n\n      return aScore - bScore;\n    });\n  }\n\n  hasFound(exact = false) {\n    if (exact && this.input) {\n      return this.result.indexOf(this.input) !== -1;\n    }\n\n    return this.result.length > 0;\n  }\n\n  get() {\n    const emojis = [];\n    for (const key of this.result) {\n      const emoji = this.library?.getEmoji(key);\n      emojis.push(this.transform(emoji!));\n      if (emojis.length >= this.maxResult) break;\n    }\n    return emojis;\n  }\n\n  getEmoji(): RData | undefined {\n    return this.get()[0];\n  }\n\n  protected abstract transform(emoji: Emoji): RData;\n}\n","import { Emoji, IEmojiLibrary } from '../EmojiLibrary';\nimport { AIndexSearch } from './IndexSearch';\n\nexport class EmojiFloatingIndexSearch extends AIndexSearch<Emoji> {\n  protected static instance?: EmojiFloatingIndexSearch;\n\n  private constructor(protected library: IEmojiLibrary) {\n    super(library);\n  }\n\n  public static getInstance(library: IEmojiLibrary) {\n    if (!EmojiFloatingIndexSearch.instance) {\n      EmojiFloatingIndexSearch.instance = new EmojiFloatingIndexSearch(library);\n    }\n\n    return EmojiFloatingIndexSearch.instance;\n  }\n\n  protected transform(emoji: Emoji) {\n    return emoji;\n  }\n}\n","import { Emoji, EmojiInlineLibrary, IEmojiLibrary } from '../EmojiLibrary';\nimport { AIndexSearch } from './IndexSearch';\n\nexport class EmojiInlineIndexSearch extends AIndexSearch {\n  protected static instance?: EmojiInlineIndexSearch;\n\n  private constructor(protected library: IEmojiLibrary) {\n    super(library);\n  }\n\n  public static getInstance() {\n    if (!EmojiInlineIndexSearch.instance) {\n      EmojiInlineIndexSearch.instance = new EmojiInlineIndexSearch(\n        new EmojiInlineLibrary()\n      );\n    }\n\n    return EmojiInlineIndexSearch.instance;\n  }\n\n  protected transform(emoji: Emoji) {\n    const { id, name, skins } = emoji;\n\n    return {\n      key: id,\n      text: name,\n      data: {\n        id,\n        emoji: skins[0].native,\n        name,\n        text: name,\n      },\n    };\n  }\n}\n","import { comboboxActions, ComboboxOnSelectItem } from '@udecode/plate-combobox';\nimport {\n  deleteText,\n  getPlugin,\n  insertText,\n  PlatePluginKey,\n  withoutMergingHistory,\n  withoutNormalizing,\n} from '@udecode/plate-common';\nimport { KEY_EMOJI } from '../constants';\nimport { EmojiItemData, EmojiPlugin } from '../types';\n\nexport const getEmojiOnSelectItem = <\n  TData extends EmojiItemData = EmojiItemData\n>({ key = KEY_EMOJI }: PlatePluginKey = {}): ComboboxOnSelectItem<TData> => (\n  editor,\n  item\n) => {\n  const {\n    options: { createEmoji, emojiTriggeringController },\n  } = getPlugin<EmojiPlugin>(editor as any, key);\n\n  withoutNormalizing(editor, () => {\n    withoutMergingHistory(editor, () =>\n      deleteText(editor, {\n        distance: emojiTriggeringController!\n          .setIsTriggering(false)\n          .getTextSize(),\n        reverse: true,\n      })\n    );\n\n    const value = createEmoji!(item);\n    insertText(editor, value);\n  });\n\n  return comboboxActions.reset();\n};\n","import {\n  getEditorString,\n  getPointBefore,\n  getRange,\n  isCollapsed,\n  PlateEditor,\n  Value,\n} from '@udecode/plate-common';\nimport { BasePoint } from 'slate';\nimport { FindTriggeringInputProps } from '../types';\nimport { IEmojiTriggeringController } from '../utils';\n\nconst isSpaceBreak = (char?: string) => !!char && /\\s/.test(char);\n\nconst getPreviousChar = <V extends Value>(\n  editor: PlateEditor<V>,\n  point?: BasePoint\n) =>\n  point\n    ? getEditorString(\n        editor,\n        getRange(editor, point, getPointBefore(editor, point))\n      )\n    : undefined;\n\nconst getPreviousPoint = <V extends Value>(\n  editor: PlateEditor<V>,\n  point?: BasePoint\n) => (point ? getPointBefore(editor, point) : undefined);\n\nconst isBeginningOfTheLine = <V extends Value>(\n  editor: PlateEditor<V>,\n  point?: BasePoint\n) => {\n  const previousPoint = getPreviousPoint(editor, point);\n  return point?.path[0] !== previousPoint?.path[0];\n};\n\nexport const getFindTriggeringInput = <V extends Value>(\n  editor: PlateEditor<V>,\n  emojiTriggeringController: IEmojiTriggeringController\n) => (\n  { char = '', action = 'insert' }: FindTriggeringInputProps = {\n    char: '',\n    action: 'insert',\n  }\n) => {\n  const { selection } = editor;\n\n  if (!selection || !isCollapsed(selection) || isSpaceBreak(char)) {\n    emojiTriggeringController.setIsTriggering(false);\n    return;\n  }\n\n  const startPoint = selection.anchor;\n  let currentPoint: undefined | BasePoint = startPoint;\n  let previousPoint;\n\n  let foundText = char;\n  let previousChar;\n\n  do {\n    previousChar = getPreviousChar(editor, currentPoint);\n    foundText = previousChar + foundText;\n    previousPoint = getPreviousPoint(editor, currentPoint);\n\n    if (isBeginningOfTheLine(editor, currentPoint)) {\n      break;\n    }\n\n    currentPoint = previousPoint;\n  } while (!isSpaceBreak(previousChar));\n\n  foundText = foundText.trim();\n  if (action === 'delete') foundText = foundText.slice(0, -1);\n\n  emojiTriggeringController.setText(foundText);\n};\n","import { comboboxActions } from '@udecode/plate-combobox';\nimport {\n  isCollapsed,\n  PlateEditor,\n  Value,\n  WithPlatePlugin,\n} from '@udecode/plate-common';\nimport { getEmojiOnSelectItem, getFindTriggeringInput } from './handlers';\nimport { EmojiPlugin } from './types';\nimport { EmojiInlineIndexSearch } from './utils';\n\nexport const withEmoji = <\n  V extends Value = Value,\n  E extends PlateEditor<V> = PlateEditor<V>\n>(\n  editor: E,\n  {\n    options: { id, emojiTriggeringController },\n  }: WithPlatePlugin<EmojiPlugin, V, E>\n) => {\n  const emojiInlineIndexSearch = EmojiInlineIndexSearch.getInstance();\n\n  const findTheTriggeringInput = getFindTriggeringInput(\n    editor,\n    emojiTriggeringController!\n  );\n\n  const { apply, insertText, deleteBackward, deleteForward } = editor;\n\n  editor.insertText = (char) => {\n    const { selection } = editor;\n\n    if (!isCollapsed(selection)) {\n      return insertText(char);\n    }\n\n    findTheTriggeringInput({ char });\n\n    return insertText(char);\n  };\n\n  editor.deleteBackward = (unit) => {\n    findTheTriggeringInput({ action: 'delete' });\n    return deleteBackward(unit);\n  };\n\n  editor.deleteForward = (unit) => {\n    findTheTriggeringInput();\n    return deleteForward(unit);\n  };\n\n  editor.apply = (operation) => {\n    apply(operation);\n\n    if (!emojiTriggeringController?.hasTriggeringMark) {\n      return;\n    }\n\n    const searchText = emojiTriggeringController.getText();\n\n    switch (operation.type) {\n      case 'set_selection':\n        emojiTriggeringController.reset();\n        comboboxActions.reset();\n        break;\n\n      case 'insert_text':\n        if (\n          emojiTriggeringController.hasEnclosingTriggeringMark() &&\n          emojiInlineIndexSearch.search(searchText).hasFound(true)\n        ) {\n          const item = emojiInlineIndexSearch.getEmoji();\n          item && getEmojiOnSelectItem()(editor, item);\n          break;\n        }\n\n        if (\n          !emojiTriggeringController.hasEnclosingTriggeringMark() &&\n          emojiTriggeringController.isTriggering &&\n          emojiInlineIndexSearch.search(searchText).hasFound()\n        ) {\n          comboboxActions.items(\n            emojiInlineIndexSearch.search(searchText).get()\n          );\n          comboboxActions.open({\n            activeId: id!,\n            text: '',\n            targetRange: editor.selection,\n          });\n          break;\n        }\n\n        emojiTriggeringController.reset();\n        comboboxActions.reset();\n        break;\n\n      case 'remove_text':\n        if (\n          emojiTriggeringController.isTriggering &&\n          emojiInlineIndexSearch.search(searchText).hasFound()\n        ) {\n          comboboxActions.items(\n            emojiInlineIndexSearch.search(searchText).get()\n          );\n          comboboxActions.open({\n            activeId: id!,\n            text: '',\n            targetRange: editor.selection,\n          });\n          break;\n        }\n\n        emojiTriggeringController.reset();\n        comboboxActions.reset();\n        break;\n    }\n  };\n\n  return editor;\n};\n","import { createPluginFactory } from '@udecode/plate-common';\nimport { EMOJI_TRIGGER, KEY_EMOJI } from './constants';\nimport { EmojiPlugin } from './types';\nimport { EmojiTriggeringController } from './utils';\nimport { withEmoji } from './withEmoji';\n\nexport const createEmojiPlugin = createPluginFactory<EmojiPlugin>({\n  key: KEY_EMOJI,\n  withOverrides: withEmoji,\n  options: {\n    trigger: EMOJI_TRIGGER,\n    createEmoji: (item) => item.data.emoji,\n    emojiTriggeringController: new EmojiTriggeringController(),\n  },\n  then: (\n    _,\n    { key, options: { trigger, createEmoji, emojiTriggeringController } }\n  ) => ({\n    options: {\n      id: key,\n      trigger,\n      createEmoji,\n      emojiTriggeringController,\n    },\n  }),\n});\n","import { ILocalStorage } from './LocalStorage.types';\n\nexport class LocalStorage<T> implements ILocalStorage<T> {\n  constructor(protected key: string, protected defaultValue: T) {}\n\n  set(value: any) {\n    window.localStorage.setItem(this.key, JSON.stringify(value));\n  }\n\n  get(): T {\n    let value = this.defaultValue;\n    const valueInLocalStorage = window.localStorage.getItem(this.key);\n\n    if (valueInLocalStorage) {\n      try {\n        value = JSON.parse(valueInLocalStorage);\n      } catch (error) {\n        window.localStorage.removeItem(this.key);\n      }\n    }\n\n    return value;\n  }\n}\n","import { DEFAULT_FREQUENTLY_USED_EMOJI } from '../constants';\nimport { EmojiCategory } from '../types';\nimport {\n  FrequentEmojis,\n  FrequentEmojiStorageProps,\n  IFrequentEmojiStorage,\n} from '../utils';\nimport { LocalStorage } from './LocalStorage';\n\nexport class FrequentEmojiStorage implements IFrequentEmojiStorage {\n  protected limit = 8;\n  protected prefix = 'emoji';\n  protected key = EmojiCategory.Frequent;\n  protected localStorage;\n\n  constructor(\n    props: FrequentEmojiStorageProps,\n    protected defaultValue = DEFAULT_FREQUENTLY_USED_EMOJI\n  ) {\n    this.limit = props.limit ?? this.limit;\n    const key = `${props.prefix ?? this.prefix}:${props.key ?? this.key}`;\n    this.localStorage = new LocalStorage(key, defaultValue);\n  }\n\n  update(emojiId: string) {\n    const prevEmojis = this.localStorage.get();\n    const count = prevEmojis![emojiId] ? prevEmojis[emojiId] + 1 : 1;\n\n    const emojis: FrequentEmojis = {\n      ...prevEmojis,\n      [emojiId]: count,\n    };\n\n    this.localStorage.set(emojis);\n\n    return emojis;\n  }\n\n  get(): FrequentEmojis {\n    const data = this.localStorage.get();\n    return Object.keys(data)\n      .sort((a, b) => data[b] - data[a])\n      .reduce(\n        (_sortedObj, key) => ({\n          ..._sortedObj,\n          [key]: data[key],\n        }),\n        {}\n      );\n  }\n\n  getList(): string[] {\n    return Object.keys(this.get()).splice(0, this.limit);\n  }\n\n  set(value: any) {\n    this.localStorage.set(value);\n  }\n}\n"],"names":["EmojiCategory","Activity","Custom","Flags","Foods","Frequent","Nature","Objects","People","Places","Symbols","KEY_EMOJI","EMOJI_TRIGGER","EMOJI_MAX_SEARCH_RESULT","emojiTriggeringControllerOptions","trigger","limitTriggeringChars","defaultCategories","EmojiSettings","buttonSize","value","perLine","showFrequent","limit","categories","undefined","DEFAULT_FREQUENTLY_USED_EMOJI","grinning","kissing_heart","heart_eyes","pray","laughing","clap","joy","scream","rocket","see_no_evil","hugging_face","heart","NUM_OF_CATEGORIES","Object","values","length","i18n","search","clear","searchNoResultsTitle","searchNoResultsSubtitle","pick","searchResult","activity","custom","flags","foods","frequent","nature","objects","people","places","symbols","skins","choose","setVisibleSections","entries","visibleSections","entry","id","target","dataset","set","isIntersecting","getSectionInFocus","ratio","observeCategories","ancestorRef","emojiLibrary","setFocusedAndVisibleSections","observerOptions","root","current","threshold","Map","observer","IntersectionObserver","focusedSectionId","section","getGrid","sections","observe","EmojiTriggeringController","constructor","options","isTriggering","_isTriggering","setIsTriggering","hasTriggeringMark","_hasTriggeringMark","hasEnclosingTriggeringMark","endsWithEnclosingMark","text","setText","startsWithTriggeringMark","RegExp","test","getText","replace","getTextSize","reset","Grid","addSection","sectionId","elements","setIndexRowStart","rowsCount","addElements","rowsNum","grid","sectionsIds","push","size","indexOf","Array","from","get","updateSection","has","updateElements","AGridSection","_id","createRootRef","start","_indexRowStart","_rowsNum","Math","ceil","initRows","rows","i","addRow","lastPosition","end","slice","_root","getRows","EmojiFloatingGrid","createRef","EmojiGridSectionWithRoot","EmojiFloatingGridBuilder","localStorage","settings","addFrequent","getList","build","forEach","EmojiInlineLibrary","library","emojiMartData","_emojis","emojis","init","emoji","searchableString","createSearchableString","_keys","_hash","name","keywords","getName","join","toLowerCase","split","keys","getEmoji","getEmojiId","key","EmojiFloatingLibrary","initEmojis","getInstance","instance","categoriesLibrary","category","updateFrequentCategory","emojiId","update","focusedCategory","index","initialState","isOpen","searchValue","hasFound","isSearching","visibleCategories","frequentEmoji","EmojiPickerState","cache","dispatch","useReducer","state","action","type","payload","Error","getEmojiOnInsert","editor","item","createEmoji","getPlugin","withoutNormalizing","focusEditor","insertText","useEmojiPicker","indexSearch","closeOnSelect","refs","useRef","contentRoot","content","onToggle","useCallback","categoryId","handleSearchInput","input","String","setSearch","clearSearch","onMouseOver","updateFrequentEmojis","onSelectEmoji","selectItem","data","native","handleCategoryClick","getSectionPositionToScrollIntoView","trashHold","contentRootScrollTop","scrollTop","contentRootTopPosition","getBoundingClientRect","top","sectionTopPosition","useEffect","AIndexSearch","createSearchResult","sortResultByScores","result","scores","score","sort","a","b","aScore","bScore","localeCompare","exact","transform","maxResult","EmojiFloatingIndexSearch","EmojiInlineIndexSearch","getEmojiOnSelectItem","emojiTriggeringController","withoutMergingHistory","deleteText","distance","reverse","comboboxActions","isSpaceBreak","char","getPreviousChar","point","getEditorString","getRange","getPointBefore","getPreviousPoint","isBeginningOfTheLine","previousPoint","path","getFindTriggeringInput","selection","isCollapsed","startPoint","anchor","currentPoint","foundText","previousChar","trim","withEmoji","emojiInlineIndexSearch","findTheTriggeringInput","apply","deleteBackward","deleteForward","unit","operation","searchText","items","open","activeId","targetRange","createEmojiPlugin","createPluginFactory","withOverrides","then","_","LocalStorage","defaultValue","window","setItem","JSON","stringify","valueInLocalStorage","getItem","parse","error","removeItem","FrequentEmojiStorage","props","prefix","prevEmojis","count","reduce","_sortedObj","splice"],"mappings":";;;;;AA8CO,MAAMA,aAAa,GAAG;AAC3BC,EAAAA,QAAQ,EAAE,UADiB;AAE3BC,EAAAA,MAAM,EAAE,QAFmB;AAG3BC,EAAAA,KAAK,EAAE,OAHoB;AAI3BC,EAAAA,KAAK,EAAE,OAJoB;AAK3BC,EAAAA,QAAQ,EAAE,UALiB;AAM3BC,EAAAA,MAAM,EAAE,QANmB;AAO3BC,EAAAA,OAAO,EAAE,SAPkB;AAQ3BC,EAAAA,MAAM,EAAE,QARmB;AAS3BC,EAAAA,MAAM,EAAE,QATmB;AAU3BC,EAAAA,OAAO,EAAE,SAAA;AAVkB;;ACtCtB,MAAMC,SAAS,GAAG,QAAlB;AACA,MAAMC,aAAa,GAAG,IAAtB;AACA,MAAMC,uBAAuB,GAAG,GAAhC;AAEA,MAAMC,gCAAkE,GAAG;AAChFC,EAAAA,OAAO,EAAEH,aADuE;AAEhFI,EAAAA,oBAAoB,EAAE,CAAA;AAF0D,EAA3E;AAKMC,MAAAA,iBAAsC,GAAG,CACpDjB,aAAa,CAACQ,MADsC,EAEpDR,aAAa,CAACM,MAFsC,EAGpDN,aAAa,CAACI,KAHsC,EAIpDJ,aAAa,CAACC,QAJsC,EAKpDD,aAAa,CAACS,MALsC,EAMpDT,aAAa,CAACO,OANsC,EAOpDP,aAAa,CAACU,OAPsC,EAQpDV,aAAa,CAACG,KARsC,EAA/C;AAWA,MAAMe,aAAgC,GAAG;AAC9CC,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAE,EAAA;GAFqC;AAI9CC,EAAAA,OAAO,EAAE;AACPD,IAAAA,KAAK,EAAE,CAAA;GALqC;AAO9CE,EAAAA,YAAY,EAAE;AACZF,IAAAA,KAAK,EAAE,IADK;AAEZG,IAAAA,KAAK,EAAE,EAAA;GATqC;AAW9CC,EAAAA,UAAU,EAAE;AACVJ,IAAAA,KAAK,EAAEK,SAAAA;AADG,GAAA;AAXkC,EAAzC;AAgBA,MAAMC,6BAA6C,GAAG;AAC3D,EAAA,IAAA,EAAM,CADqD;AAE3DC,EAAAA,QAAQ,EAAE,CAFiD;AAG3DC,EAAAA,aAAa,EAAE,CAH4C;AAI3DC,EAAAA,UAAU,EAAE,CAJ+C;AAK3DC,EAAAA,IAAI,EAAE,CALqD;AAM3DC,EAAAA,QAAQ,EAAE,CANiD;AAO3DC,EAAAA,IAAI,EAAE,CAPqD;AAQ3DC,EAAAA,GAAG,EAAE,CARsD;AAS3DC,EAAAA,MAAM,EAAE,CATmD;AAU3DC,EAAAA,MAAM,EAAE,CAVmD;AAW3DC,EAAAA,WAAW,EAAE,CAX8C;AAY3DC,EAAAA,YAAY,EAAE,CAZ6C;AAa3DC,EAAAA,KAAK,EAAE,CAAA;AAboD,EAAtD;AAgBA,MAAMC,iBAAiB,GAAGC,MAAM,CAACC,MAAP,CAAczC,aAAd,CAAA,CAA6B0C,OAAvD;AAEA,MAAMC,IAAe,GAAG;AAC7BC,EAAAA,MAAM,EAAE,kBADqB;AAE7BC,EAAAA,KAAK,EAAE,OAFsB;AAG7BC,EAAAA,oBAAoB,EAAE,QAHO;AAI7BC,EAAAA,uBAAuB,EAAE,8BAJI;AAK7BC,EAAAA,IAAI,EAAE,kBALuB;AAM7BC,EAAAA,YAAY,EAAE,gBANe;AAO7BzB,EAAAA,UAAU,EAAE;AACV0B,IAAAA,QAAQ,EAAE,UADA;AAEVC,IAAAA,MAAM,EAAE,QAFE;AAGVC,IAAAA,KAAK,EAAE,OAHG;AAIVC,IAAAA,KAAK,EAAE,cAJG;AAKVC,IAAAA,QAAQ,EAAE,iBALA;AAMVC,IAAAA,MAAM,EAAE,kBANE;AAOVC,IAAAA,OAAO,EAAE,SAPC;AAQVC,IAAAA,MAAM,EAAE,kBARE;AASVC,IAAAA,MAAM,EAAE,iBATE;AAUVC,IAAAA,OAAO,EAAE,SAAA;GAjBkB;AAmB7BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE,0BADH;AAEL,IAAA,GAAA,EAAK,SAFA;AAGL,IAAA,GAAA,EAAK,OAHA;AAIL,IAAA,GAAA,EAAK,cAJA;AAKL,IAAA,GAAA,EAAK,QALA;AAML,IAAA,GAAA,EAAK,aANA;IAOL,GAAK,EAAA,MAAA;AAPA,GAAA;AAnBsB;;ACzD/B,MAAMC,kBAAkB,GAAG,CACzBC,OADyB,EAEzBC,eAFyB,KAGtB;AACH,EAAA,KAAK,MAAMC,KAAX,IAAoBF,OAApB,EAA6B;IAC3B,MAAMG,EAAE,GAAID,KAAK,CAACE,MAAP,CAAiCC,OAAjC,CAAyCF,EAApD,CAAA;AACAF,IAAAA,eAAe,CAACK,GAAhB,CAAoBH,EAApB,EAAwBD,KAAK,CAACK,cAA9B,CAAA,CAAA;AACD,GAAA;AACF,CARD,CAAA;;AAUA,MAAMC,iBAAiB,GACrBP,eADwB,IAEU;EAClC,KAAK,MAAM,CAACE,EAAD,EAAKM,KAAL,CAAX,IAA0BR,eAA1B,EAA2C;AACzC,IAAA,IAAIQ,KAAJ,EAAW;AACT,MAAA,OAAON,EAAP,CAAA;AACD,KAAA;AACF,GAAA;AACF,CARD,CAAA;;AAqBO,MAAMO,iBAAiB,GAAG,CAAC;EAChCC,WADgC;EAEhCC,YAFgC;AAGhCC,EAAAA,4BAAAA;AAHgC,CAAD,KAIH;AAC5B,EAAA,MAAMC,eAAe,GAAG;IACtBC,IAAI,EAAEJ,WAAW,CAACK,OADI;AAEtBC,IAAAA,SAAS,EAAE,CAAA;GAFb,CAAA;AAKA,EAAA,MAAMhB,eAAqC,GAAG,IAAIiB,GAAJ,EAA9C,CAAA;AAEA,EAAA,MAAMC,QAAQ,GAAG,IAAIC,oBAAJ,CAA0BpB,OAAD,IAAa;AACrDD,IAAAA,kBAAkB,CAACC,OAAD,EAAUC,eAAV,CAAlB,CAAA;AACA,IAAA,MAAMoB,gBAAgB,GAAGb,iBAAiB,CAACP,eAAD,CAA1C,CAAA;AAEAoB,IAAAA,gBAAgB,IACdR,4BAA4B,CAACZ,eAAD,EAAkBoB,gBAAlB,CAD9B,CAAA;GAJe,EAMdP,eANc,CAAjB,CAAA;;EAQA,KAAK,MAAMQ,OAAX,IAAsBV,YAAY,CAACW,OAAb,EAAA,CAAuBC,QAAvB,EAAtB,EAAyD;AACvD,IAAA,IAAIF,OAAO,CAACP,IAAR,CAAaC,OAAjB,EAA0BG,QAAQ,CAACM,OAAT,CAAiBH,OAAO,CAACP,IAAR,CAAaC,OAA9B,CAAA,CAAA;AAC3B,GAAA;;AAED,EAAA,OAAOG,QAAP,CAAA;AACD;;;;;;;;;;;;;;;;;ACvDM,MAAMO,yBAAN,CAAsE;AAM3EC,EAAAA,WAAW,CACCC,OAAyC,GAAG7E,gCAD7C,EAET;IAAA,IADU6E,CAAAA,OACV,GADUA,OACV,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,eAAA,EAPsB,KAOtB,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,oBAAA,EAN2B,KAM3B,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,MAAA,EALe,EAKf,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,KAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AAAE,GAAA;;AAEY,EAAA,IAAZC,YAAY,GAAY;AAC1B,IAAA,OAAO,KAAKC,aAAZ,CAAA;AACD,GAAA;;EAEDC,eAAe,CAACF,YAAD,EAAwB;IACrC,IAAKC,CAAAA,aAAL,GAAqBD,YAArB,CAAA;AACA,IAAA,OAAO,IAAP,CAAA;AACD,GAAA;;AAEoB,EAAA,IAAjBG,iBAAiB,GAAY;AAC/B,IAAA,OAAO,KAAKC,kBAAZ,CAAA;AACD,GAAA;;AAEDC,EAAAA,0BAA0B,GAAY;AACpC,IAAA,OAAO,IAAKC,CAAAA,qBAAL,CAA2B,IAAA,CAAKC,IAAhC,CAAP,CAAA;AACD,GAAA;;EAEDC,OAAO,CAACD,IAAD,EAAe;AACpB,IAAA,IAAA,CAAKH,kBAAL,GAA0B,IAAA,CAAKK,wBAAL,CAA8BF,IAA9B,CAA1B,CAAA;AAEA,IAAA,IAAA,CAAKL,eAAL,CACE,IAAKE,CAAAA,kBAAL,IAA2BG,IAAI,CAACzD,MAAL,GAAc,IAAA,CAAKiD,OAAL,CAAa3E,oBADxD,CAAA,CAAA;AAIA,IAAA,IAAA,CAAKmF,IAAL,GAAY,IAAA,CAAKP,YAAL,GAAoBO,IAApB,GAA2B,EAAvC,CAAA;AAEA,IAAA,OAAO,IAAP,CAAA;AACD,GAAA;;EAEOE,wBAAwB,CAACF,IAAD,EAAe;AAC7C,IAAA,OAAO,IAAIG,MAAJ,CAAY,CAAA,CAAA,EAAG,IAAKX,CAAAA,OAAL,CAAa5E,OAAQ,CAApC,CAAA,CAAA,CAAuCwF,IAAvC,CAA4CJ,IAA5C,CAAP,CAAA;AACD,GAAA;;EAEOD,qBAAqB,CAACC,IAAD,EAAe;AAC1C,IAAA,OAAO,IAAIG,MAAJ,CAAY,CAAA,EAAE,IAAKX,CAAAA,OAAL,CAAa5E,OAAQ,CAAnC,CAAA,CAAA,CAAA,CAAuCwF,IAAvC,CAA4CJ,IAA5C,CAAP,CAAA;AACD,GAAA;;AAEDK,EAAAA,OAAO,GAAG;IACR,OAAO,IAAA,CAAKL,IAAL,CAAUM,OAAV,CAAkB,YAAlB,EAAgC,EAAhC,CAAP,CAAA;AACD,GAAA;;AAEDC,EAAAA,WAAW,GAAG;IACZ,OAAO,IAAA,CAAKP,IAAL,CAAUzD,MAAjB,CAAA;AACD,GAAA;;AAEDiE,EAAAA,KAAK,GAAG;IACN,IAAKR,CAAAA,IAAL,GAAY,EAAZ,CAAA;IACA,IAAKL,CAAAA,eAAL,CAAqB,KAArB,CAAA,CAAA;IACA,IAAKE,CAAAA,kBAAL,GAA0B,KAA1B,CAAA;AACA,IAAA,OAAO,IAAP,CAAA;AACD,GAAA;;AA5D0E;;ACEtE,MAAMY,IAAN,CAAsE;AAAA,EAAA,WAAA,GAAA;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,WAAA,EACrD,CADqD,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,aAAA,EAE9C,EAF8C,CAAA,CAAA;;IAAA,eAG1D,CAAA,IAAA,EAAA,MAAA,EAAA,IAAI3B,GAAJ,EAH0D,CAAA,CAAA;AAAA,GAAA;;AAKpE4B,EAAAA,UAAU,CACfC,SADe,EAEfzB,OAFe,EAGf0B,QAHe,EAIf;IACA1B,OAAO,CAAC2B,gBAAR,CAAyB,IAAKC,CAAAA,SAA9B,CAAyCC,CAAAA,WAAzC,CAAqDH,QAAQ,CAACD,SAAD,CAA7D,CAAA,CAAA;AACA,IAAA,IAAA,CAAKG,SAAL,IAAkB5B,OAAO,CAAC8B,OAA1B,CAAA;AACA,IAAA,IAAA,CAAKC,IAAL,CAAU/C,GAAV,CAAcyC,SAAd,EAAyBzB,OAAzB,CAAA,CAAA;AACA,IAAA,IAAA,CAAKgC,WAAL,CAAiBC,IAAjB,CAAsBR,SAAtB,CAAA,CAAA;AACA,IAAA,OAAO,IAAP,CAAA;AACD,GAAA;;AAEc,EAAA,IAAJS,IAAI,GAAG;IAChB,OAAO,IAAA,CAAKH,IAAL,CAAUG,IAAjB,CAAA;AACD,GAAA;;EAEMC,OAAO,CAACV,SAAD,EAAe;AAC3B,IAAA,OAAO,KAAKO,WAAL,CAAiBG,OAAjB,CAAyBV,SAAzB,CAAP,CAAA;AACD,GAAA;;AAEMvB,EAAAA,QAAQ,GAAG;IAChB,OAAOkC,KAAK,CAACC,IAAN,CAAW,KAAKN,IAAL,CAAU3E,MAAV,EAAX,CAAP,CAAA;AACD,GAAA;;EAEM4C,OAAO,CAACyB,SAAD,EAAe;AAC3B,IAAA,OAAO,KAAKM,IAAL,CAAUO,GAAV,CAAcb,SAAd,CAAP,CAAA;AACD,GAAA;;AAEMc,EAAAA,aAAa,CAACd,SAAD,EAAeC,QAAf,EAA0C;AAC5D,IAAA,IAAI,KAAKK,IAAL,CAAUS,GAAV,CAAcf,SAAd,CAAJ,EAA8B;MAC5B,MAAMzB,OAAO,GAAG,IAAK+B,CAAAA,IAAL,CAAUO,GAAV,CAAcb,SAAd,CAAhB,CAAA;MACAzB,OAAO,CAAEyC,cAAT,CAAwBf,QAAxB,CAAA,CAAA;AACD,KAAA;;AAED,IAAA,OAAO,IAAP,CAAA;AACD,GAAA;;AAxC0E;;ACAtE,MAAegB,YAAf,CACyB;AAM9BrC,EAAAA,WAAW,CAAWsC,GAAX,EAA6B3G,OAAO,GAAG,CAAvC,EAA0C;IAAA,IAA/B2G,CAAAA,GAA+B,GAA/BA,GAA+B,CAAA;IAAA,IAAb3G,CAAAA,OAAa,GAAbA,OAAa,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,MAAA,EAL1B,EAK0B,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,OAAA,EAAA,KAAA,CAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,UAAA,EAHhC,CAGgC,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,gBAAA,EAF1B,CAE0B,CAAA,CAAA;;AACnD,IAAA,IAAA,CAAK4G,aAAL,EAAA,CAAA;AACD,GAAA;;EAIMjB,gBAAgB,CAACkB,KAAD,EAAgB;IACrC,IAAKC,CAAAA,cAAL,GAAsBD,KAAtB,CAAA;AACA,IAAA,OAAO,IAAP,CAAA;AACD,GAAA;;EAEMhB,WAAW,CAACH,QAAD,EAA4B;AAC5C,IAAA,IAAA,CAAKqB,QAAL,GAAgBC,IAAI,CAACC,IAAL,CAAUvB,QAAQ,CAACrE,MAAT,GAAkB,IAAKrB,CAAAA,OAAjC,CAAhB,CAAA;IACA,IAAKkH,CAAAA,QAAL,CAAcxB,QAAd,CAAA,CAAA;AAEA,IAAA,OAAO,IAAP,CAAA;AACD,GAAA;;EAEMe,cAAc,CAACf,QAAD,EAA4B;IAC/C,IAAKyB,CAAAA,IAAL,GAAY,EAAZ,CAAA;IACA,IAAKtB,CAAAA,WAAL,CAAiBH,QAAjB,CAAA,CAAA;AACA,IAAA,OAAO,IAAP,CAAA;AACD,GAAA;;EAEOwB,QAAQ,CAACxB,QAAD,EAA4B;IAC1C,IAAI0B,CAAC,GAAG,CAAR,CAAA;;AACA,IAAA,OAAOA,CAAC,GAAG,IAAKtB,CAAAA,OAAhB,EAAyB;AACvB,MAAA,IAAA,CAAKuB,MAAL,CAAY3B,QAAZ,EAAsB0B,CAAC,EAAvB,CAAA,CAAA;AACD,KAAA;AACF,GAAA;;AAEOC,EAAAA,MAAM,CAAC3B,QAAD,EAA4B4B,YAA5B,EAAkD;AAC9D,IAAA,MAAMT,KAAK,GAAGS,YAAY,GAAG,KAAKtH,OAAlC,CAAA;AACA,IAAA,MAAMuH,GAAG,GAAGV,KAAK,GAAG,KAAK7G,OAAzB,CAAA;IACA,IAAKmH,CAAAA,IAAL,CAAUlB,IAAV,CAAe;MACbP,QAAQ,EAAEA,QAAQ,CAAC8B,KAAT,CAAeX,KAAf,EAAsBU,GAAtB,CADG;MAEb1E,EAAE,EAAE,IAAKiE,CAAAA,cAAL,GAAsBQ,YAAAA;KAF5B,CAAA,CAAA;AAID,GAAA;;AAEU,EAAA,IAAPxB,OAAO,GAAG;AACZ,IAAA,OAAO,KAAKiB,QAAZ,CAAA;AACD,GAAA;;AAEK,EAAA,IAAFlE,EAAE,GAAG;AACP,IAAA,OAAO,KAAK8D,GAAZ,CAAA;AACD,GAAA;;AAEO,EAAA,IAAJlD,IAAI,GAAM;AACZ,IAAA,OAAO,KAAKgE,KAAZ,CAAA;AACD,GAAA;;AAEDC,EAAAA,OAAO,GAAG;AACR,IAAA,OAAO,KAAKP,IAAZ,CAAA;AACD,GAAA;;AA5D6B;;ACLzB,MAAMQ,iBAAN,SAAgCpC,IAAhC,CAGL;AACOqB,EAAAA,aAAa,GAAG;AACrB,IAAA,oBAAOgB,SAAS,EAAhB,CAAA;AACD,GAAA;;AAHD,CAAA;AAMK,MAAMC,wBAAN,SAAuCnB,YAAvC,CAGL;AACUE,EAAAA,aAAa,GAAG;IACxB,IAAKa,CAAAA,KAAL,gBAAaG,SAAS,EAAtB,CAAA;AACD,GAAA;;AAHD;;ACRK,MAAME,wBAAN,CAA+B;EAGpCzD,WAAW,CACC0D,YADD,EAEC7D,QAFD,EAGCwB,QAHD,EAICsC,QAJD,EAKT;IAAA,IAJUD,CAAAA,YAIV,GAJUA,YAIV,CAAA;IAAA,IAHU7D,CAAAA,QAGV,GAHUA,QAGV,CAAA;IAAA,IAFUwB,CAAAA,QAEV,GAFUA,QAEV,CAAA;IAAA,IADUsC,CAAAA,QACV,GADUA,QACV,CAAA;;IAAA,eAPe,CAAA,IAAA,EAAA,MAAA,EAAA,IAAIL,iBAAJ,EAOf,CAAA,CAAA;AAAE,GAAA;;AAEIM,EAAAA,WAAW,GAAG;AACpB,IAAA,IAAI,KAAKD,QAAL,CAAc/H,YAAd,CAA2BF,KAA/B,EAAsC;MACpC,MAAM8C,EAAE,GAAG,UAAX,CAAA;AACA,MAAA,IAAA,CAAKkD,IAAL,CAAUP,UAAV,CACE3C,EADF,EAEE,IAAIgF,wBAAJ,CAA6BhF,EAA7B,EAAiC,KAAKmF,QAAL,CAAchI,OAAd,CAAsBD,KAAvD,CAFF,EAGE;AACE,QAAA,CAAC8C,EAAD,GAAM,IAAKkF,CAAAA,YAAL,CAAkBG,OAAlB,EAAA;OAJV,CAAA,CAAA;AAOD,KAAA;AACF,GAAA;;AAEMC,EAAAA,KAAK,GAAG;AACb,IAAA,IAAA,CAAKF,WAAL,EAAA,CAAA;AAEA,IAAA,IAAA,CAAK/D,QAAL,CAAckE,OAAd,CAAuBvF,EAAD,IAAQ;MAC5B,IAAKkD,CAAAA,IAAL,CAAUP,UAAV,CACE3C,EADF,EAEE,IAAIgF,wBAAJ,CAA6BhF,EAA7B,EAAiC,IAAKmF,CAAAA,QAAL,CAAchI,OAAd,CAAsBD,KAAvD,CAFF,EAGE,KAAK2F,QAHP,CAAA,CAAA;KADF,CAAA,CAAA;AAQA,IAAA,OAAO,KAAKK,IAAZ,CAAA;AACD,GAAA;;AAnCmC;;ACC/B,MAAMsC,kBAAN,CAAkD;AAKvDhE,EAAAA,WAAW,CAACiE,OAAqB,GAAGC,aAAzB,EAAwC;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,OAAA,EAJ1B,EAI0B,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,OAAA,EAHvB,EAGuB,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,SAAA,EAAA,KAAA,CAAA,CAAA,CAAA;;AACjD,IAAA,IAAA,CAAKC,OAAL,GAAeF,OAAO,CAACG,MAAvB,CAAA;AACA,IAAA,IAAA,CAAKC,IAAL,EAAA,CAAA;AACD,GAAA;;AAEOA,EAAAA,IAAI,GAAG;IACbvH,MAAM,CAACC,MAAP,CAAc,IAAA,CAAKoH,OAAnB,CAA4BJ,CAAAA,OAA5B,CAAqCO,KAAD,IAAW;AAC7C,MAAA,MAAMC,gBAAgB,GAAG,IAAA,CAAKC,sBAAL,CAA4BF,KAA5B,CAAzB,CAAA;;AACA,MAAA,IAAA,CAAKG,KAAL,CAAW7C,IAAX,CAAgB2C,gBAAhB,CAAA,CAAA;;AACA,MAAA,IAAA,CAAKG,KAAL,CAAWH,gBAAX,CAA+BD,GAAAA,KAAK,CAAC9F,EAArC,CAAA;KAHF,CAAA,CAAA;AAKD,GAAA;;EAEOgG,sBAAsB,CAACF,KAAD,EAAe;IAC3C,MAAM;MAAE9F,EAAF;MAAMmG,IAAN;AAAYC,MAAAA,QAAAA;AAAZ,KAAA,GAAyBN,KAA/B,CAAA;AACA,IAAA,OAAQ,CAAE9F,EAAAA,EAAG,CAAG,CAAA,EAAA,IAAA,CAAKqG,OAAL,CAAaF,IAAb,CAAmB,CAAA,CAAA,EAAGC,QAAQ,CAACE,IAAT,CAAc,GAAd,CAAmB,CAAzD,CAAA,CAAA;AACD,GAAA;;EAEOD,OAAO,CAACF,IAAD,EAAe;IAC5B,OAAOA,IAAI,CAACI,WAAL,EAAmBC,CAAAA,KAAnB,CAAyB,GAAzB,CAA8BF,CAAAA,IAA9B,CAAmC,GAAnC,CAAP,CAAA;AACD,GAAA;;AAEO,EAAA,IAAJG,IAAI,GAAa;AACnB,IAAA,OAAO,KAAKR,KAAZ,CAAA;AACD,GAAA;;EAEDS,QAAQ,CAAC1G,EAAD,EAAa;AACnB,IAAA,OAAO,IAAK2F,CAAAA,OAAL,CAAa3F,EAAb,CAAP,CAAA;AACD,GAAA;;EAED2G,UAAU,CAACC,GAAD,EAAc;AACtB,IAAA,OAAO,IAAKV,CAAAA,KAAL,CAAWU,GAAX,CAAP,CAAA;AACD,GAAA;;AArCsD;;ACOlD,MAAMC,oBAAN,SACGrB,kBADH,CAE4B;EAOzBhE,WAAW,CACP2D,QADO,EAEPD,YAFO,EAGPO,OAAqB,GAAGC,aAHjB,EAIjB;AAAA,IAAA,IAAA,qBAAA,CAAA;;AACA,IAAA,KAAA,CAAMD,OAAN,CAAA,CAAA;IADA,IAHUN,CAAAA,QAGV,GAHUA,QAGV,CAAA;IAAA,IAFUD,CAAAA,YAEV,GAFUA,YAEV,CAAA;IAAA,IADUO,CAAAA,OACV,GADUA,OACV,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,YAAA,EARwC1I,iBAQxC,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,QAAA,EAP6D,EAO7D,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,MAAA,EAAA,KAAA,CAAA,CAAA,CAAA;;IAGA,IAAKO,CAAAA,UAAL,4BAAkB6H,QAAQ,CAAC7H,UAAT,CAAoBJ,KAAtC,MAA+C,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,qBAAA,GAAA,IAAA,CAAKI,UAApD,CAAA;AAEA,IAAA,IAAA,CAAKwJ,UAAL,CAAgBrB,OAAO,CAACnI,UAAxB,CAAA,CAAA;AAEA,IAAA,IAAA,CAAK4F,IAAL,GAAY,IAAI+B,wBAAJ,CACV,KAAKC,YADK,EAEV,IAAK5H,CAAAA,UAFK,EAGV,IAAKsI,CAAAA,MAHK,EAIVT,QAJU,CAAA,CAKVG,KALU,EAAZ,CAAA;AAMD,GAAA;;EAEwB,OAAXyB,WAAW,CACvB5B,QADuB,EAEvBD,YAFuB,EAGvBO,OAAqB,GAAGC,aAHD,EAIvB;AACA,IAAA,IAAI,CAACmB,oBAAoB,CAACG,QAA1B,EAAoC;MAClCH,oBAAoB,CAACG,QAArB,GAAgC,IAAIH,oBAAJ,CAC9B1B,QAD8B,EAE9BD,YAF8B,EAG9BO,OAH8B,CAAhC,CAAA;AAKD,KAAA;;IAED,OAAOoB,oBAAoB,CAACG,QAA5B,CAAA;AACD,GAAA;;EAEOF,UAAU,CAACG,iBAAD,EAAyB;AACzC,IAAA,KAAK,MAAMC,QAAX,IAAuBD,iBAAvB,EAA0C;MACxC,IAAKrB,CAAAA,MAAL,CAAYsB,QAAQ,CAAClH,EAArB,CAA2BkH,GAAAA,QAAQ,CAACtB,MAApC,CAAA;AACD,KAAA;AACF,GAAA;;EAEMuB,sBAAsB,CAACC,OAAD,EAAkB;AAC7C,IAAA,IAAA,CAAKlC,YAAL,CAAkBmC,MAAlB,CAAyBD,OAAzB,CAAA,CAAA;AACA,IAAA,IAAA,CAAKlE,IAAL,CAAUQ,aAAV,CACE5H,aAAa,CAACK,QADhB,EAEE,IAAK+I,CAAAA,YAAL,CAAkBG,OAAlB,EAFF,CAAA,CAAA;AAID,GAAA;;AAEMjE,EAAAA,OAAO,GAAG;AACf,IAAA,OAAO,KAAK8B,IAAZ,CAAA;AACD,GAAA;;EAEMI,OAAO,CAACgE,eAAD,EAAqC;IACjD,MAAMC,KAAK,GAAG,IAAKrE,CAAAA,IAAL,CAAUI,OAAV,CAAkBgE,eAAlB,CAAd,CAAA;AACA,IAAA,OAAOC,KAAK,GAAG,CAAR,GAAY,CAAZ,GAAgBA,KAAvB,CAAA;AACD,GAAA;;AA/DgC,CAAA;;gBAFtBV;;ACTb,MAAMW,YAAmC,GAAG;AAC1CC,EAAAA,MAAM,EAAE,KADkC;AAE1CC,EAAAA,WAAW,EAAE,EAF6B;AAG1C5B,EAAAA,KAAK,EAAEvI,SAHmC;AAI1CoK,EAAAA,QAAQ,EAAE,KAJgC;AAK1CC,EAAAA,WAAW,EAAE,KAL6B;AAM1C7I,EAAAA,YAAY,EAAE,EAN4B;AAO1CuI,EAAAA,eAAe,EAAE/J,SAPyB;EAQ1CsK,iBAAiB,EAAE,IAAI9G,GAAJ,EARuB;AAS1C+G,EAAAA,aAAa,EAAEvK,SAAAA;AAT2B,CAA5C,CAAA;AAYO,MAAMwK,gBAAgB,GAAG,MAG3B;EACH,MAAM,CAACC,KAAD,EAAQC,QAAR,CAAA,GAAoBC,UAAU,CAElC,CAACC,KAAD,EAAQC,MAAR,KAAmB;IACnB,MAAM;MAAEC,IAAF;AAAQC,MAAAA,OAAAA;AAAR,KAAA,GAAoBF,MAA1B,CAAA;;AAEA,IAAA,QAAQC,IAAR;AACE,MAAA,KAAK,cAAL;QACE,OAAO,EACL,GAAGF,KADE;AAELT,UAAAA,WAAW,EAAE,EAFR;AAGLE,UAAAA,WAAW,EAAE,KAHR;AAILD,UAAAA,QAAQ,EAAE,KAJL;UAKLL,eAAe,EAAExL,aAAa,CAACK,QAAAA;SALjC,CAAA;;AAOF,MAAA,KAAK,sBAAL;QACE,OAAO,EACL,GAAGgM,KADE;AAEL,UAAA,GAAGG,OAFE;AAGLV,UAAAA,WAAW,EAAE,IAHR;AAILN,UAAAA,eAAe,EAAE/J,SAAAA;SAJnB,CAAA;;AAMF,MAAA,KAAK,sBAAL;QACE,OAAO,EACL,GAAG4K,KADE;AAEL,UAAA,GAAGG,OAFE;AAGLZ,UAAAA,WAAW,EAAE,EAHR;AAILE,UAAAA,WAAW,EAAE,KAJR;AAKLD,UAAAA,QAAQ,EAAE,KAAA;SALZ,CAAA;;AAOF,MAAA,KAAK,UAAL;QACE,OAAO,EACL,GAAGQ,KADE;AAELV,UAAAA,MAAM,EAAE,IAAA;SAFV,CAAA;;AAIF,MAAA,KAAK,WAAL;QACE,OAAO,EACL,GAAGU,KADE;AAELrC,UAAAA,KAAK,EAAEvI,SAFF;AAGLkK,UAAAA,MAAM,EAAE,KAAA;SAHV,CAAA;;AAKF,MAAA,KAAK,wBAAL;QACE,OAAO,EACL,GAAGU,KADE;AAEL,UAAA,GAAGG,OAFE;AAGLxC,UAAAA,KAAK,EAAEvI,SAAAA;SAHT,CAAA;;AAKF,MAAA,KAAK,YAAL,CAAA;AACA,MAAA,KAAK,WAAL,CAAA;AACA,MAAA,KAAK,oCAAL;QACE,OAAO,EAAE,GAAG4K,KAAL;UAAY,GAAGG,OAAAA;SAAtB,CAAA;;AACF,MAAA;AAAS,QAAA;AACP,UAAA,MAAM,IAAIC,KAAJ,CAAW,CAAyBF,uBAAAA,EAAAA,IAAK,EAAzC,CAAN,CAAA;AACD,SAAA;AA/CH,KAAA;GALkC,EAsDjCb,YAtDiC,CAApC,CAAA;AAwDA,EAAA,OAAO,CAACQ,KAAD,EAAQC,QAAR,CAAP,CAAA;AACD;;ACrEM,MAAMO,gBAAgB,GAAG,CAA8C;AAC5E5B,EAAAA,GAAG,GAAGnK,SAAAA;AADsE,CAAA,GAE1D,EAFY,KAEwB,CAACgM,MAAD,EAASC,IAAT,KAAkB;EACxE,MAAM;AACJjH,IAAAA,OAAO,EAAE;AAAEkH,MAAAA,WAAAA;AAAF,KAAA;AADL,GAAA,GAEFC,SAAS,CAAcH,MAAd,EAA6B7B,GAA7B,CAFb,CAAA;EAIAiC,kBAAkB,CAACJ,MAAD,EAAS,MAAM;IAC/BK,WAAW,CAACL,MAAD,CAAX,CAAA;AAEA,IAAA,MAAMvL,KAAK,GAAGyL,WAAW,CAAED,IAAF,CAAzB,CAAA;AACAK,IAAAA,UAAU,CAACN,MAAD,EAASvL,KAAT,CAAV,CAAA;AACD,GALiB,CAAlB,CAAA;AAMD;;ACTM,MAAM8L,cAAc,GAAG,CAAC;EAC7BP,MAD6B;EAE7BhI,YAF6B;EAG7BwI,WAH6B;AAI7BC,EAAAA,aAAAA;AAJ6B,CAAD,KAK6C;AACzE,EAAA,MAAM,CAACf,KAAD,EAAQF,QAAR,CAAA,GAAoBF,gBAAgB,EAA1C,CAAA;EACA,MAAMoB,IAAI,GAAGC,MAAM,CAAC;IAClBC,WAAW,eAAEtE,SAAS,EADJ;AAElBuE,IAAAA,OAAO,eAAEvE,SAAS,EAAA;AAFA,GAAD,CAAnB,CAAA;AAKA,EAAA,MAAMwE,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjCvB,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEF,KAAK,CAACV,MAAN,GAAe,WAAf,GAA6B,UAAA;AAD5B,KAAD,CAAR,CAAA;GAD0B,EAIzB,CAACQ,QAAD,EAAWE,KAAK,CAACV,MAAjB,CAJyB,CAA5B,CAAA;EAMA,MAAM/G,4BAA4B,GAAG8I,WAAW,CAC9C,CAAC1J,eAAD,EAAkB2J,UAAlB,KAAiC;AAC/BxB,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAE,oCADC;AAEPC,MAAAA,OAAO,EAAE;AACPhB,QAAAA,eAAe,EAAEmC,UADV;AAEP5B,QAAAA,iBAAiB,EAAE/H,eAAAA;AAFZ,OAAA;AAFF,KAAD,CAAR,CAAA;AAOD,GAT6C,EAU9C,CAACmI,QAAD,CAV8C,CAAhD,CAAA;AAaA,EAAA,MAAMyB,iBAAiB,GAAGF,WAAW,CAClCG,KAAD,IAAmB;AACjB,IAAA,MAAMzM,KAAK,GAAG0M,MAAM,CAACD,KAAD,CAAN,CAAcpH,OAAd,CAAsB,KAAtB,EAA6B,EAA7B,CAAd,CAAA;;AACA,IAAA,IAAI,CAACrF,KAAD,IAAU,CAACyM,KAAf,EAAsB;AACpB1B,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAE,cAAA;AAAR,OAAD,CAAR,CAAA;AACA,MAAA,OAAA;AACD,KAAA;;IAED,MAAMV,QAAQ,GAAGsB,WAAW,CAACvK,MAAZ,CAAmBxB,KAAnB,CAA0ByK,CAAAA,QAA1B,EAAjB,CAAA;AAEAM,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAE,sBADC;AAEPC,MAAAA,OAAO,EAAE;AACPZ,QAAAA,WAAW,EAAExK,KADN;QAEPyK,QAFO;QAGP5I,YAAY,EAAEkK,WAAW,CAACxF,GAAZ,EAAA;AAHP,OAAA;AAFF,KAAD,CAAR,CAAA;AAQD,GAlBkC,EAmBnC,CAACwE,QAAD,EAAWgB,WAAX,CAnBmC,CAArC,CAAA;AAsBA,EAAA,MAAMY,SAAS,GAAGL,WAAW,CAC1BtM,KAAD,IAAmB;AACjBA,IAAAA,KAAK,GAAGwM,iBAAiB,CAACxM,KAAD,CAApB,GAA8B+K,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE,cAAA;AAAR,KAAD,CAA3C,CAAA;AACD,GAH0B,EAI3B,CAACJ,QAAD,EAAWyB,iBAAX,CAJ2B,CAA7B,CAAA;AAOA,EAAA,MAAMI,WAAW,GAAGN,WAAW,CAAC,MAAM;AACpCvB,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE,cAAA;AAAR,KAAD,CAAR,CAAA;AACD,GAF8B,EAE5B,CAACJ,QAAD,CAF4B,CAA/B,CAAA;AAIA,EAAA,MAAM8B,WAAW,GAAGP,WAAW,CAC5B1D,KAAD,IAAmB;AACjBmC,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE,WAAR;AAAqBC,MAAAA,OAAO,EAAE;AAAExC,QAAAA,KAAAA;AAAF,OAAA;AAA9B,KAAD,CAAR,CAAA;AACD,GAH4B,EAI7B,CAACmC,QAAD,CAJ6B,CAA/B,CAAA;AAOA,EAAA,MAAM+B,oBAAoB,GAAGR,WAAW,CACrCpC,OAAD,IAAqB;IACnB3G,YAAY,CAAC0G,sBAAb,CAAoCC,OAApC,CAAA,CAAA;AAEAa,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAE,wBADC;AAEPC,MAAAA,OAAO,EAAE;AACPR,QAAAA,aAAa,EAAEV,OADR;AAEPK,QAAAA,MAAM,EAAEyB,aAAa,GAAG,KAAH,GAAWf,KAAK,CAACV,MAAAA;AAF/B,OAAA;AAFF,KAAD,CAAR,CAAA;AAOD,GAXqC,EAYtC,CAACyB,aAAD,EAAgBjB,QAAhB,EAA0BxH,YAA1B,EAAwC0H,KAAK,CAACV,MAA9C,CAZsC,CAAxC,CAAA;AAeA,EAAA,MAAMwC,aAAa,GAAGT,WAAW,CAC9B1D,KAAD,IAAkB;IAChB,MAAMoE,UAAU,GAAG1B,gBAAgB,EAAnC,CAAA;IACA0B,UAAU,CAACzB,MAAD,EAAS;MACjB7B,GAAG,EAAEd,KAAK,CAAC9F,EADM;MAEjBiC,IAAI,EAAE6D,KAAK,CAACK,IAFK;AAGjBgE,MAAAA,IAAI,EAAE;QACJnK,EAAE,EAAE8F,KAAK,CAAC9F,EADN;AAEJ8F,QAAAA,KAAK,EAAEA,KAAK,CAACpG,KAAN,CAAY,CAAZ,EAAe0K,MAFlB;QAGJjE,IAAI,EAAEL,KAAK,CAACK,IAHR;QAIJlE,IAAI,EAAE6D,KAAK,CAACK,IAAAA;AAJR,OAAA;AAHW,KAAT,CAAV,CAAA;AAWA6D,IAAAA,oBAAoB,CAAClE,KAAK,CAAC9F,EAAP,CAApB,CAAA;AACD,GAf8B,EAgB/B,CAACyI,MAAD,EAASuB,oBAAT,CAhB+B,CAAjC,CAAA;AAmBA,EAAA,MAAMK,mBAAmB,GAAGb,WAAW,CACpCC,UAAD,IAAmC;AACjCxB,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAE,sBADC;AAEPC,MAAAA,OAAO,EAAE;AAAEhB,QAAAA,eAAe,EAAEmC,UAAAA;AAAnB,OAAA;AAFF,KAAD,CAAR,CAAA;;IAKA,MAAMa,kCAAkC,GAAG,MAAM;AAAA,MAAA,IAAA,qBAAA,EAAA,sBAAA,EAAA,sBAAA,EAAA,sBAAA,EAAA,qBAAA,EAAA,sBAAA,CAAA;;MAC/C,MAAMC,SAAS,GAAG,CAAlB,CAAA;MACA,MAAMpJ,OAAO,GAAGV,YAAY,CAACW,OAAb,EAAuBD,CAAAA,OAAvB,CAA+BsI,UAA/B,CAAhB,CAAA;AAEA,MAAA,MAAMe,oBAAoB,GAAA,CAAA,qBAAA,GAAA,CAAA,sBAAA,GACxBrB,IAAI,CAACtI,OAAL,CAAawI,WAAb,CAAyBxI,OADD,MAAA,IAAA,IAAA,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GACxB,sBAAkC4J,CAAAA,SADV,yEACuB,CADjD,CAAA;AAEA,MAAA,MAAMC,sBAAsB,GAAA,CAAA,sBAAA,GAAA,CAAA,sBAAA,GAC1BvB,IAAI,CAACtI,OAAL,CAAawI,WAAb,CAAyBxI,OADC,2DAC1B,sBAAkC8J,CAAAA,qBAAlC,EAA0DC,CAAAA,GADhC,2EACuC,CADnE,CAAA;AAEA,MAAA,MAAMC,kBAAkB,GACtB1J,CAAAA,qBAAAA,GAAAA,OADsB,KACtBA,IAAAA,IAAAA,OADsB,iDACtBA,OAAO,CAAEP,IAAT,CAAcC,OADQ,MACtB,IAAA,IAAA,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,sBAAA,CAAuB8J,qBAAvB,EAA+CC,CAAAA,GADzB,yEACgC,CADxD,CAAA;AAGA,MAAA,OACEL,SAAS,GACTC,oBADA,GAEAK,kBAFA,GAGAH,sBAJF,CAAA;KAXF,CAAA;;AAmBA,IAAA,IAAIvB,IAAI,CAACtI,OAAL,CAAawI,WAAb,CAAyBxI,OAA7B,EAAsC;MACpCsI,IAAI,CAACtI,OAAL,CAAawI,WAAb,CAAyBxI,OAAzB,CAAiC4J,SAAjC,GAA6CH,kCAAkC,EAA/E,CAAA;AACD,KAAA;AACF,GA7BoC,EA8BrC,CAACrC,QAAD,EAAWxH,YAAX,CA9BqC,CAAvC,CAAA;AAiCAqK,EAAAA,SAAS,CAAC,MAAM;IACd,IAAI3C,KAAK,CAACV,MAAN,IAAgB,CAACU,KAAK,CAACP,WAA3B,EAAwC;AACtCrH,MAAAA,iBAAiB,CAAC;AAChBC,QAAAA,WAAW,EAAE2I,IAAI,CAACtI,OAAL,CAAawI,WADV;QAEhB5I,YAFgB;AAGhBC,QAAAA,4BAAAA;AAHgB,OAAD,CAAjB,CAAA;AAKD,KAAA;AACF,GARQ,EAQN,CACDD,YADC,EAED0H,KAAK,CAACV,MAFL,EAGDU,KAAK,CAACP,WAHL,EAIDlH,4BAJC,CARM,CAAT,CAAA;EAeA,OAAO;IACL6I,QADK;IAEL9K,IAFK;IAGLoL,SAHK;IAILC,WAJK;IAKLhE,KAAK,EAAEqC,KAAK,CAACrC,KALR;IAMLiE,WANK;IAOLE,aAPK;IAQLxJ,YARK;IASL4J,mBATK;IAULlB,IAVK;IAWL,GAAGhB,KAAAA;GAXL,CAAA;AAaD;;ACxKM,MAAe4C,YAAf,CAC0B;EAMrBvJ,WAAW,CAAWiE,OAAX,EAAmC;IAAA,IAAxBA,CAAAA,OAAwB,GAAxBA,OAAwB,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,QAAA,EAL3B,EAK2B,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,QAAA,EAJrC,EAIqC,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,WAAA,EAHlC9I,uBAGkC,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,OAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AAAE,GAAA;;EAE1D+B,MAAM,CAACiL,KAAD,EAAsB;AAC1B,IAAA,IAAA,CAAKA,KAAL,GAAaA,KAAK,CAACpD,WAAN,EAAb,CAAA;IACA,MAAMrJ,KAAK,GAAG,IAAA,CAAKyM,KAAnB,CAAA;;AAEA,IAAA,IAAIzM,KAAJ,EAAW;MACT,IAAK8N,CAAAA,kBAAL,CAAwB9N,KAAxB,CAAA,CAAA;AACA,MAAA,IAAA,CAAK+N,kBAAL,CAAwB,IAAA,CAAKC,MAA7B,EAAqC,KAAKC,MAA1C,CAAA,CAAA;AACD,KAHD,MAGO;MACL,IAAKA,CAAAA,MAAL,GAAc,EAAd,CAAA;MACA,IAAKD,CAAAA,MAAL,GAAc,EAAd,CAAA;AACD,KAAA;;AAED,IAAA,OAAO,IAAP,CAAA;AACD,GAAA;;EAEOF,kBAAkB,CAAC9N,KAAD,EAAgB;IACxC,IAAKiO,CAAAA,MAAL,GAAc,EAAd,CAAA;IACA,IAAKD,CAAAA,MAAL,GAAc,EAAd,CAAA;;AAEA,IAAA,KAAK,MAAMtE,GAAX,IAAkB,KAAKnB,OAAL,CAAcgB,IAAhC,EAAsC;MACpC,MAAM2E,KAAK,GAAGxE,GAAG,CAACtD,OAAJ,CAAa,CAAA,EAAEpG,KAAM,CAAA,CAArB,CAAd,CAAA;AACA,MAAA,IAAIkO,KAAK,KAAK,CAAC,CAAf,EAAkB,SAAA;MAElB,MAAMhE,OAAO,GAAG,IAAK3B,CAAAA,OAAL,CAAckB,UAAd,CAAyBC,GAAzB,CAAhB,CAAA;AACA,MAAA,IAAA,CAAKsE,MAAL,CAAY9H,IAAZ,CAAiBgE,OAAjB,CAAA,CAAA;MAEA,IAAK+D,CAAAA,MAAL,CAAY/D,OAAZ,CAAA,KAAyB,KAAK+D,MAAL,CAAY/D,OAAZ,CAAA,GAAuB,CAAhD,CAAA,CAAA;AACA,MAAA,IAAA,CAAK+D,MAAL,CAAY/D,OAAZ,CAAA,IAAwBA,OAAO,KAAKlK,KAAZ,GAAoB,CAApB,GAAwBkO,KAAK,GAAG,CAAxD,CAAA;AACD,KAAA;AACF,GAAA;;AAEOH,EAAAA,kBAAkB,CAACC,MAAD,EAAmBC,MAAnB,EAA+B;AACvDD,IAAAA,MAAM,CAACG,IAAP,CAAY,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACpB,MAAA,MAAMC,MAAM,GAAGL,MAAM,CAACG,CAAD,CAArB,CAAA;AACA,MAAA,MAAMG,MAAM,GAAGN,MAAM,CAACI,CAAD,CAArB,CAAA;;MAEA,IAAIC,MAAM,KAAKC,MAAf,EAAuB;AACrB,QAAA,OAAOH,CAAC,CAACI,aAAF,CAAgBH,CAAhB,CAAP,CAAA;AACD,OAAA;;MAED,OAAOC,MAAM,GAAGC,MAAhB,CAAA;KARF,CAAA,CAAA;AAUD,GAAA;;AAED9D,EAAAA,QAAQ,CAACgE,KAAK,GAAG,KAAT,EAAgB;AACtB,IAAA,IAAIA,KAAK,IAAI,IAAKhC,CAAAA,KAAlB,EAAyB;MACvB,OAAO,IAAA,CAAKuB,MAAL,CAAY5H,OAAZ,CAAoB,IAAKqG,CAAAA,KAAzB,CAAoC,KAAA,CAAC,CAA5C,CAAA;AACD,KAAA;;AAED,IAAA,OAAO,IAAKuB,CAAAA,MAAL,CAAY1M,MAAZ,GAAqB,CAA5B,CAAA;AACD,GAAA;;AAEDiF,EAAAA,GAAG,GAAG;IACJ,MAAMmC,MAAM,GAAG,EAAf,CAAA;;AACA,IAAA,KAAK,MAAMgB,GAAX,IAAkB,IAAA,CAAKsE,MAAvB,EAA+B;AAAA,MAAA,IAAA,aAAA,CAAA;;MAC7B,MAAMpF,KAAK,oBAAG,IAAKL,CAAAA,OAAR,kDAAG,aAAciB,CAAAA,QAAd,CAAuBE,GAAvB,CAAd,CAAA;AACAhB,MAAAA,MAAM,CAACxC,IAAP,CAAY,KAAKwI,SAAL,CAAe9F,KAAf,CAAZ,CAAA,CAAA;AACA,MAAA,IAAIF,MAAM,CAACpH,MAAP,IAAiB,IAAA,CAAKqN,SAA1B,EAAqC,MAAA;AACtC,KAAA;;AACD,IAAA,OAAOjG,MAAP,CAAA;AACD,GAAA;;AAEDc,EAAAA,QAAQ,GAAsB;AAC5B,IAAA,OAAO,IAAKjD,CAAAA,GAAL,EAAW,CAAA,CAAX,CAAP,CAAA;AACD,GAAA;;AAxE8B;;ACX1B,MAAMqI,wBAAN,SAAuCf,YAAvC,CAA2D;EAGxDvJ,WAAW,CAAWiE,OAAX,EAAmC;AACpD,IAAA,KAAA,CAAMA,OAAN,CAAA,CAAA;IADoD,IAAxBA,CAAAA,OAAwB,GAAxBA,OAAwB,CAAA;AAErD,GAAA;;EAEwB,OAAXsB,WAAW,CAACtB,OAAD,EAAyB;AAChD,IAAA,IAAI,CAACqG,wBAAwB,CAAC9E,QAA9B,EAAwC;AACtC8E,MAAAA,wBAAwB,CAAC9E,QAAzB,GAAoC,IAAI8E,wBAAJ,CAA6BrG,OAA7B,CAApC,CAAA;AACD,KAAA;;IAED,OAAOqG,wBAAwB,CAAC9E,QAAhC,CAAA;AACD,GAAA;;EAES4E,SAAS,CAAC9F,KAAD,EAAe;AAChC,IAAA,OAAOA,KAAP,CAAA;AACD,GAAA;;AAjB+D,CAAA;;gBAArDgG;;ACAN,MAAMC,sBAAN,SAAqChB,YAArC,CAAkD;EAG/CvJ,WAAW,CAAWiE,OAAX,EAAmC;AACpD,IAAA,KAAA,CAAMA,OAAN,CAAA,CAAA;IADoD,IAAxBA,CAAAA,OAAwB,GAAxBA,OAAwB,CAAA;AAErD,GAAA;;AAEwB,EAAA,OAAXsB,WAAW,GAAG;AAC1B,IAAA,IAAI,CAACgF,sBAAsB,CAAC/E,QAA5B,EAAsC;MACpC+E,sBAAsB,CAAC/E,QAAvB,GAAkC,IAAI+E,sBAAJ,CAChC,IAAIvG,kBAAJ,EADgC,CAAlC,CAAA;AAGD,KAAA;;IAED,OAAOuG,sBAAsB,CAAC/E,QAA9B,CAAA;AACD,GAAA;;EAES4E,SAAS,CAAC9F,KAAD,EAAe;IAChC,MAAM;MAAE9F,EAAF;MAAMmG,IAAN;AAAYzG,MAAAA,KAAAA;AAAZ,KAAA,GAAsBoG,KAA5B,CAAA;IAEA,OAAO;AACLc,MAAAA,GAAG,EAAE5G,EADA;AAELiC,MAAAA,IAAI,EAAEkE,IAFD;AAGLgE,MAAAA,IAAI,EAAE;QACJnK,EADI;AAEJ8F,QAAAA,KAAK,EAAEpG,KAAK,CAAC,CAAD,CAAL,CAAS0K,MAFZ;QAGJjE,IAHI;AAIJlE,QAAAA,IAAI,EAAEkE,IAAAA;AAJF,OAAA;KAHR,CAAA;AAUD,GAAA;;AA9BsD,CAAA;;gBAA5C4F;;ACSN,MAAMC,oBAAoB,GAAG,CAElC;AAAEpF,EAAAA,GAAG,GAAGnK,SAAAA;AAAR,CAAA,GAAsC,EAFJ,KAEwC,CAC1EgM,MAD0E,EAE1EC,IAF0E,KAGvE;EACH,MAAM;AACJjH,IAAAA,OAAO,EAAE;MAAEkH,WAAF;AAAesD,MAAAA,yBAAAA;AAAf,KAAA;AADL,GAAA,GAEFrD,SAAS,CAAcH,MAAd,EAA6B7B,GAA7B,CAFb,CAAA;EAIAiC,kBAAkB,CAACJ,MAAD,EAAS,MAAM;AAC/ByD,IAAAA,qBAAqB,CAACzD,MAAD,EAAS,MAC5B0D,UAAU,CAAC1D,MAAD,EAAS;MACjB2D,QAAQ,EAAEH,yBAAyB,CAChCrK,eADO,CACS,KADT,CAAA,CAEPY,WAFO,EADO;AAIjB6J,MAAAA,OAAO,EAAE,IAAA;AAJQ,KAAT,CADS,CAArB,CAAA;AASA,IAAA,MAAMnP,KAAK,GAAGyL,WAAW,CAAED,IAAF,CAAzB,CAAA;AACAK,IAAAA,UAAU,CAACN,MAAD,EAASvL,KAAT,CAAV,CAAA;AACD,GAZiB,CAAlB,CAAA;EAcA,OAAOoP,eAAe,CAAC7J,KAAhB,EAAP,CAAA;AACD;;ACzBD,MAAM8J,YAAY,GAAIC,IAAD,IAAmB,CAAC,CAACA,IAAF,IAAU,IAAKnK,CAAAA,IAAL,CAAUmK,IAAV,CAAlD,CAAA;;AAEA,MAAMC,eAAe,GAAG,CACtBhE,MADsB,EAEtBiE,KAFsB,KAItBA,KAAK,GACDC,eAAe,CACblE,MADa,EAEbmE,QAAQ,CAACnE,MAAD,EAASiE,KAAT,EAAgBG,cAAc,CAACpE,MAAD,EAASiE,KAAT,CAA9B,CAFK,CADd,GAKDnP,SATN,CAAA;;AAWA,MAAMuP,gBAAgB,GAAG,CACvBrE,MADuB,EAEvBiE,KAFuB,KAGnBA,KAAK,GAAGG,cAAc,CAACpE,MAAD,EAASiE,KAAT,CAAjB,GAAmCnP,SAH9C,CAAA;;AAKA,MAAMwP,oBAAoB,GAAG,CAC3BtE,MAD2B,EAE3BiE,KAF2B,KAGxB;AACH,EAAA,MAAMM,aAAa,GAAGF,gBAAgB,CAACrE,MAAD,EAASiE,KAAT,CAAtC,CAAA;EACA,OAAO,CAAAA,KAAK,KAAL,IAAA,IAAAA,KAAK,KAAL,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,KAAK,CAAEO,IAAP,CAAY,CAAZ,CAAmBD,OAAAA,aAAnB,KAAmBA,IAAAA,IAAAA,aAAnB,KAAmBA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,aAAa,CAAEC,IAAf,CAAoB,CAApB,CAAnB,CAAP,CAAA;AACD,CAND,CAAA;;AAQO,MAAMC,sBAAsB,GAAG,CACpCzE,MADoC,EAEpCwD,yBAFoC,KAGjC,CACH;AAAEO,EAAAA,IAAI,GAAG,EAAT;AAAapE,EAAAA,MAAM,GAAG,QAAA;AAAtB,CAA6D,GAAA;AAC3DoE,EAAAA,IAAI,EAAE,EADqD;AAE3DpE,EAAAA,MAAM,EAAE,QAAA;AAFmD,CAD1D,KAKA;EACH,MAAM;AAAE+E,IAAAA,SAAAA;AAAF,GAAA,GAAgB1E,MAAtB,CAAA;;AAEA,EAAA,IAAI,CAAC0E,SAAD,IAAc,CAACC,WAAW,CAACD,SAAD,CAA1B,IAAyCZ,YAAY,CAACC,IAAD,CAAzD,EAAiE;IAC/DP,yBAAyB,CAACrK,eAA1B,CAA0C,KAA1C,CAAA,CAAA;AACA,IAAA,OAAA;AACD,GAAA;;AAED,EAAA,MAAMyL,UAAU,GAAGF,SAAS,CAACG,MAA7B,CAAA;EACA,IAAIC,YAAmC,GAAGF,UAA1C,CAAA;AACA,EAAA,IAAIL,aAAJ,CAAA;EAEA,IAAIQ,SAAS,GAAGhB,IAAhB,CAAA;AACA,EAAA,IAAIiB,YAAJ,CAAA;;EAEA,GAAG;AACDA,IAAAA,YAAY,GAAGhB,eAAe,CAAChE,MAAD,EAAS8E,YAAT,CAA9B,CAAA;IACAC,SAAS,GAAGC,YAAY,GAAGD,SAA3B,CAAA;AACAR,IAAAA,aAAa,GAAGF,gBAAgB,CAACrE,MAAD,EAAS8E,YAAT,CAAhC,CAAA;;AAEA,IAAA,IAAIR,oBAAoB,CAACtE,MAAD,EAAS8E,YAAT,CAAxB,EAAgD;AAC9C,MAAA,MAAA;AACD,KAAA;;AAEDA,IAAAA,YAAY,GAAGP,aAAf,CAAA;AACD,GAVD,QAUS,CAACT,YAAY,CAACkB,YAAD,CAVtB,EAAA;;AAYAD,EAAAA,SAAS,GAAGA,SAAS,CAACE,IAAV,EAAZ,CAAA;AACA,EAAA,IAAItF,MAAM,KAAK,QAAf,EAAyBoF,SAAS,GAAGA,SAAS,CAAC7I,KAAV,CAAgB,CAAhB,EAAmB,CAAC,CAApB,CAAZ,CAAA;EAEzBsH,yBAAyB,CAAC/J,OAA1B,CAAkCsL,SAAlC,CAAA,CAAA;AACD;;AClEYG,MAAAA,SAAS,GAAG,CAIvBlF,MAJuB,EAKvB;AACEhH,EAAAA,OAAO,EAAE;IAAEzB,EAAF;AAAMiM,IAAAA,yBAAAA;AAAN,GAAA;AADX,CALuB,KAQpB;AACH,EAAA,MAAM2B,sBAAsB,GAAG7B,sBAAsB,CAAChF,WAAvB,EAA/B,CAAA;AAEA,EAAA,MAAM8G,sBAAsB,GAAGX,sBAAsB,CACnDzE,MADmD,EAEnDwD,yBAFmD,CAArD,CAAA;EAKA,MAAM;IAAE6B,KAAF;IAAS/E,UAAT;IAAqBgF,cAArB;AAAqCC,IAAAA,aAAAA;AAArC,GAAA,GAAuDvF,MAA7D,CAAA;;AAEAA,EAAAA,MAAM,CAACM,UAAP,GAAqByD,IAAD,IAAU;IAC5B,MAAM;AAAEW,MAAAA,SAAAA;AAAF,KAAA,GAAgB1E,MAAtB,CAAA;;AAEA,IAAA,IAAI,CAAC2E,WAAW,CAACD,SAAD,CAAhB,EAA6B;MAC3B,OAAOpE,UAAU,CAACyD,IAAD,CAAjB,CAAA;AACD,KAAA;;AAEDqB,IAAAA,sBAAsB,CAAC;AAAErB,MAAAA,IAAAA;AAAF,KAAD,CAAtB,CAAA;IAEA,OAAOzD,UAAU,CAACyD,IAAD,CAAjB,CAAA;GATF,CAAA;;AAYA/D,EAAAA,MAAM,CAACsF,cAAP,GAAyBE,IAAD,IAAU;AAChCJ,IAAAA,sBAAsB,CAAC;AAAEzF,MAAAA,MAAM,EAAE,QAAA;AAAV,KAAD,CAAtB,CAAA;IACA,OAAO2F,cAAc,CAACE,IAAD,CAArB,CAAA;GAFF,CAAA;;AAKAxF,EAAAA,MAAM,CAACuF,aAAP,GAAwBC,IAAD,IAAU;IAC/BJ,sBAAsB,EAAA,CAAA;IACtB,OAAOG,aAAa,CAACC,IAAD,CAApB,CAAA;GAFF,CAAA;;AAKAxF,EAAAA,MAAM,CAACqF,KAAP,GAAgBI,SAAD,IAAe;IAC5BJ,KAAK,CAACI,SAAD,CAAL,CAAA;;IAEA,IAAI,EAACjC,yBAAD,KAACA,IAAAA,IAAAA,yBAAD,eAACA,yBAAyB,CAAEpK,iBAA5B,CAAJ,EAAmD;AACjD,MAAA,OAAA;AACD,KAAA;;AAED,IAAA,MAAMsM,UAAU,GAAGlC,yBAAyB,CAAC3J,OAA1B,EAAnB,CAAA;;IAEA,QAAQ4L,SAAS,CAAC7F,IAAlB;AACE,MAAA,KAAK,eAAL;AACE4D,QAAAA,yBAAyB,CAACxJ,KAA1B,EAAA,CAAA;AACA6J,QAAAA,eAAe,CAAC7J,KAAhB,EAAA,CAAA;AACA,QAAA,MAAA;;AAEF,MAAA,KAAK,aAAL;AACE,QAAA,IACEwJ,yBAAyB,CAAClK,0BAA1B,EAAA,IACA6L,sBAAsB,CAAClP,MAAvB,CAA8ByP,UAA9B,CAA0CxG,CAAAA,QAA1C,CAAmD,IAAnD,CAFF,EAGE;AACA,UAAA,MAAMe,IAAI,GAAGkF,sBAAsB,CAAClH,QAAvB,EAAb,CAAA;AACAgC,UAAAA,IAAI,IAAIsD,oBAAoB,EAAA,CAAGvD,MAAH,EAAWC,IAAX,CAA5B,CAAA;AACA,UAAA,MAAA;AACD,SAAA;;AAED,QAAA,IACE,CAACuD,yBAAyB,CAAClK,0BAA1B,EAAD,IACAkK,yBAAyB,CAACvK,YAD1B,IAEAkM,sBAAsB,CAAClP,MAAvB,CAA8ByP,UAA9B,CAA0CxG,CAAAA,QAA1C,EAHF,EAIE;UACA2E,eAAe,CAAC8B,KAAhB,CACER,sBAAsB,CAAClP,MAAvB,CAA8ByP,UAA9B,CAA0C1K,CAAAA,GAA1C,EADF,CAAA,CAAA;UAGA6I,eAAe,CAAC+B,IAAhB,CAAqB;AACnBC,YAAAA,QAAQ,EAAEtO,EADS;AAEnBiC,YAAAA,IAAI,EAAE,EAFa;YAGnBsM,WAAW,EAAE9F,MAAM,CAAC0E,SAAAA;WAHtB,CAAA,CAAA;AAKA,UAAA,MAAA;AACD,SAAA;;AAEDlB,QAAAA,yBAAyB,CAACxJ,KAA1B,EAAA,CAAA;AACA6J,QAAAA,eAAe,CAAC7J,KAAhB,EAAA,CAAA;AACA,QAAA,MAAA;;AAEF,MAAA,KAAK,aAAL;AACE,QAAA,IACEwJ,yBAAyB,CAACvK,YAA1B,IACAkM,sBAAsB,CAAClP,MAAvB,CAA8ByP,UAA9B,CAAA,CAA0CxG,QAA1C,EAFF,EAGE;UACA2E,eAAe,CAAC8B,KAAhB,CACER,sBAAsB,CAAClP,MAAvB,CAA8ByP,UAA9B,CAA0C1K,CAAAA,GAA1C,EADF,CAAA,CAAA;UAGA6I,eAAe,CAAC+B,IAAhB,CAAqB;AACnBC,YAAAA,QAAQ,EAAEtO,EADS;AAEnBiC,YAAAA,IAAI,EAAE,EAFa;YAGnBsM,WAAW,EAAE9F,MAAM,CAAC0E,SAAAA;WAHtB,CAAA,CAAA;AAKA,UAAA,MAAA;AACD,SAAA;;AAEDlB,QAAAA,yBAAyB,CAACxJ,KAA1B,EAAA,CAAA;AACA6J,QAAAA,eAAe,CAAC7J,KAAhB,EAAA,CAAA;AACA,QAAA,MAAA;AAtDJ,KAAA;GATF,CAAA;;AAmEA,EAAA,OAAOgG,MAAP,CAAA;AACD;;ACjHY+F,MAAAA,iBAAiB,GAAGC,mBAAmB,CAAc;AAChE7H,EAAAA,GAAG,EAAEnK,SAD2D;AAEhEiS,EAAAA,aAAa,EAAEf,SAFiD;AAGhElM,EAAAA,OAAO,EAAE;AACP5E,IAAAA,OAAO,EAAEH,aADF;AAEPiM,IAAAA,WAAW,EAAGD,IAAD,IAAUA,IAAI,CAACyB,IAAL,CAAUrE,KAF1B;IAGPmG,yBAAyB,EAAE,IAAI1K,yBAAJ,EAAA;GANmC;EAQhEoN,IAAI,EAAE,CACJC,CADI,EAEJ;IAAEhI,GAAF;AAAOnF,IAAAA,OAAO,EAAE;MAAE5E,OAAF;MAAW8L,WAAX;AAAwBsD,MAAAA,yBAAAA;AAAxB,KAAA;AAAhB,GAFI,MAGA;AACJxK,IAAAA,OAAO,EAAE;AACPzB,MAAAA,EAAE,EAAE4G,GADG;MAEP/J,OAFO;MAGP8L,WAHO;AAIPsD,MAAAA,yBAAAA;AAJO,KAAA;GAJL,CAAA;AAR0D,CAAd;;ACJ7C,MAAM4C,YAAN,CAAkD;AACvDrN,EAAAA,WAAW,CAAWoF,GAAX,EAAkCkI,YAAlC,EAAmD;IAAA,IAAxClI,CAAAA,GAAwC,GAAxCA,GAAwC,CAAA;IAAA,IAAjBkI,CAAAA,YAAiB,GAAjBA,YAAiB,CAAA;AAAE,GAAA;;EAEhE3O,GAAG,CAACjD,KAAD,EAAa;AACd6R,IAAAA,MAAM,CAAC7J,YAAP,CAAoB8J,OAApB,CAA4B,IAAA,CAAKpI,GAAjC,EAAsCqI,IAAI,CAACC,SAAL,CAAehS,KAAf,CAAtC,CAAA,CAAA;AACD,GAAA;;AAEDuG,EAAAA,GAAG,GAAM;IACP,IAAIvG,KAAK,GAAG,IAAA,CAAK4R,YAAjB,CAAA;IACA,MAAMK,mBAAmB,GAAGJ,MAAM,CAAC7J,YAAP,CAAoBkK,OAApB,CAA4B,IAAKxI,CAAAA,GAAjC,CAA5B,CAAA;;AAEA,IAAA,IAAIuI,mBAAJ,EAAyB;MACvB,IAAI;AACFjS,QAAAA,KAAK,GAAG+R,IAAI,CAACI,KAAL,CAAWF,mBAAX,CAAR,CAAA;OADF,CAEE,OAAOG,KAAP,EAAc;AACdP,QAAAA,MAAM,CAAC7J,YAAP,CAAoBqK,UAApB,CAA+B,KAAK3I,GAApC,CAAA,CAAA;AACD,OAAA;AACF,KAAA;;AAED,IAAA,OAAO1J,KAAP,CAAA;AACD,GAAA;;AApBsD;;ACOlD,MAAMsS,oBAAN,CAA4D;AAMjEhO,EAAAA,WAAW,CACTiO,KADS,EAECX,YAAY,GAAGtR,6BAFhB,EAGT;AAAA,IAAA,IAAA,YAAA,EAAA,aAAA,EAAA,UAAA,CAAA;;IAAA,IADUsR,CAAAA,YACV,GADUA,YACV,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,OAAA,EARgB,CAQhB,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,QAAA,EAPiB,OAOjB,CAAA,CAAA;;IAAA,eANchT,CAAAA,IAAAA,EAAAA,KAAAA,EAAAA,aAAa,CAACK,QAM5B,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,cAAA,EAAA,KAAA,CAAA,CAAA,CAAA;;AACA,IAAA,IAAA,CAAKkB,KAAL,GAAaoS,CAAAA,YAAAA,GAAAA,KAAK,CAACpS,KAAnB,MAAA,IAAA,IAAA,YAAA,KAAA,KAAA,CAAA,GAAA,YAAA,GAA4B,KAAKA,KAAjC,CAAA;AACA,IAAA,MAAMuJ,GAAG,GAAI,CAAA,EAAD,iBAAG6I,KAAK,CAACC,MAAT,MAAmB,IAAA,IAAA,aAAA,KAAA,KAAA,CAAA,GAAA,aAAA,GAAA,IAAA,CAAKA,MAAO,CAAA,CAAA,EAA/B,cAAkCD,KAAK,CAAC7I,GAAxC,MAA+C,IAAA,IAAA,UAAA,KAAA,KAAA,CAAA,GAAA,UAAA,GAAA,IAAA,CAAKA,GAAI,CAApE,CAAA,CAAA;IACA,IAAK1B,CAAAA,YAAL,GAAoB,IAAI2J,YAAJ,CAAiBjI,GAAjB,EAAsBkI,YAAtB,CAApB,CAAA;AACD,GAAA;;EAEDzH,MAAM,CAACD,OAAD,EAAkB;AACtB,IAAA,MAAMuI,UAAU,GAAG,IAAA,CAAKzK,YAAL,CAAkBzB,GAAlB,EAAnB,CAAA;AACA,IAAA,MAAMmM,KAAK,GAAGD,UAAU,CAAEvI,OAAF,CAAV,GAAuBuI,UAAU,CAACvI,OAAD,CAAV,GAAsB,CAA7C,GAAiD,CAA/D,CAAA;AAEA,IAAA,MAAMxB,MAAsB,GAAG,EAC7B,GAAG+J,UAD0B;AAE7B,MAAA,CAACvI,OAAD,GAAWwI,KAAAA;KAFb,CAAA;AAKA,IAAA,IAAA,CAAK1K,YAAL,CAAkB/E,GAAlB,CAAsByF,MAAtB,CAAA,CAAA;AAEA,IAAA,OAAOA,MAAP,CAAA;AACD,GAAA;;AAEDnC,EAAAA,GAAG,GAAmB;AACpB,IAAA,MAAM0G,IAAI,GAAG,IAAA,CAAKjF,YAAL,CAAkBzB,GAAlB,EAAb,CAAA;AACA,IAAA,OAAOnF,MAAM,CAACmI,IAAP,CAAY0D,IAAZ,CACJkB,CAAAA,IADI,CACC,CAACC,CAAD,EAAIC,CAAJ,KAAUpB,IAAI,CAACoB,CAAD,CAAJ,GAAUpB,IAAI,CAACmB,CAAD,CADzB,EAEJuE,MAFI,CAGH,CAACC,UAAD,EAAalJ,GAAb,MAAsB,EACpB,GAAGkJ,UADiB;AAEpB,MAAA,CAAClJ,GAAD,GAAOuD,IAAI,CAACvD,GAAD,CAAA;KAFb,CAHG,EAOH,EAPG,CAAP,CAAA;AASD,GAAA;;AAEDvB,EAAAA,OAAO,GAAa;AAClB,IAAA,OAAO/G,MAAM,CAACmI,IAAP,CAAY,KAAKhD,GAAL,EAAZ,CAAwBsM,CAAAA,MAAxB,CAA+B,CAA/B,EAAkC,IAAA,CAAK1S,KAAvC,CAAP,CAAA;AACD,GAAA;;EAED8C,GAAG,CAACjD,KAAD,EAAa;AACd,IAAA,IAAA,CAAKgI,YAAL,CAAkB/E,GAAlB,CAAsBjD,KAAtB,CAAA,CAAA;AACD,GAAA;;AAhDgE;;;;"}