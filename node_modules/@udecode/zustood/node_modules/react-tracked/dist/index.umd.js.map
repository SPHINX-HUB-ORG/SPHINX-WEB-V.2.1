{"version":3,"file":"index.umd.js","sources":["../src/utils.ts","../src/createTrackedSelector.ts","../src/createContainer.ts","../src/memo.ts"],"sourcesContent":["import { useEffect, useRef, useDebugValue } from 'react';\nimport { affectedToPathList } from 'proxy-compare';\n\ntype Obj = Record<string, unknown>;\n\nexport const useAffectedDebugValue = <State>(\n  state: State,\n  affected: WeakMap<Obj, unknown>,\n) => {\n  const pathList = useRef<(string | number | symbol)[][]>();\n  useEffect(() => {\n    pathList.current = affectedToPathList(state, affected);\n  });\n  useDebugValue(state);\n};\n","import {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n} from 'react';\nimport { createProxy, isChanged } from 'proxy-compare';\n\nimport { useAffectedDebugValue } from './utils';\n\nexport const createTrackedSelector = <State>(\n  useSelector: <Selected>(selector: (state: State) => Selected) => Selected,\n) => {\n  const useTrackedSelector = () => {\n    const [, forceUpdate] = useReducer((c) => c + 1, 0);\n    const affected = new WeakMap();\n    const lastAffected = useRef<typeof affected>();\n    const prevState = useRef<State>();\n    const lastState = useRef<State>();\n    useEffect(() => {\n      lastAffected.current = affected;\n      if (prevState.current !== lastState.current\n        && isChanged(\n          prevState.current,\n          lastState.current,\n          affected,\n          new WeakMap(),\n        )) {\n        prevState.current = lastState.current;\n        forceUpdate();\n      }\n    });\n    const selector = useCallback((nextState: State) => {\n      lastState.current = nextState;\n      if (prevState.current\n        && prevState.current !== nextState\n        && lastAffected.current\n        && !isChanged(\n          prevState.current,\n          nextState,\n          lastAffected.current,\n          new WeakMap(),\n        )\n      ) {\n        // not changed\n        return prevState.current;\n      }\n      prevState.current = nextState;\n      return nextState;\n    }, []);\n    const state = useSelector(selector);\n    if (typeof process === 'object' && process.env.NODE_ENV !== 'production') {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useAffectedDebugValue(state, affected);\n    }\n    const proxyCache = useMemo(() => new WeakMap(), []); // per-hook proxyCache\n    return createProxy(state, affected, proxyCache);\n  };\n  return useTrackedSelector;\n};\n","/* eslint react/destructuring-assignment: off */\n\nimport {\n  ComponentType,\n  Context as ContextOrig,\n  ReactNode,\n  createContext as createContextOrig,\n  createElement,\n  useCallback,\n  useContext as useContextOrig,\n  useDebugValue,\n} from 'react';\n\nimport {\n  Context,\n  createContext,\n  useContextSelector,\n  useContextUpdate,\n} from 'use-context-selector';\n\nimport { createTrackedSelector } from './createTrackedSelector';\n\ntype AnyFunction = (...args: any[]) => any;\ntype Options<State, Update extends AnyFunction> = {\n  defaultState?: State;\n  defaultUpdate?: Update;\n  stateContextName?: string;\n  updateContextName?: string;\n  concurrentMode?: boolean;\n}\n/**\n * [Deprecated] Please use object option\n */\ntype DeprecatedOption = boolean\n\nexport const createContainer = <State, Update extends AnyFunction, Props>(\n  useValue: (props: Props) => readonly [State, Update],\n  options?: Options<State, Update> | DeprecatedOption,\n) => {\n  if (typeof options === 'boolean') {\n    // eslint-disable-next-line no-console\n    console.warn('boolean option is deprecated, please specify { concurrentMode: true }');\n    options = { concurrentMode: options };\n  }\n  const {\n    stateContextName = 'StateContainer',\n    updateContextName = 'UpdateContainer',\n    concurrentMode,\n  } = options || {};\n  const StateContext = createContext<State | undefined>(options?.defaultState);\n  const UpdateContext = createContextOrig<Update | undefined>(options?.defaultUpdate);\n  StateContext.displayName = stateContextName;\n  UpdateContext.displayName = updateContextName;\n\n  const Provider = (props: Props & { children: ReactNode }) => {\n    const [state, update] = useValue(props);\n    return createElement(\n      UpdateContext.Provider,\n      { value: update },\n      createElement(StateContext.Provider as ComponentType<{\n        value: State;\n      }>, { value: state }, props.children),\n    );\n  };\n\n  const useSelector = <Selected>(\n    selector: (state: State) => Selected,\n  ) => {\n    if (\n      typeof process === 'object'\n      && process.env.NODE_ENV !== 'production'\n    ) {\n      const selectorOrig = selector;\n      selector = (state: State) => {\n        if (state === undefined) {\n          throw new Error('Please use <Provider>');\n        }\n        return selectorOrig(state);\n      };\n    }\n    const selected = useContextSelector(StateContext as Context<State>, selector);\n    useDebugValue(selected);\n    return selected;\n  };\n\n  const useTrackedState = createTrackedSelector(useSelector);\n\n  const useUpdate = concurrentMode\n    ? () => {\n      if (\n        typeof process === 'object'\n        && process.env.NODE_ENV !== 'production'\n        && useContextOrig(UpdateContext) === undefined\n      ) {\n        throw new Error('Please use <Provider>');\n      }\n      const contextUpdate = useContextUpdate(StateContext as Context<unknown>);\n      const update = useContextOrig(UpdateContext as ContextOrig<Update>);\n      return useCallback((...args: Parameters<Update>) => {\n        let result: ReturnType<Update> | undefined;\n        contextUpdate(() => {\n          result = update(...args);\n        });\n        return result as ReturnType<Update>;\n      }, [contextUpdate, update]);\n    }\n    // not concurrentMode\n    : () => {\n      if (\n        typeof process === 'object'\n        && process.env.NODE_ENV !== 'production'\n        && useContextOrig(UpdateContext) === undefined\n      ) {\n        throw new Error('Please use <Provider>');\n      }\n      return useContextOrig(UpdateContext as ContextOrig<Update>);\n    };\n\n  const useTracked = () => [useTrackedState(), useUpdate()] as [\n    ReturnType<typeof useTrackedState>,\n    ReturnType<typeof useUpdate>,\n  ];\n\n  return {\n    Provider,\n    useTrackedState,\n    useTracked,\n    useUpdate,\n    useSelector,\n  } as const;\n};\n","import { createElement, memo as reactMemo, forwardRef } from 'react';\nimport { trackMemo } from 'proxy-compare';\n\nimport type {\n  PropsWithChildren,\n  NamedExoticComponent,\n  ComponentType,\n  ComponentProps,\n  MemoExoticComponent,\n} from 'react';\n\nexport function memo<P extends Record<string, unknown>>(\n  Component: ComponentType<P>,\n  propsAreEqual?: (\n    prevProps: Readonly<PropsWithChildren<P>>,\n    nextProps: Readonly<PropsWithChildren<P>>,\n  ) => boolean,\n): NamedExoticComponent<P>;\n\nexport function memo<T extends ComponentType<any>>(\n  Component: T,\n  propsAreEqual?: (\n    prevProps: Readonly<ComponentProps<T>>,\n    nextProps: Readonly<ComponentProps<T>>,\n  ) => boolean,\n): MemoExoticComponent<T>;\n\nexport function memo(Component: any, propsAreEqual?: any) {\n  const WrappedComponent = forwardRef((props: any, ref: any) => {\n    Object.values(props).forEach(trackMemo);\n    return createElement(Component, { ...props, ref });\n  });\n  return reactMemo(WrappedComponent, propsAreEqual);\n}\n"],"names":["useAffectedDebugValue","state","affected","pathList","useRef","useEffect","current","affectedToPathList","useDebugValue","createTrackedSelector","useSelector","useTrackedSelector","useReducer","c","forceUpdate","WeakMap","lastAffected","prevState","lastState","isChanged","selector","useCallback","nextState","process","env","NODE_ENV","proxyCache","useMemo","createProxy","createContainer","useValue","options","console","warn","concurrentMode","stateContextName","updateContextName","StateContext","createContext","defaultState","UpdateContext","createContextOrig","defaultUpdate","displayName","Provider","props","update","createElement","value","children","selectorOrig","undefined","Error","selected","useContextSelector","useTrackedState","useUpdate","useContextOrig","contextUpdate","useContextUpdate","result","useTracked","memo","Component","propsAreEqual","WrappedComponent","forwardRef","ref","Object","values","forEach","trackMemo","reactMemo"],"mappings":"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"}