'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var plateAlignment = require('@udecode/plate-alignment');
var plateAutoformat = require('@udecode/plate-autoformat');
var plateBasicElements = require('@udecode/plate-basic-elements');
var plateBasicMarks = require('@udecode/plate-basic-marks');
var plateBlockQuote = require('@udecode/plate-block-quote');
var plateBreak = require('@udecode/plate-break');
var plateCodeBlock = require('@udecode/plate-code-block');
var plateCombobox = require('@udecode/plate-combobox');
var plateCore = require('@udecode/plate-core');
var plateFindReplace = require('@udecode/plate-find-replace');
var plateFont = require('@udecode/plate-font');
var plateHeading = require('@udecode/plate-heading');
var plateHighlight = require('@udecode/plate-highlight');
var plateHorizontalRule = require('@udecode/plate-horizontal-rule');
var plateImage = require('@udecode/plate-image');
var plateIndent = require('@udecode/plate-indent');
var plateIndentList = require('@udecode/plate-indent-list');
var plateKbd = require('@udecode/plate-kbd');
var plateLineHeight = require('@udecode/plate-line-height');
var plateLink = require('@udecode/plate-link');
var plateList = require('@udecode/plate-list');
var plateMediaEmbed = require('@udecode/plate-media-embed');
var plateMention = require('@udecode/plate-mention');
var plateNodeId = require('@udecode/plate-node-id');
var plateNormalizers = require('@udecode/plate-normalizers');
var plateParagraph = require('@udecode/plate-paragraph');
var plateResetNode = require('@udecode/plate-reset-node');
var plateSelect = require('@udecode/plate-select');
var plateSerializerCsv = require('@udecode/plate-serializer-csv');
var plateSerializerDocx = require('@udecode/plate-serializer-docx');
var plateSerializerHtml = require('@udecode/plate-serializer-html');
var plateSerializerMd = require('@udecode/plate-serializer-md');
var plateTable = require('@udecode/plate-table');
var plateTrailingBlock = require('@udecode/plate-trailing-block');



Object.keys(plateAlignment).forEach(function (k) {
	if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return plateAlignment[k]; }
	});
});
Object.keys(plateAutoformat).forEach(function (k) {
	if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return plateAutoformat[k]; }
	});
});
Object.keys(plateBasicElements).forEach(function (k) {
	if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return plateBasicElements[k]; }
	});
});
Object.keys(plateBasicMarks).forEach(function (k) {
	if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return plateBasicMarks[k]; }
	});
});
Object.keys(plateBlockQuote).forEach(function (k) {
	if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return plateBlockQuote[k]; }
	});
});
Object.keys(plateBreak).forEach(function (k) {
	if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return plateBreak[k]; }
	});
});
Object.keys(plateCodeBlock).forEach(function (k) {
	if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return plateCodeBlock[k]; }
	});
});
Object.keys(plateCombobox).forEach(function (k) {
	if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return plateCombobox[k]; }
	});
});
Object.keys(plateCore).forEach(function (k) {
	if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return plateCore[k]; }
	});
});
Object.keys(plateFindReplace).forEach(function (k) {
	if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return plateFindReplace[k]; }
	});
});
Object.keys(plateFont).forEach(function (k) {
	if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return plateFont[k]; }
	});
});
Object.keys(plateHeading).forEach(function (k) {
	if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return plateHeading[k]; }
	});
});
Object.keys(plateHighlight).forEach(function (k) {
	if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return plateHighlight[k]; }
	});
});
Object.keys(plateHorizontalRule).forEach(function (k) {
	if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return plateHorizontalRule[k]; }
	});
});
Object.keys(plateImage).forEach(function (k) {
	if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return plateImage[k]; }
	});
});
Object.keys(plateIndent).forEach(function (k) {
	if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return plateIndent[k]; }
	});
});
Object.keys(plateIndentList).forEach(function (k) {
	if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return plateIndentList[k]; }
	});
});
Object.keys(plateKbd).forEach(function (k) {
	if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return plateKbd[k]; }
	});
});
Object.keys(plateLineHeight).forEach(function (k) {
	if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return plateLineHeight[k]; }
	});
});
Object.keys(plateLink).forEach(function (k) {
	if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return plateLink[k]; }
	});
});
Object.keys(plateList).forEach(function (k) {
	if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return plateList[k]; }
	});
});
Object.keys(plateMediaEmbed).forEach(function (k) {
	if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return plateMediaEmbed[k]; }
	});
});
Object.keys(plateMention).forEach(function (k) {
	if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return plateMention[k]; }
	});
});
Object.keys(plateNodeId).forEach(function (k) {
	if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return plateNodeId[k]; }
	});
});
Object.keys(plateNormalizers).forEach(function (k) {
	if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return plateNormalizers[k]; }
	});
});
Object.keys(plateParagraph).forEach(function (k) {
	if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return plateParagraph[k]; }
	});
});
Object.keys(plateResetNode).forEach(function (k) {
	if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return plateResetNode[k]; }
	});
});
Object.keys(plateSelect).forEach(function (k) {
	if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return plateSelect[k]; }
	});
});
Object.keys(plateSerializerCsv).forEach(function (k) {
	if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return plateSerializerCsv[k]; }
	});
});
Object.keys(plateSerializerDocx).forEach(function (k) {
	if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return plateSerializerDocx[k]; }
	});
});
Object.keys(plateSerializerHtml).forEach(function (k) {
	if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return plateSerializerHtml[k]; }
	});
});
Object.keys(plateSerializerMd).forEach(function (k) {
	if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return plateSerializerMd[k]; }
	});
});
Object.keys(plateTable).forEach(function (k) {
	if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return plateTable[k]; }
	});
});
Object.keys(plateTrailingBlock).forEach(function (k) {
	if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return plateTrailingBlock[k]; }
	});
});
//# sourceMappingURL=index.js.map
