{"version":3,"file":"index.js","sources":["../src/withTrailingBlock.ts","../src/createTrailingBlockPlugin.ts"],"sourcesContent":["import {\n  getLastNodeByLevel,\n  insertElements,\n  PlateEditor,\n  queryNode,\n  Value,\n  WithPlatePlugin,\n} from '@udecode/plate-core';\nimport { Path } from 'slate';\nimport { TrailingBlockPlugin } from './createTrailingBlockPlugin';\n\n/**\n * Add a trailing block when the last node type is not `type` and when the editor has .\n */\nexport const withTrailingBlock = <\n  V extends Value = Value,\n  E extends PlateEditor<V> = PlateEditor<V>\n>(\n  editor: E,\n  {\n    type,\n    options: { level, ...query },\n  }: WithPlatePlugin<TrailingBlockPlugin, V, E>\n) => {\n  const { normalizeNode } = editor;\n\n  editor.normalizeNode = ([currentNode, currentPath]) => {\n    if (!currentPath.length) {\n      const lastChild = getLastNodeByLevel(editor, level!);\n\n      const lastChildNode = lastChild?.[0];\n\n      if (\n        !lastChildNode ||\n        (lastChildNode.type !== type && queryNode(lastChild, query))\n      ) {\n        const at = lastChild ? Path.next(lastChild[1]) : [0];\n\n        insertElements(\n          editor,\n          {\n            type: type!,\n            children: [{ text: '' }],\n          },\n          { at }\n        );\n        return;\n      }\n    }\n\n    return normalizeNode([currentNode, currentPath]);\n  };\n\n  return editor;\n};\n","import {\n  createPluginFactory,\n  ELEMENT_DEFAULT,\n  getPluginType,\n  QueryNodeOptions,\n} from '@udecode/plate-core';\nimport { withTrailingBlock } from './withTrailingBlock';\n\nexport interface TrailingBlockPlugin extends QueryNodeOptions {\n  /**\n   * Level where the trailing node should be, the first level being 0.\n   */\n  level?: number;\n\n  /**\n   * Type of the trailing block\n   */\n  type?: string;\n}\n\nexport const KEY_TRAILING_BLOCK = 'trailingBlock';\n\n/**\n * @see {@link withTrailingBlock}\n */\nexport const createTrailingBlockPlugin = createPluginFactory<TrailingBlockPlugin>(\n  {\n    key: KEY_TRAILING_BLOCK,\n    withOverrides: withTrailingBlock,\n    options: {\n      level: 0,\n    },\n    then: (editor) => ({\n      type: getPluginType(editor, ELEMENT_DEFAULT),\n    }),\n  }\n);\n"],"names":["withTrailingBlock","editor","type","options","level","query","normalizeNode","currentNode","currentPath","length","lastChild","getLastNodeByLevel","lastChildNode","queryNode","at","Path","next","insertElements","children","text","KEY_TRAILING_BLOCK","createTrailingBlockPlugin","createPluginFactory","key","withOverrides","then","getPluginType","ELEMENT_DEFAULT"],"mappings":";;;;;;;AAWA;AACA;AACA;AACaA,MAAAA,iBAAiB,GAAG,CAI/BC,MAJ+B,EAK/B;EACEC,IADF;AAEEC,EAAAA,OAAO,EAAE;IAAEC,KAAF;IAAS,GAAGC,KAAAA;AAAZ,GAAA;AAFX,CAL+B,KAS5B;EACH,MAAM;AAAEC,IAAAA,aAAAA;AAAF,GAAA,GAAoBL,MAA1B,CAAA;;EAEAA,MAAM,CAACK,aAAP,GAAuB,CAAC,CAACC,WAAD,EAAcC,WAAd,CAAD,KAAgC;AACrD,IAAA,IAAI,CAACA,WAAW,CAACC,MAAjB,EAAyB;AACvB,MAAA,MAAMC,SAAS,GAAGC,4BAAkB,CAACV,MAAD,EAASG,KAAT,CAApC,CAAA;MAEA,MAAMQ,aAAa,GAAGF,SAAH,KAAA,IAAA,IAAGA,SAAH,KAAGA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,SAAS,CAAG,CAAH,CAA/B,CAAA;;AAEA,MAAA,IACE,CAACE,aAAD,IACCA,aAAa,CAACV,IAAd,KAAuBA,IAAvB,IAA+BW,mBAAS,CAACH,SAAD,EAAYL,KAAZ,CAF3C,EAGE;AACA,QAAA,MAAMS,EAAE,GAAGJ,SAAS,GAAGK,UAAI,CAACC,IAAL,CAAUN,SAAS,CAAC,CAAD,CAAnB,CAAH,GAA6B,CAAC,CAAD,CAAjD,CAAA;QAEAO,wBAAc,CACZhB,MADY,EAEZ;AACEC,UAAAA,IAAI,EAAEA,IADR;AAEEgB,UAAAA,QAAQ,EAAE,CAAC;AAAEC,YAAAA,IAAI,EAAE,EAAA;WAAT,CAAA;AAFZ,SAFY,EAMZ;AAAEL,UAAAA,EAAAA;AAAF,SANY,CAAd,CAAA;AAQA,QAAA,OAAA;AACD,OAAA;AACF,KAAA;;AAED,IAAA,OAAOR,aAAa,CAAC,CAACC,WAAD,EAAcC,WAAd,CAAD,CAApB,CAAA;GAxBF,CAAA;;AA2BA,EAAA,OAAOP,MAAP,CAAA;AACD;;AClCM,MAAMmB,kBAAkB,GAAG,gBAA3B;AAEP;AACA;AACA;;AACaC,MAAAA,yBAAyB,GAAGC,6BAAmB,CAC1D;AACEC,EAAAA,GAAG,EAAEH,kBADP;AAEEI,EAAAA,aAAa,EAAExB,iBAFjB;AAGEG,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAE,CAAA;GAJX;EAMEqB,IAAI,EAAGxB,MAAD,KAAa;AACjBC,IAAAA,IAAI,EAAEwB,uBAAa,CAACzB,MAAD,EAAS0B,yBAAT,CAAA;GADf,CAAA;AANR,CAD0D;;;;;;"}