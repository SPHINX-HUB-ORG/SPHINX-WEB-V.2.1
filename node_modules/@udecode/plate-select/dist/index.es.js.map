{"version":3,"file":"index.es.js","sources":["../src/withSelectOnBackspace.ts","../src/createSelectOnBackspacePlugin.ts"],"sourcesContent":["import {\n  getNodeEntries,\n  getPointBefore,\n  isCollapsed,\n  PlateEditor,\n  queryNode,\n  select,\n  Value,\n  WithPlatePlugin,\n} from '@udecode/plate-common';\nimport Slate from 'slate';\nimport { SelectOnBackspacePlugin } from './createSelectOnBackspacePlugin';\n\n/**\n * Set a list of element types to select on backspace\n */\nexport const withSelectOnBackspace = <\n  V extends Value = Value,\n  E extends PlateEditor<V> = PlateEditor<V>\n>(\n  editor: E,\n  { options: { query } }: WithPlatePlugin<SelectOnBackspacePlugin, V, E>\n) => {\n  const { deleteBackward } = editor;\n\n  editor.deleteBackward = (unit: 'character' | 'word' | 'line' | 'block') => {\n    const { selection } = editor;\n\n    if (unit === 'character' && isCollapsed(selection)) {\n      const pointBefore = getPointBefore(editor, selection as Slate.Location, {\n        unit,\n      });\n\n      if (pointBefore) {\n        const [prevCell] = getNodeEntries(editor, {\n          match: (node) => queryNode([node, pointBefore.path], query),\n          at: pointBefore,\n        });\n\n        if (!!prevCell && pointBefore) {\n          // don't delete image, set selection there\n          select(editor, pointBefore);\n        } else {\n          deleteBackward(unit);\n        }\n      } else {\n        deleteBackward(unit);\n      }\n    } else {\n      deleteBackward(unit);\n    }\n  };\n\n  return editor;\n};\n","import { createPluginFactory, QueryNodeOptions } from '@udecode/plate-common';\nimport { withSelectOnBackspace } from './withSelectOnBackspace';\n\nexport type SelectOnBackspacePlugin = {\n  query?: QueryNodeOptions;\n};\n\nexport const KEY_SELECT_ON_BACKSPACE = 'selectOnBackspace';\n\n/**\n * @see {@link withSelectOnBackspace}\n */\nexport const createSelectOnBackspacePlugin = createPluginFactory<SelectOnBackspacePlugin>(\n  {\n    key: KEY_SELECT_ON_BACKSPACE,\n    withOverrides: withSelectOnBackspace,\n  }\n);\n"],"names":["withSelectOnBackspace","editor","options","query","deleteBackward","unit","selection","isCollapsed","pointBefore","getPointBefore","prevCell","getNodeEntries","match","node","queryNode","path","at","select","KEY_SELECT_ON_BACKSPACE","createSelectOnBackspacePlugin","createPluginFactory","key","withOverrides"],"mappings":";;AAaA;AACA;AACA;AACaA,MAAAA,qBAAqB,GAAG,CAInCC,MAJmC,EAKnC;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAAA;AAAF,GAAA;AAAX,CALmC,KAMhC;EACH,MAAM;AAAEC,IAAAA,cAAAA;AAAF,GAAA,GAAqBH,MAA3B,CAAA;;AAEAA,EAAAA,MAAM,CAACG,cAAP,GAAyBC,IAAD,IAAmD;IACzE,MAAM;AAAEC,MAAAA,SAAAA;AAAF,KAAA,GAAgBL,MAAtB,CAAA;;IAEA,IAAII,IAAI,KAAK,WAAT,IAAwBE,WAAW,CAACD,SAAD,CAAvC,EAAoD;AAClD,MAAA,MAAME,WAAW,GAAGC,cAAc,CAACR,MAAD,EAASK,SAAT,EAAsC;AACtED,QAAAA,IAAAA;AADsE,OAAtC,CAAlC,CAAA;;AAIA,MAAA,IAAIG,WAAJ,EAAiB;AACf,QAAA,MAAM,CAACE,QAAD,CAAA,GAAaC,cAAc,CAACV,MAAD,EAAS;AACxCW,UAAAA,KAAK,EAAGC,IAAD,IAAUC,SAAS,CAAC,CAACD,IAAD,EAAOL,WAAW,CAACO,IAAnB,CAAD,EAA2BZ,KAA3B,CADc;AAExCa,UAAAA,EAAE,EAAER,WAAAA;AAFoC,SAAT,CAAjC,CAAA;;AAKA,QAAA,IAAI,CAAC,CAACE,QAAF,IAAcF,WAAlB,EAA+B;AAC7B;AACAS,UAAAA,MAAM,CAAChB,MAAD,EAASO,WAAT,CAAN,CAAA;AACD,SAHD,MAGO;UACLJ,cAAc,CAACC,IAAD,CAAd,CAAA;AACD,SAAA;AACF,OAZD,MAYO;QACLD,cAAc,CAACC,IAAD,CAAd,CAAA;AACD,OAAA;AACF,KApBD,MAoBO;MACLD,cAAc,CAACC,IAAD,CAAd,CAAA;AACD,KAAA;GAzBH,CAAA;;AA4BA,EAAA,OAAOJ,MAAP,CAAA;AACD;;AC/CM,MAAMiB,uBAAuB,GAAG,oBAAhC;AAEP;AACA;AACA;;AACaC,MAAAA,6BAA6B,GAAGC,mBAAmB,CAC9D;AACEC,EAAAA,GAAG,EAAEH,uBADP;AAEEI,EAAAA,aAAa,EAAEtB,qBAAAA;AAFjB,CAD8D;;;;"}