import { Modify } from '@udecode/utils';
import { EditorPreviousOptions } from 'slate';
import { ENode, TNode, TNodeMatch } from '../node/TNode';
import { TNodeEntry } from '../node/TNodeEntry';
import { TEditor, Value } from './TEditor';
export declare type GetPreviousNodeOptions<V extends Value = Value> = Modify<NonNullable<EditorPreviousOptions<TNode>>, {
    match?: TNodeMatch<ENode<V>>;
}>;
/**
 * Get the matching node in the branch of the document before a location.
 */
export declare const getPreviousNode: <N extends ENode<V>, V extends Value = Value>(editor: TEditor<V>, options?: GetPreviousNodeOptions<V> | undefined) => TNodeEntry<N> | undefined;
//# sourceMappingURL=getPreviousNode.d.ts.map