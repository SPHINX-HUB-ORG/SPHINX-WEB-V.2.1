import { Modify } from '@udecode/utils';
import { NodeNodesOptions } from 'slate';
import { NodeOf, TNode } from './TNode';
import { TNodeEntry } from './TNodeEntry';
/**
 * Return a generator of all the node entries of a root node. Each entry is
 * returned as a `[Node, Path]` tuple, with the path referring to the node's
 * position inside the root node.
 */
export declare const getNodes: <N extends NodeOf<R>, R extends TNode = TNode>(root: R, options?: Modify<NodeNodesOptions, {
    pass?: ((entry: TNodeEntry<NodeOf<N>>) => boolean) | undefined;
}> | undefined) => Generator<TNodeEntry<N>, void, undefined>;
//# sourceMappingURL=getNodes.d.ts.map