import { Modify } from '@udecode/utils';
import { NodeDescendantsOptions } from 'slate';
import { DescendantOf } from './TDescendant';
import { TNode } from './TNode';
import { TDescendantEntry, TNodeEntry } from './TNodeEntry';
/**
 * Return a generator of all the descendant node entries inside a root node.
 */
export declare const getNodeDescendants: <N extends DescendantOf<R>, R extends TNode = TNode>(root: R, options?: Modify<NodeDescendantsOptions, {
    pass?: ((node: TDescendantEntry<N>) => boolean) | undefined;
}> | undefined) => Generator<TNodeEntry<N>, void, undefined>;
//# sourceMappingURL=getNodeDescendants.d.ts.map