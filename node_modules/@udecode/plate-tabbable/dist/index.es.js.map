{"version":3,"file":"index.es.js","sources":["../src/constants.ts","../src/findTabDestination.ts","../src/TabbableEffects.tsx","../src/createTabbablePlugin.ts"],"sourcesContent":["export const KEY_TABBABLE = 'tabbable';\n","import {\n  getPoint,\n  getPointAfter,\n  PlateEditor,\n  Value,\n} from '@udecode/plate-common';\nimport { Path } from 'slate';\nimport { TabbableEntry, TabDestination } from './types';\n\nexport interface FindTabDestinationOptions {\n  tabbableEntries: TabbableEntry[];\n  activeTabbableEntry: TabbableEntry | null;\n  direction: 'forward' | 'backward';\n}\n\nexport const findTabDestination = <V extends Value = Value>(\n  editor: PlateEditor<V>,\n  { tabbableEntries, activeTabbableEntry, direction }: FindTabDestinationOptions\n): TabDestination | null => {\n  if (activeTabbableEntry) {\n    // Find the next tabbable entry after the active one\n    const activeTabbableEntryIndex = tabbableEntries.indexOf(\n      activeTabbableEntry\n    );\n    const nextTabbableEntryIndex =\n      activeTabbableEntryIndex + (direction === 'forward' ? 1 : -1);\n    const nextTabbableEntry = tabbableEntries[nextTabbableEntryIndex];\n\n    // If the next tabbable entry is in the same void, focus it\n    if (\n      nextTabbableEntry &&\n      Path.equals(activeTabbableEntry.path, nextTabbableEntry.path)\n    ) {\n      return {\n        type: 'dom-node',\n        domNode: nextTabbableEntry.domNode,\n      };\n    }\n\n    // Otherwise, focus the first path after the void\n    if (direction === 'forward') {\n      const pointAfter = getPointAfter(editor, activeTabbableEntry.path);\n      if (!pointAfter) return null;\n      return {\n        type: 'path',\n        path: pointAfter.path,\n      };\n    }\n\n    return {\n      type: 'path',\n      path: getPoint(editor, activeTabbableEntry.path).path,\n    };\n  }\n\n  const selectionPath = editor.selection?.anchor?.path || [];\n\n  // Find the first tabbable entry after the selection\n  const nextTabbableEntry =\n    direction === 'forward'\n      ? tabbableEntries.find(\n          (entry) => !Path.isBefore(entry.path, selectionPath)\n        )\n      : [...tabbableEntries]\n          .reverse()\n          .find((entry) => Path.isBefore(entry.path, selectionPath));\n\n  // If it exists, focus it\n  if (nextTabbableEntry) {\n    return {\n      type: 'dom-node',\n      domNode: nextTabbableEntry.domNode,\n    };\n  }\n\n  // Otherwise, use the default behaviour\n  return null;\n};\n","import { useEffect } from 'react';\nimport {\n  findNodePath,\n  focusEditor,\n  getPluginOptions,\n  toDOMNode,\n  toSlateNode,\n  useEditorState,\n} from '@udecode/plate-common';\nimport { Path } from 'slate';\nimport { tabbable } from 'tabbable';\nimport { KEY_TABBABLE } from './constants';\nimport { findTabDestination } from './findTabDestination';\nimport { TabbableEntry } from './types';\n\nexport const TabbableEffects = () => {\n  const editor = useEditorState();\n  const {\n    query,\n    globalEventListener,\n    insertTabbableEntries,\n    isTabbable,\n  } = getPluginOptions(editor, KEY_TABBABLE);\n\n  useEffect(() => {\n    const editorDOMNode = toDOMNode(editor, editor);\n    if (!editorDOMNode) return;\n\n    const handler = (event: KeyboardEvent) => {\n      if (\n        event.key !== 'Tab' ||\n        event.defaultPrevented ||\n        !query(editor, event)\n      )\n        return;\n\n      const insertedTabbableEntries = insertTabbableEntries(\n        editor,\n        event\n      ) as TabbableEntry[];\n\n      if (\n        globalEventListener &&\n        event.target &&\n        ![\n          editorDOMNode,\n          ...insertedTabbableEntries.map(({ domNode }) => domNode),\n        ].some((container) => container.contains(event.target as Node))\n      )\n        return;\n\n      const tabbableDOMNodes = tabbable(editorDOMNode) as HTMLElement[];\n\n      const defaultTabbableEntries = tabbableDOMNodes\n        .map((domNode) => {\n          const slateNode = toSlateNode(editor, domNode);\n          if (!slateNode) return;\n          return {\n            domNode,\n            slateNode,\n            path: findNodePath(editor, slateNode),\n          } as TabbableEntry;\n        })\n        .filter(\n          (entry) => entry && isTabbable(editor, entry)\n        ) as TabbableEntry[];\n\n      const tabbableEntries = [\n        ...insertedTabbableEntries,\n        ...defaultTabbableEntries,\n      ].sort((a, b) => Path.compare(a.path, b.path));\n\n      const { activeElement } = document;\n      const activeTabbableEntry =\n        (activeElement &&\n          tabbableEntries.find((entry) => entry.domNode === activeElement)) ??\n        null;\n\n      const tabDestination = findTabDestination(editor, {\n        tabbableEntries,\n        activeTabbableEntry,\n        direction: event.shiftKey ? 'backward' : 'forward',\n      });\n\n      if (tabDestination) {\n        event.preventDefault();\n\n        switch (tabDestination.type) {\n          case 'path':\n            focusEditor(editor, {\n              anchor: { path: tabDestination.path, offset: 0 },\n              focus: { path: tabDestination.path, offset: 0 },\n            });\n            break;\n\n          case 'dom-node':\n            tabDestination.domNode.focus();\n            break;\n        }\n\n        return;\n      }\n\n      tabbableDOMNodes.forEach((domNode) => {\n        const oldTabIndex = domNode.getAttribute('tabindex');\n        domNode.setAttribute('tabindex', '-1');\n\n        setTimeout(() => {\n          if (oldTabIndex) {\n            domNode.setAttribute('tabindex', oldTabIndex);\n          } else {\n            domNode.removeAttribute('tabindex');\n          }\n        }, 0);\n      });\n    };\n\n    const eventListenerNode = globalEventListener\n      ? document.body\n      : editorDOMNode;\n\n    eventListenerNode.addEventListener('keydown', handler, true);\n    return () =>\n      eventListenerNode.removeEventListener('keydown', handler, true);\n  }, [editor, globalEventListener, isTabbable, insertTabbableEntries, query]);\n\n  return null;\n};\n","import { createPluginFactory, isVoid } from '@udecode/plate-common';\nimport { KEY_TABBABLE } from './constants';\nimport { TabbableEffects } from './TabbableEffects';\nimport { TabbablePlugin } from './types';\n\nexport const createTabbablePlugin = createPluginFactory<TabbablePlugin>({\n  key: KEY_TABBABLE,\n  renderAfterEditable: TabbableEffects,\n  options: {\n    query: () => true,\n    globalEventListener: false,\n    insertTabbableEntries: () => [],\n    isTabbable: (editor, tabbableEntry) =>\n      isVoid(editor, tabbableEntry.slateNode),\n  },\n});\n"],"names":["KEY_TABBABLE","findTabDestination","editor","tabbableEntries","activeTabbableEntry","direction","activeTabbableEntryIndex","indexOf","nextTabbableEntryIndex","nextTabbableEntry","Path","equals","path","type","domNode","pointAfter","getPointAfter","getPoint","selectionPath","selection","anchor","find","entry","isBefore","reverse","TabbableEffects","useEditorState","query","globalEventListener","insertTabbableEntries","isTabbable","getPluginOptions","useEffect","editorDOMNode","toDOMNode","handler","event","key","defaultPrevented","insertedTabbableEntries","target","map","some","container","contains","tabbableDOMNodes","tabbable","defaultTabbableEntries","slateNode","toSlateNode","findNodePath","filter","sort","a","b","compare","activeElement","document","tabDestination","shiftKey","preventDefault","focusEditor","offset","focus","forEach","oldTabIndex","getAttribute","setAttribute","setTimeout","removeAttribute","eventListenerNode","body","addEventListener","removeEventListener","createTabbablePlugin","createPluginFactory","renderAfterEditable","options","tabbableEntry","isVoid"],"mappings":"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"}