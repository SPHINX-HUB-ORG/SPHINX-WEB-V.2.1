import { SubscriptionProvider } from '../../subscriptions/subscription-provider';
import { IDictionary } from '../shared';
export interface QueryEditorState {
    isFocused: boolean;
    cursorIndex?: number;
}
export interface SubscriptionResponse {
    response: string;
    responseObj: any;
    responseTime: number;
}
export declare type SelectedOperation = string | null;
export interface QueryState {
    url: string;
    subscriptionUrl: string;
    query?: string;
    selectedOperation?: SelectedOperation;
    operations?: any[];
    httpVerb: HttpVerb;
    response: any;
    requestStartTime: number;
    requestEndTime: number;
    responseTime: number;
    responseStatus: number;
    responseStatusText: string;
    responseHeaders?: IDictionary;
    showUrlAlert: boolean;
    urlAlertMessage: string;
    urlAlertSuccess: boolean;
    showEditorAlert: boolean;
    editorAlertMessage: string;
    editorAlertSuccess: boolean;
    subscriptionClient?: SubscriptionProvider;
    subscriptionConnectionParams: string;
    subscriptionProviderId?: string;
    isSubscribed: boolean;
    subscriptionResponseList: SubscriptionResponse[];
    autoscrollSubscriptionResponse: boolean;
    queryEditorState: QueryEditorState;
}
export declare const HTTP_VERBS: readonly ["POST", "GET", "PUT", "DELETE"];
export declare type HttpVerb = typeof HTTP_VERBS[number];
