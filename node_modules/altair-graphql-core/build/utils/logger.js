"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createLogger = void 0;
const loglevel_1 = __importDefault(require("loglevel"));
const loglevel_plugin_prefix_1 = __importDefault(require("loglevel-plugin-prefix"));
loglevel_plugin_prefix_1.default.reg(loglevel_1.default);
exports.createLogger = (environment) => {
    if (!environment.production) {
        loglevel_1.default.setLevel('TRACE');
    }
    const PREVIOUS_VERSION_KEY = 'altair__debug_previous_version';
    const CURRENT_VERSION_KEY = 'altair__debug_current_version';
    const previousVersion = () => localStorage.getItem(PREVIOUS_VERSION_KEY);
    const currentVersion = () => localStorage.getItem(CURRENT_VERSION_KEY);
    if (currentVersion() && currentVersion() !== environment.version) {
        // New app version
        // prev = current
        // current = env.version
        localStorage.setItem(PREVIOUS_VERSION_KEY, currentVersion());
        localStorage.setItem(CURRENT_VERSION_KEY, environment.version);
    }
    else {
        localStorage.setItem(CURRENT_VERSION_KEY, currentVersion());
    }
    Object.defineProperty(window, '__ENABLE_DEBUG_MODE__', {
        get() {
            return window._ALTAIR__ENABLE_DEBUG_MODE__;
        },
        set(value) {
            if (value) {
                // Display debug information.
                console.group('‚öôÔ∏èüõ†Altair Debug Information');
                console.log('Previous version:', previousVersion());
                console.log('Current version:', currentVersion());
                console.groupEnd();
                loglevel_1.default.setLevel('TRACE');
            }
            window._ALTAIR__ENABLE_DEBUG_MODE__ = value;
        }
    });
    return loglevel_1.default;
};
