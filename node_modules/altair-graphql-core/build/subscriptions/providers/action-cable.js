"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ActionCableSubscriptionProvider = void 0;
const subscription_provider_1 = require("../subscription-provider");
const rxjs_1 = require("rxjs");
const actioncable_1 = __importDefault(require("actioncable"));
class ActionCableSubscriptionProvider extends subscription_provider_1.SubscriptionProvider {
    execute(options) {
        const cable = actioncable_1.default.createConsumer(this.subscriptionUrl);
        return new rxjs_1.Observable((subscriber) => {
            this.subscription = cable.subscriptions.create(Object.assign({}, {
                channel: this.connectionParams.channel || 'GraphqlChannel',
                channelId: Math.round(Date.now() + Math.random() * 100000).toString(16),
            }, {}), {
                connected: function () {
                    this.perform('execute', options);
                },
                received: function (payload) {
                    if (payload.result.data || payload.result.errors) {
                        subscriber.next(payload.result);
                    }
                    if (!payload.more) {
                        subscriber.complete();
                    }
                }
            });
        });
    }
    close() {
        this.subscription?.unsubscribe();
    }
}
exports.ActionCableSubscriptionProvider = ActionCableSubscriptionProvider;
