"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GraphQLWsSubscriptionProvider = void 0;
const subscription_provider_1 = require("../subscription-provider");
const rxjs_1 = require("rxjs");
const graphql_ws_1 = require("graphql-ws");
class GraphQLWsSubscriptionProvider extends subscription_provider_1.SubscriptionProvider {
    createClient() {
        this.client = graphql_ws_1.createClient({
            url: this.subscriptionUrl,
            connectionParams: this.connectionParams,
            on: {
                connected: () => {
                    this.extraOptions?.onConnected?.(undefined, undefined);
                },
                error: (err) => {
                    this.extraOptions?.onConnected?.(err, undefined);
                }
            }
        });
    }
    execute(options) {
        this.createClient();
        if (!this.client) {
            throw new Error('Could not create subscription client!');
        }
        return new rxjs_1.Observable((subscriber) => {
            return this.client.subscribe({
                query: options.query,
                variables: options.variables,
                operationName: options.operationName,
            }, {
                next: (...args) => subscriber.next(...args),
                error: (...args) => subscriber.error(...args),
                complete: () => subscriber.complete(),
            });
        });
    }
    close() {
        this.client?.dispose();
        this.client = undefined;
    }
}
exports.GraphQLWsSubscriptionProvider = GraphQLWsSubscriptionProvider;
