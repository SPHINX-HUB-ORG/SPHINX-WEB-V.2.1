"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebsocketSubscriptionProvider = void 0;
const subscription_provider_1 = require("../subscription-provider");
const subscriptions_transport_ws_1 = require("subscriptions-transport-ws");
const rxjs_1 = require("rxjs");
class WebsocketSubscriptionProvider extends subscription_provider_1.SubscriptionProvider {
    createClient() {
        this.client = new subscriptions_transport_ws_1.SubscriptionClient(this.subscriptionUrl, {
            reconnect: true,
            connectionParams: this.connectionParams,
            connectionCallback: this.extraOptions?.onConnected
        });
    }
    execute(options) {
        this.createClient();
        if (!this.client) {
            throw new Error('Could not create subscription client!');
        }
        return new rxjs_1.Observable((subscriber) => {
            return this.client.request({
                query: options.query,
                variables: options.variables,
                operationName: options.operationName,
            }).subscribe({
                next: (...args) => subscriber.next(...args),
                error: (...args) => subscriber.error(...args),
                complete: () => subscriber.complete(),
            });
        });
    }
    close() {
        this.client?.unsubscribeAll();
        this.client?.close();
        this.client = undefined;
    }
}
exports.WebsocketSubscriptionProvider = WebsocketSubscriptionProvider;
