'use strict';

var emojiRegex = require('emoji-regex');
var visit = require('unist-util-visit');
var gemoji = require('gemoji');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var emojiRegex__default = /*#__PURE__*/_interopDefaultLegacy(emojiRegex);
var visit__default = /*#__PURE__*/_interopDefaultLegacy(visit);
var gemoji__default = /*#__PURE__*/_interopDefaultLegacy(gemoji);

const skintoneMap = {
  '🏻': 'skin tone 2',
  '🏼': 'skin tone 3',
  '🏽': 'skin tone 4',
  '🏾': 'skin tone 5',
  '🏿': 'skin tone 6',
};

function stripSkintone(emoji) {
  const skintoneRegex = new RegExp(Object.keys(skintoneMap).join('|'), 'g');
  const genericEmoji = emoji.replace(skintoneRegex, '');

  let skintone = emoji.match(skintoneRegex);
  skintone = skintone && skintone[0] ? skintone[0] : undefined;

  return { skintone, genericEmoji };
}

function emojiToName(emoji) {
  return gemoji__default['default'].find((item) => item.emoji === emoji);
}

function getEmojiDescription(emoji) {
  const { skintone, genericEmoji } = stripSkintone(emoji);

  let info = emojiToName(genericEmoji);

  if (!info) {
    const appleEmoji = genericEmoji + '\uFE0F';
    info = emojiToName(appleEmoji);

    if (!info) {
      return '';
    }
  }

  const skintoneDescription = skintoneMap[skintone] || '';
  return skintoneDescription
    ? `${info.description} (${skintoneDescription})`
    : info.description;
}

function a11yEmoji({ markdownAST }) {
  function visitor(node) {
    node.value = node.value.replace(emojiRegex__default['default'](), (match) => {
      node.type = 'html';
      const description = getEmojiDescription(match);
      return `<span role="img" aria-label="${description}">${match}</span>`;
    });
  }

  visit__default['default'](markdownAST, 'text', visitor);
  return markdownAST;
}

module.exports = a11yEmoji;
