{"version":3,"file":"accessible-button.js","sources":["../../node_modules/@react-hook/event/src/index.tsx","../../src/index.tsx","../../node_modules/@accessible/use-key/src/index.tsx","../../node_modules/@react-hook/passive-layout-effect/src/index.tsx","../../node_modules/@react-hook/latest/src/index.tsx","../../node_modules/@react-hook/merged-ref/src/index.tsx"],"sourcesContent":["import * as React from 'react'\nimport useLayoutEffect from '@react-hook/passive-layout-effect'\nimport useLatest from '@react-hook/latest'\n\nfunction useEvent<\n  T extends Window = Window,\n  K extends keyof WindowEventMap = keyof WindowEventMap\n>(\n  target: Window | null,\n  type: K,\n  listener: WindowEventListener<K>,\n  cleanup?: (...args: any[]) => void\n): void\nfunction useEvent<\n  T extends Document = Document,\n  K extends keyof DocumentEventMap = keyof DocumentEventMap\n>(\n  target: Document | null,\n  type: K,\n  listener: DocumentEventListener<K>,\n  cleanup?: (...args: any[]) => void\n): void\nfunction useEvent<\n  T extends HTMLElement = HTMLElement,\n  K extends keyof HTMLElementEventMap = keyof HTMLElementEventMap\n>(\n  target: React.RefObject<T> | T | null,\n  type: K,\n  listener: ElementEventListener<K>,\n  cleanup?: (...args: any[]) => void\n): void\nfunction useEvent(target: any, type: any, listener: any, cleanup: any): void {\n  const storedListener = useLatest(listener)\n  const storedCleanup = useLatest(cleanup)\n\n  useLayoutEffect(() => {\n    const targetEl = target && 'current' in target ? target.current : target\n    if (!targetEl) return\n\n    let didUnsubscribe = 0\n    function listener(this: any, ...args: any[]) {\n      if (didUnsubscribe) return\n      storedListener.current.apply(this, args)\n    }\n\n    targetEl.addEventListener(type, listener)\n    const cleanup = storedCleanup.current\n\n    return () => {\n      didUnsubscribe = 1\n      targetEl.removeEventListener(type, listener)\n      cleanup && cleanup()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [target, type])\n}\n\nexport type ElementEventListener<\n  K extends keyof HTMLElementEventMap = keyof HTMLElementEventMap\n> = (this: HTMLElement, ev: HTMLElementEventMap[K]) => any\n\nexport type DocumentEventListener<\n  K extends keyof DocumentEventMap = keyof DocumentEventMap\n> = (this: Document, ev: DocumentEventMap[K]) => any\n\nexport type WindowEventListener<\n  K extends keyof WindowEventMap = keyof WindowEventMap\n> = (this: Document, ev: WindowEventMap[K]) => any\n\nexport default useEvent\n","import * as React from 'react'\nimport useKey from '@accessible/use-key'\nimport useEvent from '@react-hook/event'\nimport useMergedRef from '@react-hook/merged-ref'\n\nexport function useA11yButton<T extends HTMLElement>(\n  target: React.RefObject<T> | T | null,\n  onClick: (event: MouseEvent) => any\n) {\n  const clickedMouse = React.useRef(false)\n  const setClickedMouse = () => (clickedMouse.current = true)\n  useEvent(target, 'touchstart', setClickedMouse)\n  useEvent(target, 'mousedown', setClickedMouse)\n  useEvent(target, 'click', (event) => {\n    // Only fire onClick if the keyboard was not used to initiate the click\n    clickedMouse.current && onClick(event)\n    clickedMouse.current = false\n  })\n  // @ts-expect-error\n  useKey(target, {\n    Enter: onClick,\n    ' ': onClick,\n  })\n\n  return {\n    role: 'button',\n    tabIndex: 0,\n  } as const\n}\n\nexport const Button = ({children}: ButtonProps) => {\n  const ref = React.useRef(null)\n  const {props} = children\n  const {role, tabIndex} = useA11yButton(ref, props.onClick)\n\n  return React.cloneElement(children, {\n    onClick: undefined,\n    role: props.hasOwnProperty('role') ? props.role : role,\n    tabIndex: props.hasOwnProperty('tabIndex') ? props.tabIndex : tabIndex,\n    // @ts-expect-error\n    ref: useMergedRef(ref, children.ref),\n  })\n}\n\nexport interface ButtonProps {\n  children: JSX.Element | React.ReactElement\n}\n\n/* istanbul ignore next */\nif (typeof process !== 'undefined' && process.env.NODE_ENV !== 'production') {\n  Button.displayName = 'AccessibleButton'\n}\n","import * as React from 'react'\nimport useEvent from '@react-hook/event'\n\nexport function useKey<T extends Window>(\n  target: T | null,\n  listeners: Record<string, (event: KeyboardEvent) => any>\n): void\nexport function useKey<T extends Document>(\n  target: T | null,\n  listeners: Record<string, (event: KeyboardEvent) => any>\n): void\nexport function useKey<T extends HTMLElement>(\n  target: React.RefObject<T> | T | null,\n  listeners: Record<string, (event: KeyboardEvent) => any>\n): void\nexport function useKey(\n  target: any,\n  listeners: Record<string, (event: KeyboardEvent) => any>\n) {\n  useEvent(target, 'keydown', (event): void => {\n    const listener = listeners[LEGACY_COMPAT[event.key] || event.key]\n    if (listener) listener(event)\n  })\n}\n\n// IE 11 and some versions of Edge have non-standard value\nconst LEGACY_COMPAT: Record<string, string> = {\n  Up: 'ArrowUp',\n  Right: 'ArrowRight',\n  Down: 'ArrowDown',\n  Left: 'ArrowLeft',\n  Esc: 'Escape',\n  Spacebar: ' ',\n  Del: 'Delete',\n  Crsel: 'CrSel',\n  Exsel: 'ExSel',\n  Add: '+',\n  Subtract: '-',\n  Multiply: '*',\n  Divide: '/',\n  Decimal: '.',\n  Scroll: 'ScrollLock',\n}\n\nexport default useKey\n","import * as React from 'react'\n\nconst usePassiveLayoutEffect =\n  React[\n    typeof document !== 'undefined' && document.createElement !== void 0\n      ? 'useLayoutEffect'\n      : 'useEffect'\n  ]\n\nexport default usePassiveLayoutEffect\n","import * as React from 'react'\n\nconst useLatest = <T extends any>(current: T) => {\n  const storedValue = React.useRef(current)\n  storedValue.current = current\n  return storedValue\n}\n\nexport default useLatest\n","import * as React from 'react'\n\nconst useMergedRef = <T extends any>(\n  ...refs: React.Ref<T>[]\n): React.RefCallback<T> => (element: T) =>\n  refs.forEach((ref) => {\n    if (typeof ref === 'function') ref(element)\n    else if (ref && typeof ref === 'object')\n      (ref as React.MutableRefObject<T>).current = element\n  })\n\nexport default useMergedRef\n"],"names":["useEvent","target","type","listener","cleanup","storedListener","useLatest","storedCleanup","useLayoutEffect","didUnsubscribe","args","current","apply","this","targetEl","addEventListener","removeEventListener","useA11yButton","onClick","clickedMouse","React","setClickedMouse","event","listeners","LEGACY_COMPAT","key","useKey","Enter","role","tabIndex","usePassiveLayoutEffect","document","createElement","storedValue","Up","Right","Down","Left","Esc","Spacebar","Del","Crsel","Exsel","Add","Subtract","Multiply","Divide","Decimal","Scroll","useMergedRef","refs","element","forEach","ref","children","props","undefined","hasOwnProperty"],"mappings":"iPA+BA,SAASA,EAASC,EAAaC,EAAWC,EAAeC,OACjDC,EAAiBC,EAAUH,GAC3BI,EAAgBD,EAAUF,GAEhCI,GAAgB,oBAKLL,QACHM,8BAD0BC,2BAAAA,kBAE9BL,EAAeM,QAAQC,MAAMC,KAAMH,QAN/BI,EAAWb,GAAU,YAAaA,EAASA,EAAOU,QAAUV,KAC7Da,OAEDL,EAAiB,EAMrBK,EAASC,iBAAiBb,EAAMC,OAC1BC,EAAUG,EAAcI,eAEvB,WACLF,EAAiB,EACjBK,EAASE,oBAAoBd,EAAMC,GACnCC,GAAWA,QAGZ,CAACH,EAAQC,ICjDP,SAASe,EACdhB,EACAiB,OAEMC,EAAeC,SAAa,GAC5BC,EAAkB,kBAAOF,EAAaR,QAAU,UACtDX,EAASC,EAAQ,aAAcoB,GAC/BrB,EAASC,EAAQ,YAAaoB,GAC9BrB,EAASC,EAAQ,SAAS,SAACqB,GAEzBH,EAAaR,SAAWO,EAAQI,GAChCH,EAAaR,QAAU,KCDpB,SACLV,EACAsB,GAEAvB,EAASC,EAAQ,WAAW,SAACqB,OACrBnB,EAAWoB,EAAUC,EAAcF,EAAMG,MAAQH,EAAMG,KACzDtB,GAAUA,EAASmB,MDFzBI,CAAOzB,EAAQ,CACb0B,MAAOT,MACFA,IAGA,CACLU,KAAM,SACNC,SAAU,GExBd,IAAMC,EACJV,EACsB,oBAAbW,eAAuD,IAA3BA,SAASC,cACxC,kBACA,aCJF1B,EAAY,SAAgBK,OAC1BsB,EAAcb,SAAaT,UACjCsB,EAAYtB,QAAUA,EACfsB,GFqBHT,EAAwC,CAC5CU,GAAI,UACJC,MAAO,aACPC,KAAM,YACNC,KAAM,YACNC,IAAK,SACLC,SAAU,IACVC,IAAK,SACLC,MAAO,QACPC,MAAO,QACPC,IAAK,IACLC,SAAU,IACVC,SAAU,IACVC,OAAQ,IACRC,QAAS,IACTC,OAAQ,cGvCJC,EAAe,sCAChBC,2BAAAA,yBACsB,SAACC,UAC1BD,EAAKE,SAAQ,SAACC,GACO,mBAARA,EAAoBA,EAAIF,GAC1BE,GAAsB,iBAARA,IACpBA,EAAkC1C,QAAUwC,iBJsB7B,gBAAEG,IAAAA,SAChBD,EAAMjC,SAAa,MAClBmC,EAASD,EAATC,QACkBtC,EAAcoC,EAAKE,EAAMrC,SAA3CU,IAAAA,KAAMC,IAAAA,gBAENT,eAAmBkC,EAAU,CAClCpC,aAASsC,EACT5B,KAAM2B,EAAME,eAAe,QAAUF,EAAM3B,KAAOA,EAClDC,SAAU0B,EAAME,eAAe,YAAcF,EAAM1B,SAAWA,EAE9DwB,IAAKJ,EAAaI,EAAKC,EAASD"}