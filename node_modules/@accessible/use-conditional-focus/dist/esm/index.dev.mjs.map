{"version":3,"file":"index.dev.mjs","sources":["../../src/index.tsx"],"sourcesContent":["import * as React from 'react'\nimport tabbable from '@accessible/tabbable'\nimport useEvent from '@react-hook/event'\n\nfunction useConditionalFocus<T extends Window>(\n  target: T | null,\n  shouldFocus?: boolean,\n  options?: UseConditionalFocusOptions\n): void\nfunction useConditionalFocus<T extends Document>(\n  target: T | null,\n  shouldFocus?: boolean,\n  options?: UseConditionalFocusOptions\n): void\nfunction useConditionalFocus<T extends HTMLElement>(\n  target: React.RefObject<T> | T | null,\n  shouldFocus?: boolean,\n  options?: UseConditionalFocusOptions\n): void\nfunction useConditionalFocus(\n  target: any,\n  shouldFocus = false,\n  {includeRoot, preventScroll} = defaultOptions\n) {\n  const didFocus = React.useRef(false)\n  const didFocusAfterEvent = React.useRef(false)\n\n  React.useEffect(() => {\n    const element = target && 'current' in target ? target.current : target\n    if (!element || !shouldFocus || didFocus.current) return\n    const tabbableEls = tabbable(element, includeRoot)\n    if (tabbableEls.length > 0) tabbableEls[0].focus({preventScroll})\n    didFocus.current = true\n  }, [target, includeRoot, preventScroll, shouldFocus])\n\n  React.useEffect(() => {\n    return () => {\n      didFocus.current = false\n      didFocusAfterEvent.current = false\n    }\n  }, [shouldFocus])\n\n  useEvent(target, 'transitionend', () => {\n    const element = target && 'current' in target ? target.current : target\n    if (!element || !shouldFocus || didFocusAfterEvent.current) return\n    const tabbableEls = tabbable(element, includeRoot)\n    if (tabbableEls.length > 0) tabbableEls[0].focus({preventScroll})\n    didFocusAfterEvent.current = true\n  })\n}\n\nconst defaultOptions: UseConditionalFocusOptions = {\n  includeRoot: false,\n  preventScroll: false,\n}\n\nexport type UseConditionalFocusOptions = {\n  includeRoot?: boolean\n  preventScroll?: boolean\n}\n\nexport default useConditionalFocus\n"],"names":["useConditionalFocus","target","shouldFocus","includeRoot","preventScroll","defaultOptions","didFocus","React","didFocusAfterEvent","element","current","tabbableEls","tabbable","length","focus","useEvent"],"mappings":";;;;AAmBA,SAASA,mBAAT,CACEC,MADF,EAEEC,WAFF,SAIE;AAAA,MAFAA,WAEA;AAFAA,IAAAA,WAEA,GAFc,KAEd;AAAA;;AAAA,MADA;AAACC,IAAAA,WAAD;AAAcC,IAAAA;AAAd,GACA,sBAD+BC,cAC/B;AACA,MAAMC,QAAQ,GAAGC,MAAA,CAAa,KAAb,CAAjB;AACA,MAAMC,kBAAkB,GAAGD,MAAA,CAAa,KAAb,CAA3B;AAEAA,EAAAA,SAAA,CAAgB,MAAM;AACpB,QAAME,OAAO,GAAGR,MAAM,IAAI,aAAaA,MAAvB,GAAgCA,MAAM,CAACS,OAAvC,GAAiDT,MAAjE;AACA,QAAI,CAACQ,OAAD,IAAY,CAACP,WAAb,IAA4BI,QAAQ,CAACI,OAAzC,EAAkD;AAClD,QAAMC,WAAW,GAAGC,QAAQ,CAACH,OAAD,EAAUN,WAAV,CAA5B;AACA,QAAIQ,WAAW,CAACE,MAAZ,GAAqB,CAAzB,EAA4BF,WAAW,CAAC,CAAD,CAAX,CAAeG,KAAf,CAAqB;AAACV,MAAAA;AAAD,KAArB;AAC5BE,IAAAA,QAAQ,CAACI,OAAT,GAAmB,IAAnB;AACD,GAND,EAMG,CAACT,MAAD,EAASE,WAAT,EAAsBC,aAAtB,EAAqCF,WAArC,CANH;;AASS,kBAAM;AACXI,IAAAA,QAAQ,CAACI,OAAT,GAAmB,KAAnB;AACAF,IAAAA,kBAAkB,CAACE,OAAnB,GAA6B,KAA7B;AACD;;AAJHH,EAAAA,SAAA,CAAgB,MAAM;AACpB;AAID,GALD,EAKG,CAACL,WAAD,CALH;AAOAa,EAAAA,QAAQ,CAACd,MAAD,EAAS,eAAT,EAA0B,MAAM;AACtC,QAAMQ,OAAO,GAAGR,MAAM,IAAI,aAAaA,MAAvB,GAAgCA,MAAM,CAACS,OAAvC,GAAiDT,MAAjE;AACA,QAAI,CAACQ,OAAD,IAAY,CAACP,WAAb,IAA4BM,kBAAkB,CAACE,OAAnD,EAA4D;AAC5D,QAAMC,WAAW,GAAGC,QAAQ,CAACH,OAAD,EAAUN,WAAV,CAA5B;AACA,QAAIQ,WAAW,CAACE,MAAZ,GAAqB,CAAzB,EAA4BF,WAAW,CAAC,CAAD,CAAX,CAAeG,KAAf,CAAqB;AAACV,MAAAA;AAAD,KAArB;AAC5BI,IAAAA,kBAAkB,CAACE,OAAnB,GAA6B,IAA7B;AACD,GANO,CAAR;AAOD;;AAED,IAAML,cAA0C,GAAG;AACjDF,EAAAA,WAAW,EAAE,KADoC;AAEjDC,EAAAA,aAAa,EAAE;AAFkC,CAAnD;;;;"}