/**

*/
export declare const TINA_HOST = "content.tinajs.io";
export interface TinaClientArgs<GenQueries = Record<string, unknown>> {
    url: string;
    token?: string;
    queries: (client: TinaClient<GenQueries>) => GenQueries;
}
export declare type TinaClientRequestArgs = {
    variables?: Record<string, any>;
    query: string;
} & Partial<Omit<TinaClientArgs, 'queries'>>;
export declare type TinaClientURLParts = {
    host: string;
    clientId: string;
    branch: string;
    isLocalClient: boolean;
};
export declare class TinaClient<GenQueries> {
    apiUrl: string;
    readonlyToken?: string;
    /**
     *
     */
    queries: GenQueries;
    constructor({ token, url, queries }: TinaClientArgs<GenQueries>);
    request<DataType extends Record<string, any> = any>(args: TinaClientRequestArgs): Promise<{
        data: DataType;
        query: string;
    }>;
}
export declare function createClient<GenQueries>(args: TinaClientArgs<GenQueries>): TinaClient<GenQueries>;
