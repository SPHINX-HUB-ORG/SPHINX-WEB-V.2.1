export declare const createCodeBlockPlugin: <OP = import("@udecode/plate-headless").AnyObject, OV extends import("@udecode/plate-headless").Value = import("@udecode/plate-headless").Value, OE extends import("@udecode/plate-headless").PlateEditor<OV> = import("@udecode/plate-headless").PlateEditor<OV>>(override?: Partial<import("@udecode/plate-headless").PlatePlugin<import("@udecode/plate-headless").NoInfer<OP>, OV, OE>>, overrideByKey?: import("@udecode/plate-headless").OverrideByKey<OV, OE>) => import("@udecode/plate-headless").PlatePlugin<import("@udecode/plate-headless").NoInfer<OP>, OV, OE>;
export declare const createHTMLBlockPlugin: <OP = import("@udecode/plate-headless").AnyObject, OV extends import("@udecode/plate-headless").Value = import("@udecode/plate-headless").Value, OE extends import("@udecode/plate-headless").PlateEditor<OV> = import("@udecode/plate-headless").PlateEditor<OV>>(override?: Partial<import("@udecode/plate-headless").PlatePlugin<import("@udecode/plate-headless").NoInfer<OP>, OV, OE>>, overrideByKey?: import("@udecode/plate-headless").OverrideByKey<OV, OE>) => import("@udecode/plate-headless").PlatePlugin<import("@udecode/plate-headless").NoInfer<OP>, OV, OE>;
export declare const createHTMLInlinePlugin: <OP = import("@udecode/plate-headless").AnyObject, OV extends import("@udecode/plate-headless").Value = import("@udecode/plate-headless").Value, OE extends import("@udecode/plate-headless").PlateEditor<OV> = import("@udecode/plate-headless").PlateEditor<OV>>(override?: Partial<import("@udecode/plate-headless").PlatePlugin<import("@udecode/plate-headless").NoInfer<OP>, OV, OE>>, overrideByKey?: import("@udecode/plate-headless").OverrideByKey<OV, OE>) => import("@udecode/plate-headless").PlatePlugin<import("@udecode/plate-headless").NoInfer<OP>, OV, OE>;
