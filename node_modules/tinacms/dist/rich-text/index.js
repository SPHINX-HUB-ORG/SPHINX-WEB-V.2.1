(function(global, factory) {
  typeof exports === "object" && typeof module !== "undefined" ? factory(exports, require("react")) : typeof define === "function" && define.amd ? define(["exports", "react"], factory) : (global = typeof globalThis !== "undefined" ? globalThis : global || self, factory(global.tinacms = {}, global.NOOP));
})(this, function(exports2, React) {
  "use strict";
  function _interopDefaultLegacy(e) {
    return e && typeof e === "object" && "default" in e ? e : { "default": e };
  }
  var React__default = /* @__PURE__ */ _interopDefaultLegacy(React);
  const TinaMarkdown = ({
    content,
    components = {}
  }) => {
    if (!content) {
      return null;
    }
    const nodes = Array.isArray(content) ? content : content.children;
    if (!nodes) {
      return null;
    }
    return /* @__PURE__ */ React__default["default"].createElement(React__default["default"].Fragment, null, nodes.map((child, index) => {
      return /* @__PURE__ */ React__default["default"].createElement(MemoNode, {
        components,
        key: index,
        child
      });
    }));
  };
  const Leaf = (props) => {
    if (props.bold) {
      const { bold, ...rest } = props;
      if (props.components.bold) {
        const Component = props.components.bold;
        return /* @__PURE__ */ React__default["default"].createElement(Component, null, /* @__PURE__ */ React__default["default"].createElement(Leaf, {
          ...rest
        }));
      }
      return /* @__PURE__ */ React__default["default"].createElement("strong", null, /* @__PURE__ */ React__default["default"].createElement(Leaf, {
        ...rest
      }));
    }
    if (props.italic) {
      const { italic, ...rest } = props;
      if (props.components.italic) {
        const Component = props.components.italic;
        return /* @__PURE__ */ React__default["default"].createElement(Component, null, /* @__PURE__ */ React__default["default"].createElement(Leaf, {
          ...rest
        }));
      }
      return /* @__PURE__ */ React__default["default"].createElement("em", null, /* @__PURE__ */ React__default["default"].createElement(Leaf, {
        ...rest
      }));
    }
    if (props.underline) {
      const { underline, ...rest } = props;
      if (props.components.underline) {
        const Component = props.components.underline;
        return /* @__PURE__ */ React__default["default"].createElement(Component, null, /* @__PURE__ */ React__default["default"].createElement(Leaf, {
          ...rest
        }));
      }
      return /* @__PURE__ */ React__default["default"].createElement("u", null, /* @__PURE__ */ React__default["default"].createElement(Leaf, {
        ...rest
      }));
    }
    if (props.strikethrough) {
      const { strikethrough, ...rest } = props;
      if (props.components.strikethrough) {
        const Component = props.components.strikethrough;
        return /* @__PURE__ */ React__default["default"].createElement(Component, null, /* @__PURE__ */ React__default["default"].createElement(Leaf, {
          ...rest
        }));
      }
      return /* @__PURE__ */ React__default["default"].createElement("s", null, /* @__PURE__ */ React__default["default"].createElement(Leaf, {
        ...rest
      }));
    }
    if (props.code) {
      const { code, ...rest } = props;
      if (props.components.code) {
        const Component = props.components.code;
        return /* @__PURE__ */ React__default["default"].createElement(Component, null, /* @__PURE__ */ React__default["default"].createElement(Leaf, {
          ...rest
        }));
      }
      return /* @__PURE__ */ React__default["default"].createElement("code", null, /* @__PURE__ */ React__default["default"].createElement(Leaf, {
        ...rest
      }));
    }
    if (props.components.text) {
      const Component = props.components.text;
      return /* @__PURE__ */ React__default["default"].createElement(Component, null, props.text);
    }
    return /* @__PURE__ */ React__default["default"].createElement(React__default["default"].Fragment, null, props.text);
  };
  const MemoNode = (props) => {
    const MNode = React__default["default"].useMemo(() => /* @__PURE__ */ React__default["default"].createElement(Node, {
      ...props
    }), [JSON.stringify(props)]);
    return MNode;
  };
  const Node = ({ components, child }) => {
    const { children, ...props } = child;
    switch (child.type) {
      case "h1":
      case "h2":
      case "h3":
      case "h4":
      case "h5":
      case "h6":
      case "p":
      case "blockquote":
      case "ol":
      case "ul":
      case "li":
        if (components[child.type]) {
          const Component2 = components[child.type];
          return /* @__PURE__ */ React__default["default"].createElement(Component2, {
            ...props
          }, /* @__PURE__ */ React__default["default"].createElement(TinaMarkdown, {
            components,
            content: children
          }));
        }
        return React__default["default"].createElement(child.type, {
          children: /* @__PURE__ */ React__default["default"].createElement(TinaMarkdown, {
            components,
            content: children
          })
        });
      case "lic":
        if (components.lic) {
          const Component2 = components.lic;
          return /* @__PURE__ */ React__default["default"].createElement(Component2, {
            ...props
          }, /* @__PURE__ */ React__default["default"].createElement(TinaMarkdown, {
            components,
            content: children
          }));
        }
        return /* @__PURE__ */ React__default["default"].createElement("div", null, /* @__PURE__ */ React__default["default"].createElement(TinaMarkdown, {
          components,
          content: child.children
        }));
      case "img":
        if (components[child.type]) {
          const Component2 = components[child.type];
          return /* @__PURE__ */ React__default["default"].createElement(Component2, {
            ...props
          });
        }
        return /* @__PURE__ */ React__default["default"].createElement("img", {
          src: child.url,
          alt: child.caption
        });
      case "a":
        if (components[child.type]) {
          const Component2 = components[child.type];
          return /* @__PURE__ */ React__default["default"].createElement(Component2, {
            ...props
          }, /* @__PURE__ */ React__default["default"].createElement(TinaMarkdown, {
            components,
            content: children
          }));
        }
        return /* @__PURE__ */ React__default["default"].createElement("a", {
          href: child.url
        }, /* @__PURE__ */ React__default["default"].createElement(TinaMarkdown, {
          components,
          content: children
        }));
      case "code_block":
        const value = child.value;
        if (components[child.type]) {
          const Component2 = components[child.type];
          return /* @__PURE__ */ React__default["default"].createElement(Component2, {
            ...props
          });
        }
        return /* @__PURE__ */ React__default["default"].createElement("pre", null, /* @__PURE__ */ React__default["default"].createElement("code", null, value));
      case "hr":
        if (components[child.type]) {
          const Component2 = components[child.type];
          return /* @__PURE__ */ React__default["default"].createElement(Component2, {
            ...props
          });
        }
        return /* @__PURE__ */ React__default["default"].createElement("hr", null);
      case "break":
        if (components[child.type]) {
          const Component2 = components[child.type];
          return /* @__PURE__ */ React__default["default"].createElement(Component2, {
            ...props
          });
        }
        return /* @__PURE__ */ React__default["default"].createElement("br", null);
      case "text":
        return /* @__PURE__ */ React__default["default"].createElement(Leaf, {
          components,
          ...child
        });
      case "mdxJsxTextElement":
      case "mdxJsxFlowElement":
        const Component = components[child.name];
        if (Component) {
          const props2 = child.props ? child.props : {};
          return /* @__PURE__ */ React__default["default"].createElement(Component, {
            ...props2
          });
        } else {
          const ComponentMissing = components["component_missing"];
          if (ComponentMissing) {
            return /* @__PURE__ */ React__default["default"].createElement(ComponentMissing, {
              name: child.name
            });
          } else {
            return /* @__PURE__ */ React__default["default"].createElement("span", null, `No component provided for ${child.name}`);
          }
        }
      case "maybe_mdx":
        return null;
      case "html":
      case "html_inline":
        if (components[child.type]) {
          const Component2 = components[child.type];
          return /* @__PURE__ */ React__default["default"].createElement(Component2, {
            ...props
          });
        }
        return child.value;
      case "invalid_markdown":
        return /* @__PURE__ */ React__default["default"].createElement("pre", null, child.value);
      default:
        if (typeof child.text === "string") {
          return /* @__PURE__ */ React__default["default"].createElement(Leaf, {
            components,
            ...child
          });
        }
    }
  };
  exports2.TinaMarkdown = TinaMarkdown;
  Object.defineProperties(exports2, { __esModule: { value: true }, [Symbol.toStringTag]: { value: "Module" } });
});
