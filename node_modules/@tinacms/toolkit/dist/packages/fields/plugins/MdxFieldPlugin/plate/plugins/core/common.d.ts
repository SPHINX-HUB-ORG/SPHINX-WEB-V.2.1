/**

*/
import { PlateEditor } from '@udecode/plate-headless';
export declare const plugins: import("@udecode/plate-headless").PlatePlugin<import("@udecode/plate-headless").AnyObject, import("@udecode/plate-headless").Value, PlateEditor<import("@udecode/plate-headless").Value>>[];
export declare const insertInlineElement: (editor: any, inlineElement: any) => void;
export declare const insertBlockElement: (editor: any, blockElement: any) => void;
export declare const helpers: {
    isNodeActive: (editor: any, type: any) => boolean;
    isMarkActive: (editor: any, type: any) => boolean;
    isListActive: (editor: any, type: any) => boolean;
    currentNodeSupportsMDX: (editor: PlateEditor) => import("@udecode/plate-headless").TNodeEntry<import("@udecode/plate-headless").ENode<import("@udecode/plate-headless").Value>>;
    normalize: (node: any) => any;
};
