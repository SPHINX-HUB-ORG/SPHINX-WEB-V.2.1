/**

*/
import { PlateEditor } from '@udecode/plate-headless';
import type { MdxTemplate } from '../../types';
export declare const ELEMENT_MDX_INLINE = "mdxJsxTextElement";
export declare const ELEMENT_MDX_BLOCK = "mdxJsxFlowElement";
export declare const createMdxInlinePlugin: <OP = {
    templates: MdxTemplate[];
}, OV extends import("@udecode/plate-headless").Value = import("@udecode/plate-headless").Value, OE extends PlateEditor<OV> = PlateEditor<OV>>(override?: Partial<import("@udecode/plate-headless").PlatePlugin<import("@udecode/plate-headless").NoInfer<OP>, OV, OE>>, overrideByKey?: import("@udecode/plate-headless").OverrideByKey<OV, OE>) => import("@udecode/plate-headless").PlatePlugin<import("@udecode/plate-headless").NoInfer<OP>, OV, OE>;
export declare const createMdxBlockPlugin: <OP = import("@udecode/plate-headless").AnyObject, OV extends import("@udecode/plate-headless").Value = import("@udecode/plate-headless").Value, OE extends PlateEditor<OV> = PlateEditor<OV>>(override?: Partial<import("@udecode/plate-headless").PlatePlugin<import("@udecode/plate-headless").NoInfer<OP>, OV, OE>>, overrideByKey?: import("@udecode/plate-headless").OverrideByKey<OV, OE>) => import("@udecode/plate-headless").PlatePlugin<import("@udecode/plate-headless").NoInfer<OP>, OV, OE>;
export declare const insertMDX: (editor: PlateEditor, value: MdxTemplate) => void;
