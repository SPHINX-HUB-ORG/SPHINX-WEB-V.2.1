/**



*/
import { PlateEditor } from '@udecode/plate-headless';
export declare const ELEMENT_MAYBE_MDX = "maybe_mdx";
export declare const isSelectionInMaybeMDX: (editor: PlateEditor) => boolean;
export declare const findMaybeMDX: (editor: PlateEditor) => import("@udecode/plate-headless").TNodeEntry<import("@udecode/plate-headless").ENode<import("@udecode/plate-headless").Value>>;
/**
 * `ELEMENT_MAYBE_MDX` is inserted by a forward slash (`/`)
 * that indicates we may drop in an MDX component from the combobox.
 * This can probably be customized to whatever command
 * the developer wants (eg. `<`)
 */
export declare const withMaybeMDX: (editor: PlateEditor) => PlateEditor<import("@udecode/plate-headless").Value>;
export declare const createSlashPlugin: <OP = import("@udecode/plate-headless").AnyObject, OV extends import("@udecode/plate-headless").Value = import("@udecode/plate-headless").Value, OE extends PlateEditor<OV> = PlateEditor<OV>>(override?: Partial<import("@udecode/plate-headless").PlatePlugin<import("@udecode/plate-headless").NoInfer<OP>, OV, OE>>, overrideByKey?: import("@udecode/plate-headless").OverrideByKey<OV, OE>) => import("@udecode/plate-headless").PlatePlugin<import("@udecode/plate-headless").NoInfer<OP>, OV, OE>;
