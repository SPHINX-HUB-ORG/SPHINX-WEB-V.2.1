import React, { useState, useContext } from "react";
const LOCALSTORAGEKEY = "tina.isEditing";
const isSSR = typeof window === "undefined";
const isEditing = () => {
  if (!isSSR) {
    const isEdit = window.localStorage && window.localStorage.getItem(LOCALSTORAGEKEY);
    return isEdit && isEdit === "true";
  }
  return false;
};
const setEditing = (isEditing2) => {
  if (!isSSR) {
    window.localStorage.setItem(LOCALSTORAGEKEY, isEditing2 ? "true" : "false");
  }
};
const EditContext = React.createContext({
  edit: isEditing(),
  setEdit: void 0,
  formsRegistering: false,
  setFormsRegistering: void 0
});
const TinaDataContext = React.createContext({
  state: {
    payload: {}
  },
  setRequest: () => {
  },
  isLoading: false,
  isDummyContainer: true
});
const EditProvider = ({
  children
}) => {
  const [edit, setEditState] = useState(isEditing());
  const [formsRegistering, setFormsRegistering] = useState(false);
  const setEdit = (edit2) => {
    setEditState(edit2);
    setEditing(edit2);
  };
  return /* @__PURE__ */ React.createElement(EditContext.Provider, {
    value: { edit, setEdit, formsRegistering, setFormsRegistering }
  }, children);
};
const useEditState = () => {
  const { edit, setEdit } = useContext(EditContext);
  if (!setEdit) {
    throw new Error("Unable to find `TinaProvider`; did you forget to add the TinaCMS container to your app root?  See our setup docs: https://tina.io/docs/introduction/tina-init/#adding-tina");
  }
  return { edit, setEdit };
};
export { EditContext, EditProvider, TinaDataContext, isEditing, setEditing, useEditState };
