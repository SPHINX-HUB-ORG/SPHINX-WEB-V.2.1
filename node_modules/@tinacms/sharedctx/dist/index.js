(function(global, factory) {
  typeof exports === "object" && typeof module !== "undefined" ? factory(exports, require("react")) : typeof define === "function" && define.amd ? define(["exports", "react"], factory) : (global = typeof globalThis !== "undefined" ? globalThis : global || self, factory(global["@tinacms/sharedctx"] = {}, global.NOOP));
})(this, function(exports2, React) {
  "use strict";
  function _interopDefaultLegacy(e) {
    return e && typeof e === "object" && "default" in e ? e : { "default": e };
  }
  var React__default = /* @__PURE__ */ _interopDefaultLegacy(React);
  const LOCALSTORAGEKEY = "tina.isEditing";
  const isSSR = typeof window === "undefined";
  const isEditing = () => {
    if (!isSSR) {
      const isEdit = window.localStorage && window.localStorage.getItem(LOCALSTORAGEKEY);
      return isEdit && isEdit === "true";
    }
    return false;
  };
  const setEditing = (isEditing2) => {
    if (!isSSR) {
      window.localStorage.setItem(LOCALSTORAGEKEY, isEditing2 ? "true" : "false");
    }
  };
  const EditContext = React__default["default"].createContext({
    edit: isEditing(),
    setEdit: void 0,
    formsRegistering: false,
    setFormsRegistering: void 0
  });
  const TinaDataContext = React__default["default"].createContext({
    state: {
      payload: {}
    },
    setRequest: () => {
    },
    isLoading: false,
    isDummyContainer: true
  });
  const EditProvider = ({
    children
  }) => {
    const [edit, setEditState] = React.useState(isEditing());
    const [formsRegistering, setFormsRegistering] = React.useState(false);
    const setEdit = (edit2) => {
      setEditState(edit2);
      setEditing(edit2);
    };
    return /* @__PURE__ */ React__default["default"].createElement(EditContext.Provider, {
      value: { edit, setEdit, formsRegistering, setFormsRegistering }
    }, children);
  };
  const useEditState = () => {
    const { edit, setEdit } = React.useContext(EditContext);
    if (!setEdit) {
      throw new Error("Unable to find `TinaProvider`; did you forget to add the TinaCMS container to your app root?  See our setup docs: https://tina.io/docs/introduction/tina-init/#adding-tina");
    }
    return { edit, setEdit };
  };
  exports2.EditContext = EditContext;
  exports2.EditProvider = EditProvider;
  exports2.TinaDataContext = TinaDataContext;
  exports2.isEditing = isEditing;
  exports2.setEditing = setEditing;
  exports2.useEditState = useEditState;
  Object.defineProperties(exports2, { __esModule: { value: true }, [Symbol.toStringTag]: { value: "Module" } });
});
