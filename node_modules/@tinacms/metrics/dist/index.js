var __create = Object.create;
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  __markAsModule(target);
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toModule = (module2) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", module2 && module2.__esModule && "default" in module2 ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};

// pnp:/home/runner/work/tinacms/tinacms/packages/@tinacms/metrics/src/index.ts
__export(exports, {
  Telemetry: () => Telemetry
});

// pnp:/home/runner/work/tinacms/tinacms/packages/@tinacms/metrics/src/telemetry/telemetry.ts
var import_crypto = __toModule(require("crypto"));

// pnp:/home/runner/work/tinacms/tinacms/packages/@tinacms/metrics/src/telemetry/getId.ts
var import_child_process = __toModule(require("child_process"));
function _getProjectIdByGit() {
  try {
    const originBuffer = (0, import_child_process.execSync)(`git config --local --get remote.origin.url`, {
      timeout: 1e3,
      stdio: `pipe`
    });
    return String(originBuffer).trim();
  } catch (_) {
    return null;
  }
}
function getID() {
  return _getProjectIdByGit() || process.env.REPOSITORY_URL || process.cwd();
}

// pnp:/home/runner/work/tinacms/tinacms/packages/@tinacms/metrics/src/telemetry/telemetry.ts
var import_isomorphic_fetch = __toModule(require("isomorphic-fetch"));

// pnp:/home/runner/work/tinacms/tinacms/packages/@tinacms/metrics/src/telemetry/getVersion.ts
var import_fs_extra = __toModule(require("fs-extra"));
var import_child_process2 = __toModule(require("child_process"));
var import_path = __toModule(require("path"));
function _executeCommand(cmd) {
  try {
    const originBuffer = (0, import_child_process2.execSync)(cmd, {
      timeout: 1e3,
      stdio: `pipe`
    });
    return String(originBuffer).trim();
  } catch (_) {
    return null;
  }
}
var _getPack = (rootDir) => {
  let pack = {};
  try {
    const rawJSON = (0, import_fs_extra.readFileSync)((0, import_path.join)(rootDir, "package.json")).toString();
    pack = JSON.parse(rawJSON);
  } catch (_e) {
  }
  return pack;
};
var getTinaVersion = () => {
  var _a;
  const pack = _getPack(process.cwd());
  const version = (_a = pack == null ? void 0 : pack.dependencies) == null ? void 0 : _a.tinacms;
  return version || "";
};
var getTinaCliVersion = () => {
  var _a, _b;
  const pack = _getPack(process.cwd());
  const version = ((_a = pack == null ? void 0 : pack.devDependencies) == null ? void 0 : _a["@tinacms/cli"]) || ((_b = pack == null ? void 0 : pack.dependencies) == null ? void 0 : _b["@tinacms/cli"]);
  return version || "";
};
var getYarnVersion = () => {
  return _executeCommand("yarn -v") || "";
};
var getNpmVersion = () => {
  return _executeCommand("npm -v") || "";
};

// pnp:/home/runner/work/tinacms/tinacms/packages/@tinacms/metrics/src/telemetry/telemetry.ts
var TINA_METRICS_ENDPOINT = "https://metrics.tina.io/record";
var Telemetry = class {
  constructor({ disabled }) {
    this.oneWayHash = (payload) => {
      const hash = (0, import_crypto.createHash)("sha256");
      hash.update(payload);
      return hash.digest("hex");
    };
    this.submitRecord = async ({ event }) => {
      if (this.isDisabled) {
        return;
      }
      try {
        const id = this.projectId;
        const body = {
          partitionKey: id,
          data: {
            anonymousId: id,
            event: event.name,
            properties: __spreadProps(__spreadValues({}, event), {
              nodeVersion: process.version,
              tinaCliVersion: getTinaCliVersion(),
              tinaVersion: getTinaVersion(),
              yarnVersion: getYarnVersion(),
              npmVersion: getNpmVersion(),
              CI: Boolean(process.env.CI)
            })
          }
        };
        await (0, import_isomorphic_fetch.default)(TINA_METRICS_ENDPOINT, {
          method: "POST",
          body: JSON.stringify(body),
          headers: { "content-type": "application/json" }
        });
      } catch (_e) {
      }
    };
    this.projectIDRaw = getID();
    const { NO_TELEMETRY } = process.env;
    this._disabled = NO_TELEMETRY === "1" || NO_TELEMETRY === "true" || Boolean(disabled);
  }
  get projectId() {
    return this.oneWayHash(this.projectIDRaw);
  }
  get isDisabled() {
    return this._disabled;
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Telemetry
});
