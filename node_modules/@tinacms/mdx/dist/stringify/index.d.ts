/**



*/
import { MdxJsxTextElement, MdxJsxFlowElement } from 'mdast-util-mdx-jsx';
import type { RichTextType } from '@tinacms/schema-tools';
import type * as Md from 'mdast';
import type * as Plate from '../parse/plate';
declare module 'mdast' {
    interface StaticPhrasingContentMap {
        mdxJsxTextElement: MdxJsxTextElement;
    }
    interface PhrasingContentMap {
        mdxJsxTextElement: MdxJsxTextElement;
    }
    interface BlockContentMap {
        mdxJsxFlowElement: MdxJsxFlowElement;
    }
    interface ContentMap {
        mdxJsxFlowElement: MdxJsxFlowElement;
    }
}
export declare const stringifyMDX: (value: Plate.RootElement, field: RichTextType, imageCallback: (url: string) => string) => string | undefined;
export declare type Pattern = {
    start: string;
    end: string;
    name: string;
    templateName: string;
    type: 'block' | 'leaf';
};
export declare const toTinaMarkdown: (tree: Md.Root, field: RichTextType) => string;
export declare const rootElement: (content: Plate.RootElement, field: RichTextType, imageCallback: (url: string) => string) => Md.Root;
export declare const blockElement: (content: Plate.BlockElement, field: RichTextType, imageCallback: (url: string) => string) => Md.Content | null;
export declare type Marks = 'strong' | 'emphasis' | 'inlineCode';
export declare const getMarks: (content: Plate.InlineElement) => Marks[];
